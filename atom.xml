<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://i.plbear.com</id>
    <title>Plbear | Cuz Penguin QQ</title>
    <updated>2020-09-04T07:07:40.559Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://i.plbear.com"/>
    <link rel="self" href="https://i.plbear.com/atom.xml"/>
    <subtitle>Food And Freedom. Make my own world a better place.</subtitle>
    <logo>https://i.plbear.com/images/avatar.png</logo>
    <icon>https://i.plbear.com/favicon.ico</icon>
    <rights>All rights reserved 2020, Plbear | Cuz Penguin QQ</rights>
    <entry>
        <title type="html"><![CDATA[Python资源大全]]></title>
        <id>https://i.plbear.com/post/python-that-is-all-about-python</id>
        <link href="https://i.plbear.com/post/python-that-is-all-about-python">
        </link>
        <updated>2019-08-10T14:56:26.000Z</updated>
        <content type="html"><![CDATA[<div class="Box-body">
        <article class="markdown-body entry-content p-5" itemprop="text">
<h3><a id="user-content-环境管理" class="anchor" aria-hidden="true" href="#环境管理"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>环境管理</h3>
<p>管理 Python 版本和环境的工具</p>
<ul>
<li>p：非常简单的交互式 python 版本管理工具。<a href="https://github.com/qw3rtman/p">官网</a></li>
<li>pyenv：简单的 Python 版本管理工具。<a href="https://github.com/yyuu/pyenv">官网</a></li>
<li>Vex：可以在虚拟环境中执行命令。<a href="https://github.com/sashahart/vex">官网</a></li>
<li>virtualenv：创建独立 Python 环境的工具。<a href="https://pypi.python.org/pypi/virtualenv" rel="nofollow">官网</a></li>
<li>virtualenvwrapper：virtualenv 的一组扩展。<a href="https://pypi.python.org/pypi/virtualenvwrapper" rel="nofollow">官网</a></li>
<li>buildout：在隔离环境初始化后使用声明性配置管理。<a href="http://www.buildout.org/en/latest" rel="nofollow">官网</a></li>
</ul>
<h3><a id="user-content-包管理" class="anchor" aria-hidden="true" href="#包管理"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>包管理</h3>
<p>管理包和依赖的工具。</p>
<ul>
<li>pip：Python 包和依赖关系管理工具。<a href="https://pip.pypa.io/" rel="nofollow">官网</a></li>
<li>pip-tools：保证 Python 包依赖关系更新的一组工具。<a href="https://github.com/nvie/pip-tools">官网</a></li>
<li>pipenv：Python 官方推荐的新一代包管理工具。<a href="https://github.com/pypa/pipenv">官网</a></li>
<li>poetry: 可完全取代 setup.py 的包管理工具。<a href="https://poetry.eustace.io" rel="nofollow">官网</a></li>
<li>conda：跨平台，Python 二进制包管理工具。<a href="https://github.com/conda/conda/">官网</a></li>
<li>Curdling：管理 Python 包的命令行工具。<a href="http://clarete.li/curdling/" rel="nofollow">官网</a></li>
<li>wheel：Python 分发的新标准，意在取代 eggs。<a href="http://pythonwheels.com/" rel="nofollow">官网</a></li>
</ul>
<h3><a id="user-content-包仓库" class="anchor" aria-hidden="true" href="#包仓库"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>包仓库</h3>
<p>本地 PyPI 仓库服务和代理。</p>
<ul>
<li><a href="https://pypi.org/" rel="nofollow">warehouse</a>：下一代 PyPI。<a href="https://github.com/pypa/warehouse">官网</a></li>
<li>bandersnatch：PyPA 提供的 PyPI 镜像工具。<a href="https://bitbucket.org/pypa/bandersnatch" rel="nofollow">官网</a></li>
<li>devpi：PyPI 服务和打包/测试/分发工具。<a href="http://doc.devpi.net/" rel="nofollow">官网</a></li>
<li>localshop：本地 PyPI 服务（自定义包并且自动对 PyPI 镜像）。<a href="https://github.com/mvantellingen/localshop">官网</a></li>
</ul>
<h3><a id="user-content-分发" class="anchor" aria-hidden="true" href="#分发"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>分发</h3>
<p>打包为可执行文件以便分发。</p>
<ul>
<li>PyInstaller：将 Python 程序转换成独立的执行文件（跨平台）。<a href="https://github.com/pyinstaller/pyinstaller">官网</a></li>
<li>cx_Freeze：将python程序转换为带有一个动态链接库的可执行文件。<a href="https://cx-freeze.readthedocs.io/en/latest/index.html" rel="nofollow">官网</a></li>
<li>dh-virtualenv：构建并将 virtualenv 虚拟环境作为一个 Debian 包来发布。<a href="http://dh-virtualenv.readthedocs.org/" rel="nofollow">官网</a></li>
<li>Nuitka：将脚本、模块、包编译成可执行文件或扩展模块。<a href="http://nuitka.net/" rel="nofollow">官网</a></li>
<li>py2app：将 Python 脚本变为独立软件包（Mac OS X）。<a href="http://pythonhosted.org/py2app/" rel="nofollow">官网</a></li>
<li>py2exe：将 Python 脚本变为独立软件包（Windows）。<a href="http://www.py2exe.org/" rel="nofollow">官网</a></li>
<li>pynsist：一个用来创建 Windows 安装程序的工具，可以在安装程序中打包 Python 本身。<a href="http://pynsist.readthedocs.org/" rel="nofollow">官网</a></li>
</ul>
<h3><a id="user-content-构建工具" class="anchor" aria-hidden="true" href="#构建工具"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>构建工具</h3>
<p>将源码编译成软件。</p>
<ul>
<li>buildout：一个构建系统，从多个组件来创建，组装和部署应用。<a href="http://www.buildout.org/" rel="nofollow">官网</a></li>
<li>BitBake：针对嵌入式 Linux 的类似 make 的构建工具。<a href="http://www.yoctoproject.org/docs/1.6/bitbake-user-manual/bitbake-user-manual.html" rel="nofollow">官网</a></li>
<li>fabricate：对任何语言自动找到依赖关系的构建工具。<a href="https://code.google.com/archive/p/fabricate" rel="nofollow">官网</a></li>
<li>PlatformIO：多平台命令行构建工具。<a href="https://github.com/platformio/platformio">官网</a></li>
<li>PyBuilder：纯 Python 实现的持续化构建工具。<a href="https://github.com/pybuilder/pybuilder">官网</a></li>
<li>SCons：软件构建工具。<a href="http://www.scons.org/" rel="nofollow">官网</a></li>
</ul>
<h3><a id="user-content-交互式解析器" class="anchor" aria-hidden="true" href="#交互式解析器"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>交互式解析器</h3>
<p>交互式 Python 解析器。</p>
<ul>
<li>IPython：功能丰富的工具，非常有效的使用交互式 Python。<a href="https://github.com/ipython/ipython">官网</a></li>
<li><a href="http://hao.jobbole.com/bpython/" rel="nofollow">bpython</a>：界面丰富的 Python 解析器。<a href="http://bpython-interpreter.org/" rel="nofollow">官网</a></li>
<li>ptpython：高级交互式 Python 解析器， 构建于 <a href="https://github.com/jonathanslenders/python-prompt-toolkit">python-prompt-toolkit</a> 之上。<a href="https://github.com/jonathanslenders/ptpython">官网</a></li>
</ul>
<h3><a id="user-content-文件" class="anchor" aria-hidden="true" href="#文件"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>文件</h3>
<p>文件管理和 MIME（多用途的网际邮件扩充协议）类型检测。</p>
<ul>
<li>aiofiles：基于 asyncio，提供文件异步操作。<a href="https://github.com/Tinche/aiofiles">官网</a></li>
<li>imghdr：（Python 标准库）检测图片类型。<a href="https://docs.python.org/2/library/imghdr.html" rel="nofollow">官网</a></li>
<li>mimetypes：（Python 标准库）将文件名映射为 MIME 类型。<a href="https://docs.python.org/2/library/mimetypes.html" rel="nofollow">官网</a></li>
<li>path.py：对 os.path 进行封装的模块。<a href="https://github.com/jaraco/path.py">官网</a></li>
<li>pathlib：（Python3.4+ 标准库）跨平台的、面向对象的路径操作库。<a href="https://pathlib.readthedocs.org/en/pep428/" rel="nofollow">官网</a></li>
<li>python-magic：文件类型检测的第三方库 libmagic 的 Python 接口。<a href="https://github.com/ahupp/python-magic">官网</a></li>
<li>Unipath：用面向对象的方式操作文件和目录。<a href="https://github.com/mikeorr/Unipath">官网</a></li>
<li>watchdog：管理文件系统事件的 API 和 shell 工具。<a href="https://github.com/gorakhargosh/watchdog">官网</a></li>
</ul>
<h3><a id="user-content-日期和时间" class="anchor" aria-hidden="true" href="#日期和时间"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>日期和时间</h3>
<p>操作日期和时间的类库。</p>
<ul>
<li>arrow：更好的 Python 日期时间操作类库。<a href="https://github.com/crsmithdev/arrow">官网</a></li>
<li>Chronyk：Python 3 的类库，用于解析手写格式的时间和日期。<a href="https://github.com/KoffeinFlummi/Chronyk">官网</a></li>
<li>dateutil：Python datetime 模块的扩展。<a href="https://pypi.python.org/pypi/python-dateutil" rel="nofollow">官网</a></li>
<li>delorean：解决 Python 中有关日期处理的棘手问题的库。<a href="https://github.com/myusuf3/delorean/">官网</a></li>
<li>maya：人性化的时间处理库。<a href="https://github.com/kennethreitz/maya">官网</a></li>
<li>moment：一个用来处理时间和日期的 Python 库。灵感来自于 Moment.js。<a href="https://github.com/zachwill/moment">官网</a></li>
<li>pendulum：一个比 arrow 更具有明确的，可预测的行为的时间操作库。<a href="https://github.com/sdispater/pendulum">官网</a></li>
<li>PyTime：一个简单易用的 Python 模块，用于通过字符串来操作日期/时间。<a href="https://github.com/shinux/PyTime">官网</a></li>
<li>pytz：现代以及历史版本的世界时区定义。将时区数据库引入 Python。<a href="https://launchpad.net/pytz" rel="nofollow">官网</a></li>
<li>when.py：提供用户友好的函数来帮助用户进行常用的日期和时间操作。<a href="https://github.com/dirn/When.py">官网</a></li>
</ul>
<h3><a id="user-content-文本处理" class="anchor" aria-hidden="true" href="#文本处理"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>文本处理</h3>
<p>用于解析和操作文本的库。</p>
<ul>
<li>通用
<ul>
<li><a href="http://hao.jobbole.com/chardet/" rel="nofollow">chardet</a>：字符编码检测器，兼容 Python2 和 Python3。<a href="https://github.com/chardet/chardet">官网</a></li>
<li>difflib：(Python 标准库)帮助我们进行差异化比较。<a href="https://docs.python.org/2/library/difflib.html" rel="nofollow">官网</a></li>
<li>ftfy：让 Unicode 文本更完整更连贯。<a href="https://github.com/LuminosoInsight/python-ftfy">官网</a></li>
<li>fuzzywuzzy：模糊字符串匹配。<a href="https://github.com/seatgeek/fuzzywuzzy">官网</a></li>
<li>Levenshtein：快速计算编辑距离以及字符串的相似度。<a href="https://github.com/ztane/python-Levenshtein/">官网</a></li>
<li>pangu.py：在中日韩语字符和数字字母之间添加空格。<a href="https://github.com/vinta/pangu.py">官网</a></li>
<li>pypinyin：汉字拼音转换工具 Python 版。<a href="https://github.com/mozillazg/python-pinyin">官网</a></li>
<li>shortuuid：一个生成器库，用以生成简洁的，明白的，URL 安全的 UUID。<a href="https://github.com/stochastic-technologies/shortuuid">官网</a></li>
<li><a href="https://github.com/simplejson/simplejson">simplejson</a>：Python 的 JSON 编码、解码器。<a href="https://simplejson.readthedocs.io/en/latest/" rel="nofollow">官网</a></li>
<li>unidecode：Unicode 文本的 ASCII 转换形式 。<a href="https://pypi.python.org/pypi/Unidecode" rel="nofollow">官网</a></li>
<li>uniout：打印可读的字符，而不是转义的字符串。<a href="https://github.com/moskytw/uniout">官网</a></li>
<li>xpinyin：一个用于把汉字转换为拼音的库。<a href="https://github.com/lxneng/xpinyin">官网</a></li>
<li>yfiglet-figlet：<a href="https://github.com/pwaller/pyfiglet">pyfiglet -figlet</a> 的 Python 实现。</li>
<li>flashtext: 一个高效的文本查找替换库。<a href="https://github.com/vi3k6i5/flashtext">官网</a></li>
</ul>
</li>
<li>Slug 化
<ul>
<li>awesome-slugify：一个 Python slug 化库，可以保持 Unicode。<a href="https://github.com/dimka665/awesome-slugify">官网</a></li>
<li>python-slugify：Python slug 化库，可以把 unicode 转化为 ASCII。<a href="https://github.com/un33k/python-slugify">官网</a></li>
<li>unicode-slugify：一个 slug 工具，可以生成 unicode slugs ,需要依赖 Django 。<a href="https://github.com/mozilla/unicode-slugify">官网</a></li>
</ul>
</li>
<li>解析器
<ul>
<li>phonenumbers：解析，格式化，储存，验证电话号码。<a href="https://github.com/daviddrysdale/python-phonenumbers">官网</a></li>
<li>PLY：lex 和 yacc 解析工具的 Python 实现。<a href="http://www.dabeaz.com/ply/" rel="nofollow">官网</a></li>
<li>Pygments：通用语法高亮工具。<a href="http://pygments.org/" rel="nofollow">官网</a></li>
<li>pyparsing：生成通用解析器的框架。<a href="http://pyparsing.wikispaces.com/" rel="nofollow">官网</a></li>
<li>python-nameparser：把一个人名分解为几个独立的部分。<a href="https://github.com/derek73/python-nameparser">官网</a></li>
<li>python-user-agents：浏览器 user agent 解析器。<a href="https://github.com/selwin/python-user-agents">官网</a></li>
<li>sqlparse：一个无验证的 SQL 解析器。<a href="https://sqlparse.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
</ul>
</li>
</ul>
<h3><a id="user-content-特殊文本格式处理" class="anchor" aria-hidden="true" href="#特殊文本格式处理"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>特殊文本格式处理</h3>
<p>一些用来解析和操作特殊文本格式的库。</p>
<ul>
<li>通用
<ul>
<li>tablib：一个用来处理中表格数据的模块。<a href="https://github.com/kennethreitz/tablib">官网</a></li>
</ul>
</li>
<li>Office
<ul>
<li>Marmir：把输入的 Python 数据结构转换为电子表单。<a href="https://github.com/brianray/mm">官网</a></li>
<li>openpyxl：一个用来读写 Excel 2010 xlsx/xlsm/xltx/xltm 文件的库。<a href="https://openpyxl.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
<li>pyexcel：一个提供统一 API，用来读写，操作 Excel 文件的库。<a href="https://github.com/pyexcel/pyexcel">官网</a></li>
<li>python-docx：读取，查询以及修改 Microsoft Word 2007/2008 docx 文件。<a href="https://github.com/python-openxml/python-docx">官网</a></li>
<li>relatorio：模板化 OpenDocument 文件。<a href="http://relatorio.tryton.org/" rel="nofollow">官网</a></li>
<li>unoconv：在 LibreOffice/OpenOffice 支持的任意文件格式之间进行转换。<a href="https://github.com/dagwieers/unoconv">官网</a></li>
<li>XlsxWriter：一个用于创建 Excel .xlsx 文件的 Python 模块。<a href="https://xlsxwriter.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
<li>xlwings：一个使得在 Excel 中方便调用 Python 的库（反之亦然），基于 BSD 协议。<a href="http://xlwings.org/" rel="nofollow">官网</a></li>
<li><a href="http://hao.jobbole.com/xlwt/" rel="nofollow">xlwt</a>：读写 Excel 文件的数据和格式信息。<a href="https://github.com/python-excel/xlwt">官网</a> / <a href="https://github.com/python-excel/xlrd">xlrd</a></li>
</ul>
</li>
<li>PDF
<ul>
<li>PDFMiner：一个用于从 PDF 文档中抽取信息的工具。<a href="https://github.com/euske/pdfminer">官网</a></li>
<li>PyPDF2：一个可以分割，合并和转换 PDF 页面的库。<a href="https://github.com/mstamy2/PyPDF2">官网</a></li>
<li>ReportLab：快速创建富文本 PDF 文档。<a href="http://www.reportlab.com/opensource/" rel="nofollow">官网</a></li>
</ul>
</li>
<li>Markdown
<ul>
<li>Mistune：快速并且功能齐全的纯 Python 实现的 Markdown 解析器。<a href="https://github.com/lepture/mistune">官网</a></li>
<li>Python-Markdown：John Gruber’s Markdown 的 Python 版实现。<a href="https://github.com/waylan/Python-Markdown">官网</a></li>
<li>Python-Markdown2：纯 Python 实现的 Markdown 解析器，比 Python-Markdown 更快，更准确，可扩展。<a href="https://github.com/trentm/python-markdown2">官网</a></li>
</ul>
</li>
<li>YAML
<ul>
<li>PyYAML：Python 版本的 YAML 解析器。<a href="http://pyyaml.org/" rel="nofollow">官网</a></li>
</ul>
</li>
<li>CSV
<ul>
<li>csvkit：用于转换和操作 CSV 的工具。<a href="https://github.com/wireservice/csvkit">官网</a></li>
</ul>
</li>
<li>Archive
<ul>
<li>unp：一个用来方便解包归档文件的命令行工具。<a href="https://github.com/mitsuhiko/unp">官网</a></li>
</ul>
</li>
</ul>
<h3><a id="user-content-自然语言处理" class="anchor" aria-hidden="true" href="#自然语言处理"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>自然语言处理</h3>
<p>用来处理人类语言的库。</p>
<ul>
<li><a href="http://hao.jobbole.com/nltk/" rel="nofollow">NLTK</a>：一个先进的平台，用以构建处理人类语言数据的 Python 程序。<a href="http://www.nltk.org/" rel="nofollow">官网</a></li>
<li>jieba：中文分词工具。<a href="https://github.com/fxsjy/jieba">官网</a></li>
<li>langid.py：独立的语言识别系统。<a href="https://github.com/saffsd/langid.py">官网</a></li>
<li>Pattern：Python 网络信息挖掘模块。<a href="http://www.clips.ua.ac.be/pattern" rel="nofollow">官网</a></li>
<li>SnowNLP：一个用来处理中文文本的库。<a href="https://github.com/isnowfy/snownlp">官网</a></li>
<li>TextBlob：为进行普通自然语言处理任务提供一致的 API。<a href="http://textblob.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
<li>TextGrocery：一简单高效的短文本分类工具，基于 LibLinear 和 Jieba。<a href="https://github.com/2shou/TextGrocery">官网</a></li>
<li>&nbsp; thulac:清华大学自然语言处理与社会人文计算实验室研制推出的一套中文词法分析工具包<a href="https://github.com/thunlp/THULAC-Python">官网</a></li>
</ul>
<h3><a id="user-content-文档" class="anchor" aria-hidden="true" href="#文档"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>文档</h3>
<p>用以生成项目文档的库。</p>
<ul>
<li><a href="http://hao.jobbole.com/sphinx/" rel="nofollow">Sphinx</a>：Python 文档生成器。<a href="http://www.sphinx-doc.org/en/latest/" rel="nofollow">官网</a></li>
<li>awesome-sphinxdoc：<a href="https://github.com/yoloseem/awesome-sphinxdoc">官网</a></li>
<li>MkDocs：对 Markdown 友好的文档生成器。<a href="http://www.mkdocs.org/" rel="nofollow">官网</a></li>
<li>pdoc：一个可以替换 Epydoc 的库，可以自动生成 Python 库的 API 文档。<a href="https://github.com/BurntSushi/pdoc">官网</a></li>
<li>Pycco：文学编程（literate-programming）风格的文档生成器。<a href="https://github.com/pycco-docs/pycco">官网</a></li>
<li>readthedocs：一个基于 Sphinx/MkDocs 的在线文档托管系统，对开源项目免费开放使用。<a href="https://github.com/rtfd/readthedocs.org/">官网</a></li>
</ul>
<h3><a id="user-content-配置" class="anchor" aria-hidden="true" href="#配置"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>配置</h3>
<p>用来保存和解析配置的库。</p>
<ul>
<li>config：<a href="https://docs.python.org/2/library/logging.html" rel="nofollow">logging</a> 模块作者写的分级配置模块。<a href="https://www.red-dove.com/config-doc/" rel="nofollow">官网</a></li>
<li>ConfigObj：INI 文件解析器，带验证功能。<a href="http://www.voidspace.org.uk/python/configobj.html" rel="nofollow">官网</a></li>
<li>ConfigParser：(Python 标准库) INI 文件解析器。<a href="https://docs.python.org/2/library/configparser.html" rel="nofollow">官网</a></li>
<li>profig：通过多种格式进行配置，具有数值转换功能。<a href="http://profig.readthedocs.org/en/default/" rel="nofollow">官网</a></li>
<li>python-decouple：将设置和代码完全隔离。<a href="https://github.com/henriquebastos/python-decouple">官网</a></li>
</ul>
<h3><a id="user-content-命令行工具" class="anchor" aria-hidden="true" href="#命令行工具"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>命令行工具</h3>
<p>用于创建命令行程序的库。</p>
<ul>
<li>命令行程序开发
<ul>
<li>asciimatics：跨平台，全屏终端包（即鼠标/键盘输入和彩色，定位文本输出），完整的复杂动画和特殊效果的高级 API。<a href="https://github.com/peterbrittain/asciimatics">官网</a></li>
<li>cement：Python 的命令行程序框架。<a href="http://builtoncement.com/" rel="nofollow">官网</a></li>
<li>click：一个通过组合的方式来创建精美命令行界面的包。<a href="http://click.pocoo.org/dev/" rel="nofollow">官网</a></li>
<li>cliff：一个用于创建命令行程序的框架，可以创建具有多层命令的命令行程序。<a href="http://docs.openstack.org/developer/cliff/" rel="nofollow">官网</a></li>
<li>clint：Python 命令行程序工具。<a href="https://github.com/kennethreitz/clint">官网</a></li>
<li>colorama：跨平台彩色终端文本。<a href="https://pypi.python.org/pypi/colorama" rel="nofollow">官网</a></li>
<li>docopt：Python 风格的命令行参数解析器。<a href="http://docopt.org/" rel="nofollow">官网</a></li>
<li>Gooey：一条命令，将命令行程序变成一个 GUI 程序。<a href="https://github.com/chriskiehl/Gooey">官网</a></li>
<li>python-prompt-toolkit：一个用于构建强大的交互式命令行程序的库。<a href="https://github.com/jonathanslenders/python-prompt-toolkit">官网</a></li>
<li>python-fire：Google 出品的一个基于 Python 类的构建命令行界面的库。<a href="https://github.com/google/python-fire">官网</a></li>
<li><a href="http://hao.jobbole.com/pythonpy/" rel="nofollow">Pythonpy</a>：在命令行中直接执行任何 Python 指令。<a href="https://github.com/Russell91/pythonpy/wiki">官网</a></li>
</ul>
</li>
<li>生产力工具
<ul>
<li>aws-cli：Amazon Web Services 的通用命令行界面。<a href="https://github.com/aws/aws-cli">官网</a></li>
<li>bashplotlib：在终端中进行基本绘图。<a href="https://github.com/glamp/bashplotlib">官网</a></li>
<li>caniusepython3：判断是哪个项目妨碍你你移植到 Python3。<a href="https://github.com/brettcannon/caniusepython3">官网</a></li>
<li>cookiecutter：从 cookiecutters（项目模板）创建项目的一个命令行工具。<a href="https://github.com/audreyr/cookiecutter">官网</a></li>
<li>doitlive：一个用来在终端中进行现场演示的工具。<a href="https://github.com/sloria/doitlive">官网</a></li>
<li>pyftpdlib：一个速度极快和可扩展的 Python FTP 服务库。<a href="https://github.com/giampaolo/pyftpdlib">官网</a></li>
<li>howdoi：通过命令行获取即时的编程问题解答。<a href="https://github.com/gleitz/howdoi">官网</a></li>
<li>httpie：一个命令行 HTTP 客户端，cURL 的替代品，易用性更好。<a href="https://github.com/jkbrzt/httpie">官网</a></li>
<li>PathPicker：从 bash 输出中选出文件。<a href="https://github.com/facebook/PathPicker">官网</a></li>
<li>percol：向 UNIX shell 传统管道概念中加入交互式选择功能。<a href="https://github.com/mooz/percol">官网</a></li>
<li>SAWS：一个加强版的 AWS 命令行。<a href="https://github.com/donnemartin/saws">官网</a></li>
<li>thefuck：修正你之前的命令行指令。<a href="https://github.com/nvbn/thefuck">官网</a></li>
<li>mycli：一个 MySQL 命令行客户端，具有自动补全和语法高亮功能。<a href="https://github.com/dbcli/mycli">官网</a></li>
<li>pgcli：Postgres 命令行工具，具有自动补全和语法高亮功能。<a href="https://github.com/dbcli/pgcli">官网</a></li>
<li>try：一个从来没有更简单的命令行工具，用来试用 python 库。<a href="https://github.com/timofurrer/try">官网</a></li>
</ul>
</li>
</ul>
<h3><a id="user-content-下载器" class="anchor" aria-hidden="true" href="#下载器"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>下载器</h3>
<p>用来进行下载的库.</p>
<ul>
<li>s3cmd：一个用来管理 Amazon S3 和 CloudFront 的命令行工具。<a href="https://github.com/s3tools/s3cmd">官网</a></li>
<li>s4cmd：超级 S3 命令行工具，性能更加强劲。<a href="https://github.com/bloomreach/s4cmd">官网</a></li>
<li>you-get：一个 YouTube/Youku/Niconico 视频下载器，使用 Python3 编写。<a href="https://www.soimort.org/you-get/" rel="nofollow">官网</a></li>
<li>youtube-dl：一个小巧的命令行程序，用来下载 YouTube 视频。<a href="http://rg3.github.io/youtube-dl/" rel="nofollow">官网</a></li>
</ul>
<h3><a id="user-content-图像处理" class="anchor" aria-hidden="true" href="#图像处理"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>图像处理</h3>
<p>用来操作图像的库.</p>
<ul>
<li><a href="http://hao.jobbole.com/pillow/" rel="nofollow">pillow</a>：Pillow 是一个更加易用版的 <a href="http://www.pythonware.com/products/pil/" rel="nofollow">PIL</a>。<a href="http://pillow.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
<li>hmap：图像直方图映射。<a href="https://github.com/rossgoodwin/hmap">官网</a></li>
<li>imgSeek：一个使用视觉相似性搜索一组图片集合的项目。<a href="https://sourceforge.net/projects/imgseek/" rel="nofollow">官网</a></li>
<li>nude.py：裸体检测。<a href="https://github.com/hhatto/nude.py">官网</a></li>
<li>pyBarcode：不借助 PIL 库在 Python 程序中生成条形码。<a href="https://pythonhosted.org/pyBarcode/" rel="nofollow">官网</a></li>
<li>pygram：类似 Instagram 的图像滤镜。<a href="https://github.com/ajkumar25/pygram">官网</a></li>
<li>python-qrcode：一个纯 Python 实现的二维码生成器。<a href="https://github.com/lincolnloop/python-qrcode">官网</a></li>
<li>Quads：基于四叉树的计算机艺术。<a href="https://github.com/fogleman/Quads">官网</a></li>
<li>scikit-image：一个用于（科学）图像处理的 Python 库。<a href="http://scikit-image.org/" rel="nofollow">官网</a></li>
<li>thumbor：一个小型图像服务，具有剪裁，尺寸重设和翻转功能。<a href="https://github.com/thumbor/thumbor">官网</a></li>
<li>wand：<a href="http://www.imagemagick.org/script/magick-wand.php" rel="nofollow">MagickWand</a>的 Python 绑定。MagickWand 是 ImageMagick 的 C API 。<a href="https://github.com/dahlia/wand">官网</a></li>
<li>face_recognition：简单易用的 python 人脸识别库。<a href="https://github.com/ageitgey/face_recognition">官网</a></li>
</ul>
<h3><a id="user-content-ocr" class="anchor" aria-hidden="true" href="#ocr"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>OCR</h3>
<p>光学字符识别库。</p>
<ul>
<li>pyocr：Tesseract 和 Cuneiform 的一个封装(wrapper)。<a href="https://github.com/jflesch/pyocr">官网</a></li>
<li><a href="http://hao.jobbole.com/pytesseract/" rel="nofollow">pytesseract</a>：<a href="https://github.com/tesseract-ocr">Google Tesseract OCR</a> 的另一个封装(wrapper)。<a href="https://github.com/madmaze/pytesseract">官网</a></li>
<li>python-tesseract：<a href="https://github.com/tesseract-ocr">Google Tesseract OCR</a>&nbsp;的一个包装类。</li>
</ul>
<h3><a id="user-content-音频" class="anchor" aria-hidden="true" href="#音频"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>音频</h3>
<p>用来操作音频的库</p>
<ul>
<li>audiolazy：Python 的数字信号处理包。<a href="https://github.com/danilobellini/audiolazy">官网</a></li>
<li>audioread：交叉库 (GStreamer + Core Audio + MAD + FFmpeg) 音频解码。<a href="https://github.com/beetbox/audioread">官网</a></li>
<li>beets：一个音乐库管理工具及 <a href="https://musicbrainz.org/" rel="nofollow">MusicBrainz</a> 标签添加工具。<a href="http://beets.io/" rel="nofollow">官网</a></li>
<li>dejavu：音频指纹提取和识别。<a href="https://github.com/worldveil/dejavu">官网</a></li>
<li><a href="http://hao.jobbole.com/django-elastic-transcoder/" rel="nofollow">django-elastic-transcoder</a>：Django + <a href="http://aws.amazon.com/elastictranscoder/" rel="nofollow">Amazon Elastic Transcoder</a>。<a href="https://github.com/StreetVoice/django-elastic-transcoder">官网</a></li>
<li>eyeD3：一个用来操作音频文件的工具，具体来讲就是包含 ID3 元信息的 MP3 文件。<a href="http://eyed3.nicfit.net/" rel="nofollow">官网</a></li>
<li>id3reader：一个用来读取 MP3 元数据的 Python 模块。<a href="http://nedbatchelder.com/code/modules/id3reader.py" rel="nofollow">官网</a></li>
<li>m3u8：一个用来解析 m3u8 文件的模块。<a href="https://github.com/globocom/m3u8">官网</a></li>
<li>mutagen：一个用来处理音频元数据的 Python 模块。<a href="https://bitbucket.org/lazka/mutagen" rel="nofollow">官网</a></li>
<li>pydub：通过简单、简洁的高层接口来操作音频文件。<a href="https://github.com/jiaaro/pydub">官网</a></li>
<li>pyechonest：<a href="http://developer.echonest.com/" rel="nofollow">Echo Nest</a> API 的 Python 客户端。<a href="https://github.com/echonest/pyechonest">官网</a></li>
<li>talkbox：一个用来处理演讲/信号的 Python 库。<a href="http://scikits.appspot.com/talkbox" rel="nofollow">官网</a></li>
<li>TimeSide：开源 web 音频处理框架。<a href="https://github.com/Parisson/TimeSide">官网</a></li>
<li>tinytag：一个用来读取 MP3, OGG, FLAC 以及 Wave 文件音乐元数据的库。<a href="https://github.com/devsnd/tinytag">官网</a></li>
<li>mingus：一个高级音乐理论和曲谱包，支持 MIDI 文件和回放功能。<a href="http://bspaans.github.io/python-mingus/" rel="nofollow">官网</a></li>
</ul>
<h3><a id="user-content-video" class="anchor" aria-hidden="true" href="#video"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Video</h3>
<p>用来操作视频和 GIF 的库。</p>
<ul>
<li>moviepy：一个用来进行基于脚本的视频编辑模块，适用于多种格式，包括动图 GIFs。<a href="http://zulko.github.io/moviepy/" rel="nofollow">官网</a></li>
<li>scikit-video：SciPy 视频处理常用程序。<a href="https://github.com/aizvorski/scikit-video">官网</a></li>
</ul>
<h3><a id="user-content-地理位置" class="anchor" aria-hidden="true" href="#地理位置"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>地理位置</h3>
<p>地理编码地址以及用来处理经纬度的库。</p>
<ul>
<li>GeoDjango：世界级地理图形 web 框架。<a href="https://docs.djangoproject.com/en/dev/ref/contrib/gis/" rel="nofollow">官网</a></li>
<li>GeoIP：MaxMind GeoIP Legacy 数据库的 Python API。<a href="https://github.com/maxmind/geoip-api-python">官网</a></li>
<li>geojson：GeoJSON 的 Python 绑定及工具。<a href="https://github.com/frewsxcv/python-geojson">官网</a></li>
<li>geopy：Python 地址编码工具箱。<a href="https://github.com/geopy/geopy">官网</a></li>
<li>GeoIP2：GeoIP2 Webservice 客户端与数据库 Python API。<a href="https://github.com/maxmind/GeoIP2-python">官网</a></li>
<li>django-countries：一个 Django 应用程序，提供用于表格的国家选择功能，国旗图标静态文件以及模型中的国家字段。<a href="https://github.com/SmileyChris/django-countries">官网</a></li>
</ul>
<h3><a id="user-content-http" class="anchor" aria-hidden="true" href="#http"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>HTTP</h3>
<p>使用 HTTP 的库。</p>
<ul>
<li>aiohttp：基于 asyncio 的异步 HTTP 网络库。<a href="https://github.com/aio-libs/aiohttp">官网</a></li>
<li>requests：人性化的 HTTP 请求库。<a href="http://docs.python-requests.org/en/latest/" rel="nofollow">官网</a></li>
<li>grequests：requests 库 + gevent ，用于异步 HTTP 请求.<a href="https://github.com/kennethreitz/grequests">官网</a></li>
<li>httplib2：全面的 HTTP 客户端库。<a href="https://github.com/jcgregorio/httplib2">官网</a></li>
<li>treq：类似 requests 的 Python API 构建于 Twisted HTTP 客户端之上。<a href="https://github.com/twisted/treq">官网</a></li>
<li>urllib3：一个具有线程安全连接池，支持文件 post，清晰友好的 HTTP 库。<a href="https://github.com/shazow/urllib3">官网</a></li>
</ul>
<h3><a id="user-content-数据库" class="anchor" aria-hidden="true" href="#数据库"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>数据库</h3>
<p>Python 实现的数据库。</p>
<ul>
<li>pickleDB：一个简单，轻量级键值储存数据库。<a href="https://pythonhosted.org/pickleDB/" rel="nofollow">官网</a></li>
<li>PipelineDB：流式 SQL 数据库。<a href="https://www.pipelinedb.com/" rel="nofollow">官网</a></li>
<li>TinyDB：一个微型的，面向文档型数据库。<a href="https://github.com/msiemens/tinydb">官网</a></li>
<li>ZODB：一个 Python 原生对象数据库。一个键值和对象图数据库。<a href="http://www.zodb.org/en/latest/" rel="nofollow">官网</a></li>
</ul>
<h3><a id="user-content-数据库驱动" class="anchor" aria-hidden="true" href="#数据库驱动"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>数据库驱动</h3>
<p>用来连接和操作数据库的库。</p>
<ul>
<li>MySQL：<a href="http://shlomi-noach.github.io/awesome-mysql/" rel="nofollow">awesome-mysql</a> 系列
<ul>
<li>aiomysql：基于 asyncio 的异步 MySQL 数据库操作库。<a href="https://github.com/aio-libs/aiomysql">官网</a></li>
<li>mysql-python：Python 的 MySQL 数据库连接器。<a href="https://sourceforge.net/projects/mysql-python/" rel="nofollow">官网</a></li>
<li>ysqlclient：<a href="https://github.com/PyMySQL/mysqlclient-python">mysql-python</a> 分支，支持 Python 3。</li>
<li>oursql：一个更好的 MySQL 连接器，支持原生预编译指令和 BLOBs。<a href="https://pythonhosted.org/oursql/" rel="nofollow">官网</a></li>
<li>PyMySQL：纯 Python MySQL 驱动，兼容 mysql-python。<a href="https://github.com/PyMySQL/PyMySQL">官网</a></li>
</ul>
</li>
<li>PostgreSQL
<ul>
<li>psycopg2：Python 中最流行的 PostgreSQL 适配器。<a href="http://initd.org/psycopg/" rel="nofollow">官网</a></li>
<li>queries：psycopg2 库的封装，用来和 PostgreSQL 进行交互。<a href="https://github.com/gmr/queries">官网</a></li>
<li>txpostgres：基于 Twisted 的异步 PostgreSQL 驱动。<a href="http://txpostgres.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
</ul>
</li>
<li>其他关系型数据库
<ul>
<li>apsw：另一个 Python SQLite 封装。<a href="http://rogerbinns.github.io/apsw/" rel="nofollow">官网</a></li>
<li>dataset：在数据库中存储 Python 字典</li>
<li>pymssql：一个简单的 Microsoft SQL Server 数据库接口。<a href="http://www.pymssql.org/en/latest/" rel="nofollow">官网</a></li>
</ul>
</li>
<li>NoSQL 数据库
<ul>
<li>asyncio-redis：基于 asyncio 的 redis 客户端 (PEP 3156)。<a href="https://github.com/jonathanslenders/asyncio-redis">官网</a></li>
<li>cassandra-python-driver：Cassandra 的 Python 驱动。<a href="https://github.com/datastax/python-driver">官网</a></li>
<li>HappyBase：一个为 Apache HBase 设计的，对开发者友好的库。<a href="http://happybase.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
<li>Plyvel：一个快速且功能丰富的 LevelDB 的 Python 接口。<a href="https://plyvel.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
<li>py2neo：Neo4j restful 接口的 Python 封装客户端。<a href="http://py2neo.org/2.0/" rel="nofollow">官网</a></li>
<li>pycassa：Cassandra 的 Python Thrift 驱动。<a href="https://github.com/pycassa/pycassa">官网</a></li>
<li>PyMongo：MongoDB 的官方 Python 客户端。<a href="https://docs.mongodb.org/ecosystem/drivers/python/" rel="nofollow">官网</a></li>
<li>redis-py：Redis 的 Python 客户端。<a href="https://github.com/andymccurdy/redis-py">官网</a></li>
<li>telephus：基于 Twisted 的 Cassandra 客户端。<a href="https://github.com/driftx/Telephus">官网</a></li>
<li>txRedis：基于 Twisted 的 Redis 客户端。<a href="https://github.com/deldotdr/txRedis">官网</a></li>
</ul>
</li>
</ul>
<h3><a id="user-content-orm" class="anchor" aria-hidden="true" href="#orm"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>ORM</h3>
<p>实现对象关系映射或数据映射技术的库。</p>
<ul>
<li>关系型数据库
<ul>
<li>Django Models：Django 的一部分。<a href="https://docs.djangoproject.com/en/dev/topics/db/models/" rel="nofollow">官网</a></li>
<li>SQLAlchemy：Python SQL 工具以及对象关系映射工具。<a href="http://www.sqlalchemy.org/" rel="nofollow">官网</a>
<ul>
<li><a href="https://github.com/dahlia/awesome-sqlalchemy">awesome-sqlalchemy</a> 系列</li>
</ul>
</li>
<li><a href="http://hao.jobbole.com/peewee/" rel="nofollow">Peewee</a>：一个小巧，富有表达力的 ORM。<a href="https://github.com/coleifer/peewee">官网</a></li>
<li>PonyORM：提供面向生成器的 SQL 接口的 ORM。<a href="https://ponyorm.com/" rel="nofollow">官网</a></li>
<li>python-sql：编写 Python 风格的 SQL 查询。<a href="https://pypi.python.org/pypi/python-sql" rel="nofollow">官网</a></li>
</ul>
</li>
<li>NoSQL 数据库
<ul>
<li>django-mongodb-engine：Django MongoDB 后端。<a href="https://github.com/django-nonrel/mongodb-engine">官网</a></li>
<li>PynamoDB：<a href="https://aws.amazon.com/dynamodb/" rel="nofollow">Amazon DynamoDB</a> 的一个 Python 风格接口。<a href="https://github.com/jlafon/PynamoDB">官网</a></li>
<li>flywheel：Amazon DynamoDB 的对象映射工具。<a href="https://github.com/mathcamp/flywheel">官网</a></li>
<li>MongoEngine：一个 Python 对象文档映射工具，用于 MongoDB。<a href="http://mongoengine.org/" rel="nofollow">官网</a></li>
<li>hot-redis：为 Redis 提供 Python 丰富的数据类型。<a href="https://github.com/stephenmcd/hot-redis">官网</a></li>
<li>redisco：一个 Python 库，提供可以持续存在在 Redis 中的简单模型和容器。<a href="https://github.com/kiddouk/redisco">官网</a></li>
</ul>
</li>
<li>其他
<ul>
<li>butterdb：Google Drive 电子表格的 Python ORM。<a href="https://github.com/Widdershin/butterdb">官网</a></li>
</ul>
</li>
</ul>
<h3><a id="user-content-web-框架" class="anchor" aria-hidden="true" href="#web-框架"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Web 框架</h3>
<p>全栈 Web 框架。</p>
<ul>
<li><a href="http://hao.jobbole.com/django/" rel="nofollow">Django</a>：Python 界最流行的 web 框架。<a href="https://www.djangoproject.com/" rel="nofollow">官网</a>
<ul>
<li><a href="https://gitlab.com/rosarior/awesome-django" rel="nofollow">awesome-django</a> 系列</li>
</ul>
</li>
<li><a href="http://hao.jobbole.com/flask/" rel="nofollow">Flask</a>：一个 Python 微型框架。<a href="http://flask.pocoo.org/" rel="nofollow">官网</a>
<ul>
<li><a href="https://github.com/humiaozuzu/awesome-flask">awesome-flask</a> 系列</li>
</ul>
</li>
<li>pyramid：一个小巧，快速，接地气的开源 Python web 框架。
<ul>
<li><a href="https://github.com/uralbash/awesome-pyramid">awesome-pyramid</a> 系列</li>
</ul>
</li>
<li><a href="http://hao.jobbole.com/bottle/" rel="nofollow">Bottle</a>：一个快速小巧，轻量级的 WSGI 微型 web 框架。<a href="http://bottlepy.org/docs/dev/index.html" rel="nofollow">官网</a></li>
<li>CherryPy：一个极简的 Python web 框架，服从 HTTP/1.1 协议且具有 WSGI 线程池。<a href="http://www.cherrypy.org/" rel="nofollow">官网</a></li>
<li>TurboGears：一个可以扩展为全栈解决方案的微型框架。<a href="http://www.turbogears.org/" rel="nofollow">官网</a></li>
<li><a href="http://hao.jobbole.com/python-webpy/" rel="nofollow">web.py</a>：一个 Python 的 web 框架，既简单，又强大。<a href="http://webpy.org/" rel="nofollow">官网</a></li>
<li>web2py：一个全栈 web 框架和平台，专注于简单易用。<a href="http://www.web2py.com/" rel="nofollow">官网</a></li>
<li><a href="http://hao.jobbole.com/tornado/" rel="nofollow">Tornado</a>：一个 web 框架和异步网络库。<a href="http://www.tornadoweb.org/en/latest/" rel="nofollow">官网</a></li>
<li>sanic：基于 Python3.5+ 的异步网络框架。<a href="https://github.com/channelcat/sanic/">官网</a></li>
</ul>
<h3><a id="user-content-权限" class="anchor" aria-hidden="true" href="#权限"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>权限</h3>
<p>允许或拒绝用户访问数据或功能的库。</p>
<ul>
<li>Carteblanche：站在用户和设计者角度开发的一个代码对齐模块，很好地处理了代码导航及权限。<a href="https://github.com/neuman/python-carteblanche/">官网</a></li>
<li>django-guardian：Django 1.2+ 实现了单个对象权限。<a href="https://github.com/django-guardian/django-guardian">官网</a></li>
<li>django-rules：一个小巧但是强大的应用，提供对象级别的权限管理，且不需要使用数据库。<a href="https://github.com/dfunckt/django-rules">官网</a></li>
</ul>
<h3><a id="user-content-cms" class="anchor" aria-hidden="true" href="#cms"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>CMS</h3>
<p>内容管理系统</p>
<ul>
<li>odoo-cms: 一个开源的，企业级 CMS，基于 odoo。<a href="http://www.odoo.com" rel="nofollow">官网</a></li>
<li>django-cms：一个开源的，企业级 CMS，基于 Django。<a href="http://www.django-cms.org/en/" rel="nofollow">官网</a></li>
<li>djedi-cms：一个轻量级但却非常强大的 Django CMS ，考虑到了插件，内联编辑以及性能。<a href="http://djedi-cms.org/" rel="nofollow">官网</a></li>
<li>FeinCMS：基于 Django 构建的最先进的内容管理系统之一。<a href="http://www.feincms.org/" rel="nofollow">官网</a></li>
<li>Kotti：一个高级的，Python 范的 web 应用框架，基于 Pyramid 构建。<a href="http://kotti.pylonsproject.org/" rel="nofollow">官网</a></li>
<li>Mezzanine：一个强大的，持续的，灵活的内容管理平台。<a href="http://mezzanine.jupo.org/" rel="nofollow">官网</a></li>
<li>Opps：一个为杂志，报纸网站以及大流量门户网站设计的 CMS 平台，基于 Django。<a href="http://opps.github.io/opps/" rel="nofollow">官网</a></li>
<li>Plone：一个构建于开源应用服务器 Zope 之上的 CMS。<a href="https://plone.org/" rel="nofollow">官网</a></li>
<li>Quokka：灵活，可扩展的小型 CMS，基于 Flask 和 MongoDB。<a href="http://quokkaproject.org/" rel="nofollow">官网</a></li>
<li><a href="http://hao.jobbole.com/wagtail/" rel="nofollow">Wagtail</a>：一个 Django 内容管理系统。<a href="https://wagtail.io/" rel="nofollow">官网</a></li>
<li>Widgy：最新的 CMS 框架，基于 Django。<a href="https://wid.gy/" rel="nofollow">官网</a></li>
</ul>
<h3><a id="user-content-电子商务" class="anchor" aria-hidden="true" href="#电子商务"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>电子商务</h3>
<p>用于电子商务以及支付的框架和库。</p>
<ul>
<li>django-oscar：一个用于 Django 的开源的电子商务框架。<a href="http://oscarcommerce.com/" rel="nofollow">官网</a></li>
<li>django-shop：一个基于 Django 的店铺系统。<a href="https://github.com/awesto/django-shop">官网</a></li>
<li>Cartridge：一个基于 Mezzanine 构建的购物车应用。<a href="https://github.com/stephenmcd/cartridge">官网</a></li>
<li>shoop：一个基于 Django 的开源电子商务平台。<a href="https://www.shoop.io/en/" rel="nofollow">官网</a></li>
<li>alipay：非官方的 Python 支付宝 API。<a href="https://github.com/lxneng/alipay">官网</a></li>
<li>merchant：一个可以接收来自多种支付平台支付的 Django 应用。<a href="https://github.com/agiliq/merchant">官网</a></li>
<li>money：一个货币类库。带有可选的 CLDR 后端本地化格式，提供可扩展的货币兑换解决方案。<a href="https://github.com/carlospalol/money">官网</a></li>
<li>python-currencies：显示货币格式以及它的数值。<a href="https://github.com/Alir3z4/python-currencies">官网</a></li>
</ul>
<h3><a id="user-content-restful-api" class="anchor" aria-hidden="true" href="#restful-api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>RESTful API</h3>
<p>用来开发 RESTful APIs 的库</p>
<ul>
<li>Django
<ul>
<li><a href="http://hao.jobbole.com/django-rest-framework/" rel="nofollow">django-rest-framework</a>：一个强大灵活的工具，用来构建 web API。<a href="http://www.django-rest-framework.org/" rel="nofollow">官网</a></li>
<li>django-tastypie：为 Django 应用开发 API。<a href="http://tastypieapi.org/" rel="nofollow">官网</a></li>
<li>django-formapi：为 Django 的表单验证，创建 JSON APIs 。<a href="https://github.com/5monkeys/django-formapi">官网</a></li>
</ul>
</li>
<li>Flask
<ul>
<li>flask-api：为 flask 开发的，可浏览 Web APIs 。<a href="http://www.flaskapi.org/" rel="nofollow">官网</a></li>
<li>flask-restful：为 flask 快速创建 REST APIs 。<a href="http://flask-restful.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
<li>flask-restless：为 SQLAlchemy 定义的数据库模型创建 RESTful APIs 。<a href="https://flask-restless.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
<li>flask-api-utils：为 Flask 处理 API 表示和验证。<a href="https://github.com/marselester/flask-api-utils">官网</a></li>
<li>eve：REST API 框架，由 Flask, MongoDB 等驱动。<a href="https://github.com/nicolaiarocci/eve">官网</a></li>
</ul>
</li>
<li>Pyramid
<ul>
<li>cornice：一个 Pyramid 的 REST 框架 。<a href="https://cornice.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
</ul>
</li>
<li>与框架无关的
<ul>
<li>falcon：一个用来建立云 API 和 web app 后端的高性能框架。<a href="http://falconframework.org/" rel="nofollow">官网</a></li>
<li>sandman：为现存的数据库驱动系统自动创建 REST APIs 。<a href="https://github.com/jeffknupp/sandman">官网</a></li>
<li>restless：框架无关的 REST 框架 ，基于从 Tastypie 学到的知识。<a href="http://restless.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
<li>ripozo：快速创建 REST/HATEOAS/Hypermedia APIs。<a href="https://github.com/vertical-knowledge/ripozo">官网</a></li>
</ul>
</li>
</ul>
<h3><a id="user-content-验证" class="anchor" aria-hidden="true" href="#验证"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>验证</h3>
<p>实现验证方案的库。</p>
<ul>
<li>OAuth
<ul>
<li>Authomatic：简单但是强大的框架，身份验证/授权客户端。<a href="http://peterhudec.github.io/authomatic/" rel="nofollow">官网</a></li>
<li>django-allauth：Django 的验证应用。<a href="https://github.com/pennersr/django-allauth">官网</a></li>
<li>django-oauth-toolkit：为 Django 用户准备的 OAuth2。<a href="https://github.com/evonove/django-oauth-toolkit">官网</a></li>
<li>django-oauth2-provider：为 Django 应用提供 OAuth2 接入。<a href="https://github.com/caffeinehit/django-oauth2-provider">官网</a></li>
<li>Flask-OAuthlib：OAuth 1.0/a, 2.0 客户端实现，供 Flask 使用。<a href="https://github.com/lepture/flask-oauthlib">官网</a></li>
<li>OAuthLib：一个 OAuth 请求-签名逻辑通用、 完整的实现。<a href="https://github.com/idan/oauthlib">官网</a></li>
<li>python-oauth2：一个完全测试的抽象接口。用来创建 OAuth 客户端和服务端。<a href="https://github.com/joestump/python-oauth2">官网</a></li>
<li>python-social-auth：一个设置简单的社会化验证方式。<a href="https://github.com/omab/python-social-auth">官网</a></li>
<li>rauth：OAuth 1.0/a, 2.0, 和 Ofly 的 Python 库。<a href="https://github.com/litl/rauth">官网</a></li>
<li>sanction：一个超级简单的 OAuth2 客户端实现。<a href="https://github.com/demianbrecht/sanction">官网</a></li>
</ul>
</li>
<li>其他
<ul>
<li>jose：JavaScript 对象签名和加密草案的实现。<a href="https://github.com/demonware/jose">官网</a></li>
<li>PyJWT：JSON Web 令牌草案 01。<a href="https://github.com/jpadilla/pyjwt">官网</a></li>
<li>python-jws：JSON Web 签名草案 02 的实现。<a href="https://github.com/brianloveswords/python-jws">官网</a></li>
<li>python-jwt：一个用来生成和验证 JSON Web 令牌的模块。<a href="https://github.com/davedoesdev/python-jwt">官网</a></li>
</ul>
</li>
</ul>
<h3><a id="user-content-模板引擎" class="anchor" aria-hidden="true" href="#模板引擎"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>模板引擎</h3>
<p>模板生成和词法解析的库和工具。</p>
<ul>
<li><a href="http://hao.jobbole.com/jinja2/" rel="nofollow">Jinja2</a>：一个现代的，对设计师友好的模板引擎。<a href="https://github.com/pallets/jinja">官网</a></li>
<li>Chameleon：一个 HTML/XML 模板引擎。 模仿了 ZPT（Zope Page Templates）, 进行了速度上的优化。<a href="https://chameleon.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
<li>Genshi：Python 模板工具，用以生成 web 感知的结果。<a href="https://genshi.edgewall.org/" rel="nofollow">官网</a></li>
<li>Mako：Python 平台的超高速轻量级模板。<a href="http://www.makotemplates.org/" rel="nofollow">官网</a></li>
</ul>
<h3><a id="user-content-队列" class="anchor" aria-hidden="true" href="#队列"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>队列</h3>
<p>处理事件以及任务队列的库。</p>
<ul>
<li>celery：一个异步任务队列/作业队列，基于分布式消息传递。<a href="http://www.celeryproject.org/" rel="nofollow">官网</a></li>
<li>huey：小型多线程任务队列。<a href="https://github.com/coleifer/huey">官网</a></li>
<li><a href="http://hao.jobbole.com/mrq/" rel="nofollow">mrq</a>：Mr. Queue -一个 Python 的分布式 worker 任务队列， 使用 Redis 和 gevent。<a href="https://github.com/pricingassistant/mrq">官网</a></li>
<li>rq：简单的 Python 作业队列。<a href="http://python-rq.org/" rel="nofollow">官网</a></li>
<li>simpleq：一个简单的，可无限扩张的，基于亚马逊 SQS 的队列。<a href="https://github.com/rdegges/simpleq">官网</a></li>
</ul>
<h3><a id="user-content-搜索" class="anchor" aria-hidden="true" href="#搜索"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>搜索</h3>
<p>对数据进行索引和执行搜索查询的库和软件。</p>
<ul>
<li>django-haystack：Django 模块化搜索。<a href="https://github.com/django-haystack/django-haystack">官网</a></li>
<li>elasticsearch-py：Elasticsearch 的官方底层 Python 客户端。<a href="https://www.elastic.co/guide/en/elasticsearch/client/python-api/current/index.html" rel="nofollow">官网</a></li>
<li>elasticsearch-dsl-py：Elasticsearch 的官方高级 Python 客户端。<a href="https://github.com/elastic/elasticsearch-dsl-py">官网</a></li>
<li>solrpy：<a href="http://lucene.apache.org/solr/" rel="nofollow">solr</a> 的 Python 客户端。<a href="https://github.com/edsu/solrpy">官网</a></li>
<li>Whoosh：一个快速的纯 Python 搜索引擎库。<a href="http://whoosh.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
</ul>
<h3><a id="user-content-动态消息" class="anchor" aria-hidden="true" href="#动态消息"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>动态消息</h3>
<p>用来创建用户活动的库。</p>
<ul>
<li>django-activity-stream：从你的站点行为中生成通用活动信息流。<a href="https://github.com/justquick/django-activity-stream">官网</a></li>
<li>Stream-Framework：使用 Cassandra 和 Redis 创建动态消息和通知系统。<a href="https://github.com/tschellenbach/Stream-Framework">官网</a></li>
</ul>
<h3><a id="user-content-资源管理" class="anchor" aria-hidden="true" href="#资源管理"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>资源管理</h3>
<p>管理、压缩、缩小网站资源的工具。</p>
<ul>
<li>django-compressor：将链接和内联的 JavaScript 或 CSS 压缩到一个单独的缓存文件中。<a href="https://github.com/django-compressor/django-compressor">官网</a></li>
<li>django-storages：一个针对 Django 的自定义存储后端的工具集合。<a href="http://django-storages.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
<li>fanstatic：打包、优化，并且把静态文件依赖作为 Python 的包来提供。<a href="http://www.fanstatic.org/en/latest/" rel="nofollow">官网</a></li>
<li>File Conveyor：一个后台驻留的程序，用来发现和同步文件到 CDNs, S3 和 FTP。<a href="https://wimleers.com/fileconveyor/" rel="nofollow">官网</a></li>
<li>Flask-Assets：帮你将 web 资源整合到你的 Flask app 中。<a href="http://flask-assets.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
<li>jinja-assets-compressor：一个 Jinja 扩展，用来编译和压缩你的资源。<a href="https://github.com/jaysonsantos/jinja-assets-compressor">官网</a></li>
<li>webassets：为你的静态资源打包、优化和管理生成独一无二的缓存 URL。<a href="http://webassets.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
</ul>
<h3><a id="user-content-缓存" class="anchor" aria-hidden="true" href="#缓存"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>缓存</h3>
<p>缓存数据的库。</p>
<ul>
<li>Beaker：一个缓存和会话库，可以用在 web 应用和独立 Python 脚本和应用上。<a href="http://beaker.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
<li>django-cache-machine：Django 模型的自动缓存和失效。<a href="https://github.com/django-cache-machine/django-cache-machine">官网</a></li>
<li>django-cacheops：具有自动颗粒化事件驱动失效功能的 ORM。<a href="https://github.com/Suor/django-cacheops">官网</a></li>
<li>django-viewlet：渲染模板，同时具有额外的缓存控制功能。<a href="https://github.com/5monkeys/django-viewlet">官网</a></li>
<li>dogpile.cache：dogpile.cache 是 Beaker 的下一代替代品，由同一作者开发。<a href="http://dogpilecache.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
<li>HermesCache：Python 缓存库，具有基于标签的失效和 dogpile effect 保护功能。<a href="https://pypi.python.org/pypi/HermesCache" rel="nofollow">官网</a></li>
<li>johnny-cache：django 应用缓存框架。<a href="https://github.com/jmoiron/johnny-cache">官网</a></li>
<li>pylibmc：<a href="http://libmemcached.org/libMemcached.html" rel="nofollow">libmemcached</a> 接口的 Python 封装。<a href="https://github.com/lericson/pylibmc">官网</a></li>
</ul>
<h3><a id="user-content-电子邮件" class="anchor" aria-hidden="true" href="#电子邮件"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>电子邮件</h3>
<p>用来发送和解析电子邮件的库。</p>
<ul>
<li>django-celery-ses：带有 AWS SES 和 Celery 的 Django email 后端。<a href="https://github.com/StreetVoice/django-celery-ses">官网</a></li>
<li>envelopes：供人类使用的电子邮件库。<a href="http://tomekwojcik.github.io/envelopes/" rel="nofollow">官网</a></li>
<li>flanker：一个 email 地址和 Mime 解析库。<a href="https://github.com/mailgun/flanker">官网</a></li>
<li>imbox：Python IMAP 库。<a href="https://github.com/martinrusev/imbox">官网</a></li>
<li>inbox.py：Python SMTP 服务器。<a href="https://github.com/kennethreitz/inbox.py">官网</a></li>
<li>inbox：一个开源电子邮件工具箱。<a href="https://github.com/nylas/sync-engine">官网</a></li>
<li>lamson：Python 风格的 SMTP 应用服务器。<a href="https://github.com/zedshaw/lamson">官网</a></li>
<li>mailjet：Mailjet API 实现，用来提供批量发送邮件，统计等功能。<a href="https://github.com/WoLpH/mailjet">官网</a></li>
<li>marrow.mailer：高性能可扩展邮件分发框架。<a href="https://github.com/marrow/mailer">官网</a></li>
<li>modoboa：一个邮件托管和管理平台，具有现代的、简约的 Web UI。<a href="https://github.com/tonioo/modoboa">官网</a></li>
<li>pyzmail：创建，发送和解析电子邮件。<a href="http://www.magiksys.net/pyzmail/" rel="nofollow">官网</a></li>
<li>Talon：Mailgun 库，用来抽取信息和签名。<a href="https://github.com/mailgun/talon">官网</a></li>
<li>yagmail：yagmail是一个GMAIL / SMTP客户端，旨在使其尽可能简单地发送电子邮件。<a href="https://pypi.org/project/yagmail/" rel="nofollow">官网</a></li>
</ul>
<h3><a id="user-content-国际化" class="anchor" aria-hidden="true" href="#国际化"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>国际化</h3>
<p>用来进行国际化的库。</p>
<ul>
<li>Babel：一个 Python 的国际化库。<a href="http://babel.pocoo.org/en/latest/" rel="nofollow">官网</a></li>
<li>Korean：一个韩语词态库。<a href="https://korean.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
</ul>
<h3><a id="user-content-url-处理" class="anchor" aria-hidden="true" href="#url-处理"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>URL 处理</h3>
<p>解析 URLs 的库</p>
<ul>
<li>furl：一个让处理 URL 更简单小型 Python 库。<a href="https://github.com/gruns/furl">官网</a></li>
<li>purl：一个简单的，不可变的 URL 类，具有简洁的 API 来进行询问和处理。<a href="https://github.com/codeinthehole/purl">官网</a></li>
<li>pyshorteners：一个纯 Python URL 缩短库。<a href="https://github.com/ellisonleao/pyshorteners">官网</a></li>
<li>shorturl：生成短小 URL 和类似 bit.ly 短链的 Python 实现。<a href="https://github.com/Alir3z4/python-shorturl">官网</a></li>
<li>webargs：一个解析 HTTP 请求参数的库，内置对流行 web 框架的支持，包括 Flask, Django, Bottle, Tornado 和 Pyramid。<a href="https://github.com/sloria/webargs">官网</a></li>
</ul>
<h3><a id="user-content-html-处理" class="anchor" aria-hidden="true" href="#html-处理"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>HTML 处理</h3>
<p>处理 HTML 和 XML 的库。</p>
<ul>
<li>BeautifulSoup：以 Python 风格的方式来对 HTML 或 XML 进行迭代，搜索和修改。<a href="http://www.crummy.com/software/BeautifulSoup/bs4/doc/" rel="nofollow">官网</a></li>
<li>bleach：一个基于白名单的 HTML 清理和文本链接库。<a href="http://bleach.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
<li>cssutils：一个 Python 的 CSS 库。<a href="https://pypi.python.org/pypi/cssutils/" rel="nofollow">官网</a></li>
<li>html5lib：一个兼容标准的 HTML 文档和片段解析及序列化库。<a href="https://github.com/html5lib/html5lib-python">官网</a></li>
<li>lxml：一个非常快速，简单易用，功能齐全的库，用来处理 HTML 和 XML。<a href="http://lxml.de/" rel="nofollow">官网</a></li>
<li>MarkupSafe：为 Python 实现 XML/HTML/XHTML 标记安全字符串。<a href="https://github.com/pallets/markupsafe">官网</a></li>
<li>pyquery：一个解析 HTML 的库，类似 jQuery。<a href="https://github.com/gawel/pyquery">官网</a></li>
<li>requests-html：人性化的，Pythonic 的 HTML 解析库。<a href="https://github.com/kennethreitz/requests-html">官网</a></li>
<li>untangle：将 XML 文档转换为 Python 对象，使其可以方便的访问。<a href="https://github.com/stchris/untangle">官网</a></li>
<li>xhtml2pdf：HTML/CSS 转 PDF 工具。<a href="https://github.com/xhtml2pdf/xhtml2pdf">官网</a></li>
<li>xmltodict：像处理 JSON 一样处理 XML。<a href="https://github.com/martinblech/xmltodict">官网</a></li>
</ul>
<p>爬取网络站点的库</p>
<ul>
<li>Scrapy：一个快速高级的屏幕爬取及网页采集框架。<a href="http://scrapy.org/" rel="nofollow">官网</a></li>
<li>ScrapydWeb：一个用于 Scrapyd 集群管理的全功能 web UI，支持 Scrapy 日志分析和可视化，自动打包，定时器任务和邮件通知等特色功能。<a href="https://github.com/my8100/scrapydweb">官网</a></li>
<li>cola：一个分布式爬虫框架。<a href="https://github.com/chineking/cola">官网</a></li>
<li>Demiurge：基于 PyQuery 的爬虫微型框架。<a href="https://github.com/matiasb/demiurge">官网</a></li>
<li>feedparser：通用 feed 解析器。<a href="http://pythonhosted.org/feedparser/" rel="nofollow">官网</a></li>
<li>Grab：站点爬取框架。<a href="http://grablib.org/" rel="nofollow">官网</a></li>
<li>MechanicalSoup：用于自动和网络站点交互的 Python 库。<a href="https://github.com/hickford/MechanicalSoup">官网</a></li>
<li>portia：Scrapy 可视化爬取。<a href="https://github.com/scrapinghub/portia">官网</a></li>
<li>pyspider：一个强大的爬虫系统。<a href="https://github.com/binux/pyspider">官网</a></li>
<li>RoboBrowser：一个简单的，Python 风格的库，用来浏览网站，而不需要一个独立安装的浏览器。<a href="https://github.com/jmcarp/robobrowser">官网</a></li>
</ul>
<h3><a id="user-content-网页内容提取" class="anchor" aria-hidden="true" href="#网页内容提取"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>网页内容提取</h3>
<p>用于进行网页内容提取的库。</p>
<ul>
<li>Haul：一个可以扩展的图像爬取工具。<a href="https://github.com/vinta/Haul">官网</a></li>
<li>html2text：将 HTML 转换为 Markdown 格式文本。<a href="https://github.com/Alir3z4/html2text">官网</a></li>
<li>lassie：人性化的网页内容检索库。<a href="https://github.com/michaelhelmick/lassie">官网</a></li>
<li>micawber：一个小型网页内容提取库，用来从 URLs 提取富内容。<a href="https://github.com/coleifer/micawber">官网</a></li>
<li><a href="http://hao.jobbole.com/python-newspaper/" rel="nofollow">newspaper</a>：使用 Python 进行新闻提取，文章提取以及内容策展。<a href="https://github.com/codelucas/newspaper">官网</a></li>
<li>opengraph：一个用来解析开放内容协议(Open Graph Protocol)的 Python 模块。<a href="https://github.com/erikriver/opengraph">官网</a></li>
<li><a href="http://hao.jobbole.com/python-goose/" rel="nofollow">python-goose</a>：HTML 内容/文章提取器。<a href="https://github.com/grangier/python-goose">官网</a></li>
<li>python-readability：arc90 公司 readability 工具的 Python 高速端口。<a href="https://github.com/buriy/python-readability">官网</a></li>
<li>sanitize：为杂乱的数据世界带来调理性。<a href="https://github.com/Alir3z4/python-sanitize">官网</a></li>
<li>sumy：一个为文本文件和 HTML 页面进行自动摘要的模块。<a href="https://github.com/miso-belica/sumy">官网</a></li>
<li>textract：从任何格式的文档中提取文本，Word，PowerPoint，PDFs 等等。<a href="https://github.com/deanmalmgren/textract">官网</a></li>
</ul>
<h3><a id="user-content-表单" class="anchor" aria-hidden="true" href="#表单"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>表单</h3>
<p>进行表单操作的库。</p>
<ul>
<li>Deform：Python HTML 表单生成库，受到了 formish 表单生成库的启发。<a href="http://deform.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
<li>django-bootstrap3：集成了 Bootstrap 3 的 Django。<a href="https://github.com/dyve/django-bootstrap3">官网</a></li>
<li>django-crispy-forms：一个 Django 应用，他可以让你以一种非常优雅且 DRY（Don't repeat yourself） 的方式来创建美观的表单。<a href="http://django-crispy-forms.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
<li>django-remote-forms：一个平台独立的 Django 表单序列化工具。<a href="https://github.com/WiserTogether/django-remote-forms">官网</a></li>
<li>WTForms：一个灵活的表单验证和呈现库。<a href="http://wtforms.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
<li>WTForms-JSON：一个 WTForms 扩展，用来处理 JSON 数据。<a href="http://wtforms-json.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
</ul>
<h3><a id="user-content-数据验证" class="anchor" aria-hidden="true" href="#数据验证"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>数据验证</h3>
<p>数据验证库。多用于表单验证。</p>
<ul>
<li>Cerberus：一个映射验证器（mappings-validator）。支持多种规则，提供归一化功能，可以方便地定制为 Python 风格的 schema 定义。<a href="http://docs.python-cerberus.org/en/stable/" rel="nofollow">官网</a></li>
<li>colander：一个用于对从 XML, JSON，HTML 表单获取的数据或其他同样简单的序列化数据进行验证和反序列化的系统。<a href="http://docs.pylonsproject.org/projects/colander/en/latest/" rel="nofollow">官网</a></li>
<li>kmatch：一种用于匹配/验证/筛选 Python 字典的语言。<a href="https://github.com/ambitioninc/kmatch">官网</a></li>
<li>schema：一个用于对 Python 数据结构进行验证的库。<a href="https://github.com/keleshev/schema">官网</a></li>
<li>Schematics：数据结构验证。<a href="https://github.com/schematics/schematics">官网</a></li>
<li>valideer：轻量级可扩展的数据验证和适配库。<a href="https://github.com/podio/valideer">官网</a></li>
<li>voluptuous：一个 Python 数据验证库。主要是为了验证传入 Python 的 JSON，YAML 等数据。<a href="https://github.com/alecthomas/voluptuous">官网</a></li>
<li>jsonschema：<a href="http://json-schema.org/" rel="nofollow">JSON Schema</a>的 python 实现，用于 JSON 数据的验证。<a href="https://github.com/Julian/jsonschema">官网</a></li>
</ul>
<h3><a id="user-content-反垃圾技术" class="anchor" aria-hidden="true" href="#反垃圾技术"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>反垃圾技术</h3>
<p>帮助你和电子垃圾进行战斗的库。</p>
<ul>
<li>django-simple-captcha：一个简单、高度可定制的 Django 应用，可以为任何 Django 表单添加验证码。<a href="https://github.com/mbi/django-simple-captcha">官网</a></li>
<li>django-simple-spam-blocker：一个用于 Django 的简单的电子垃圾屏蔽工具。<a href="https://github.com/moqada/django-simple-spam-blocker">官网</a></li>
</ul>
<h3><a id="user-content-标记" class="anchor" aria-hidden="true" href="#标记"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>标记</h3>
<p>用来进行标记的库。</p>
<ul>
<li>django-taggit：简单的 Django 标记工具。<a href="https://github.com/alex/django-taggit">官网</a></li>
</ul>
<h3><a id="user-content-管理面板" class="anchor" aria-hidden="true" href="#管理面板"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>管理面板</h3>
<p>管理界面库。</p>
<ul>
<li>Ajenti：一个你的服务器值得拥有的管理面板。<a href="https://github.com/ajenti/ajenti">官网</a></li>
<li>django-suit：Django 管理界面的一个替代品 (仅对于非商业用途是免费的)。<a href="http://djangosuit.com/" rel="nofollow">官网</a></li>
<li>django-xadmin：Django admin 的一个替代品，具有很多不错的功能。<a href="https://github.com/sshwsfc/django-xadmin">官网</a></li>
<li>flask-admin：一个用于 Flask 的简单可扩展的管理界面框架。<a href="https://github.com/flask-admin/flask-admin">官网</a></li>
<li>flower：一个对 Celery 集群进行实时监控和提供 web 管理界面的工具。<a href="https://github.com/mher/flower">官网</a></li>
<li>Grappelli：Django 管理界面的一个漂亮的皮肤。<a href="http://grappelliproject.com/" rel="nofollow">官网</a></li>
<li>Wooey：一个 Django 应用，可以为 Python 脚本创建 web 用户界面。<a href="https://github.com/wooey/wooey">官网</a></li>
</ul>
<h3><a id="user-content-静态站点生成器" class="anchor" aria-hidden="true" href="#静态站点生成器"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>静态站点生成器</h3>
<p>静态站点生成器是一个软件，它把文本和模板作为输入，然后输出 HTML 文件。</p>
<ul>
<li>Pelican：使用 Markdown 或 ReST 来处理内容， Jinja 2 来制作主题。支持 DVCS, Disqus.。AGPL 许可。<a href="http://blog.getpelican.com/" rel="nofollow">官网</a></li>
<li>Cactus：为设计师设计的静态站点生成器。<a href="https://github.com/koenbok/Cactus/">官网</a></li>
<li>Hyde：基于 Jinja2 的静态站点生成器。<a href="http://hyde.github.io/" rel="nofollow">官网</a></li>
<li>Nikola：一个静态网站和博客生成器。<a href="https://www.getnikola.com/" rel="nofollow">官网</a></li>
<li>Tinkerer：Tinkerer 是一个博客引擎/静态站点生成器，由 Sphinx 驱动。<a href="http://tinkerer.me/" rel="nofollow">官网</a></li>
<li>Lektor：一个简单易用的静态 CMS 和博客引擎。<a href="https://www.getlektor.com/" rel="nofollow">官网</a></li>
</ul>
<h3><a id="user-content-进程" class="anchor" aria-hidden="true" href="#进程"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>进程</h3>
<p>操作系统进程启动及通信库。</p>
<ul>
<li>envoy：比 Python <a href="https://docs.python.org/2/library/subprocess.html" rel="nofollow">subprocess</a> 模块更人性化。<a href="https://github.com/kennethreitz/envoy">官网</a></li>
<li>sarge：另一 种 subprocess 模块的封装。<a href="http://sarge.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
<li>sh：一个完备的 subprocess 替代库。<a href="https://github.com/amoffat/sh">官网</a></li>
</ul>
<h3><a id="user-content-并发和并行" class="anchor" aria-hidden="true" href="#并发和并行"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>并发和并行</h3>
<p>用以进行并发和并行操作的库。</p>
<ul>
<li>multiprocessing：(Python 标准库) 基于进程的“线程”接口。<a href="https://docs.python.org/2/library/multiprocessing.html" rel="nofollow">官网</a></li>
<li>threading：(Python 标准库)更高层的线程接口。<a href="https://docs.python.org/2/library/threading.html" rel="nofollow">官网</a></li>
<li>eventlet：支持 WSGI 的异步框架。<a href="http://eventlet.net/" rel="nofollow">官网</a></li>
<li>gevent：一个基于协程的 Python 网络库，使用 <a href="https://github.com/python-greenlet/greenlet">greenlet</a>。<a href="http://www.gevent.org/" rel="nofollow">官网</a></li>
<li>Tomorrow：用于产生异步代码的神奇的装饰器语法实现。<a href="https://github.com/madisonmay/Tomorrow">官网</a></li>
<li>uvloop：在 libuv 之上超快速实现 asyncio 事件循环。<a href="https://github.com/MagicStack/uvloop">官网</a></li>
</ul>
<h3><a id="user-content-网络" class="anchor" aria-hidden="true" href="#网络"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>网络</h3>
<p>用于网络编程的库。</p>
<ul>
<li>asyncio：(Python 标准库) 异步 I/O, 事件循环, 协程以及任务。<a href="https://docs.python.org/3/library/asyncio.html" rel="nofollow">官网</a></li>
<li><a href="http://hao.jobbole.com/twisted/" rel="nofollow">Twisted</a>：一个事件驱动的网络引擎。<a href="https://twistedmatrix.com/trac/" rel="nofollow">官网</a></li>
<li>pulsar：事件驱动的并发框架。<a href="https://github.com/quantmind/pulsar">官网</a></li>
<li>diesel：基于 Greenlet 的事件 I/O 框架。<a href="https://github.com/dieseldev/diesel">官网</a></li>
<li>pyzmq：一个 ZeroMQ 消息库的 Python 封装。<a href="http://zeromq.github.io/pyzmq/" rel="nofollow">官网</a></li>
<li>Toapi：一个轻巧，简单，快速的 Flask 库，致力于为所有网站提供 API 服务。<a href="https://github.com/gaojiuli/toapi">官网</a></li>
<li>txZMQ：基于 Twisted 的 ZeroMQ 消息库的 Python 封装。<a href="https://github.com/smira/txZMQ">官网</a></li>
</ul>
<h3><a id="user-content-websocket" class="anchor" aria-hidden="true" href="#websocket"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>WebSocket</h3>
<p>帮助使用 WebSocket 的库。</p>
<ul>
<li>AutobahnPython：给 Python 、使用的 WebSocket &amp; WAMP 基于 Twisted 和 <a href="https://docs.python.org/3/library/asyncio.html" rel="nofollow">asyncio</a>。<a href="https://github.com/crossbario/autobahn-python">官网</a></li>
<li>Crossbar：开源统一应用路由(Websocket &amp; WAMP for Python on Autobahn)。<a href="https://github.com/crossbario/crossbar/">官网</a></li>
<li>django-socketio：给 Django 用的 WebSockets。<a href="https://github.com/stephenmcd/django-socketio">官网</a></li>
<li>WebSocket-for-Python：为 Python2/3 以及 PyPy 编写的 WebSocket 客户端和服务器库。<a href="https://github.com/Lawouach/WebSocket-for-Python">官网</a></li>
</ul>
<h3><a id="user-content-wsgi-服务器" class="anchor" aria-hidden="true" href="#wsgi-服务器"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>WSGI 服务器</h3>
<p>兼容 WSGI 的 web 服务器</p>
<ul>
<li>gunicorn：Pre-forked, 部分是由 C 语言编写的。<a href="https://pypi.python.org/pypi/gunicorn" rel="nofollow">官网</a></li>
<li>uwsgi：uwsgi 项目的目的是开发一组全栈工具，用来建立托管服务， 由 C 语言编写。<a href="https://uwsgi-docs.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
<li><a href="http://hao.jobbole.com/bjoern/" rel="nofollow">bjoern</a>：异步，非常快速，由 C 语言编写。<a href="https://pypi.python.org/pypi/bjoern" rel="nofollow">官网</a></li>
<li>fapws3：异步 (仅对于网络端)，由 C 语言编写。<a href="http://www.fapws.org/" rel="nofollow">官网</a></li>
<li>meinheld：异步，部分是由 C 语言编写的。<a href="https://pypi.python.org/pypi/meinheld" rel="nofollow">官网</a></li>
<li>netius：异步，非常快速。<a href="https://github.com/hivesolutions/netius">官网</a></li>
<li>paste：多线程，稳定，久经考验。<a href="http://pythonpaste.org/" rel="nofollow">官网</a></li>
<li>rocket：多线程。<a href="https://pypi.python.org/pypi/rocket" rel="nofollow">官网</a></li>
<li>waitress：多线程, 是它驱动着 Pyramid 框架。<a href="https://waitress.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
<li>Werkzeug：一个 WSGI 工具库，驱动着 Flask ，而且可以很方便大嵌入到你的项目中去。<a href="http://werkzeug.pocoo.org/" rel="nofollow">官网</a></li>
</ul>
<h3><a id="user-content-rpc-服务器" class="anchor" aria-hidden="true" href="#rpc-服务器"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>RPC 服务器</h3>
<p>兼容 RPC 的服务器。</p>
<ul>
<li>SimpleJSONRPCServer：这个库是 JSON-RPC 规范的一个实现。<a href="https://github.com/joshmarshall/jsonrpclib/">官网</a></li>
<li>SimpleXMLRPCServer：(Python 标准库) 简单的 XML-RPC 服务器实现，单线程。<a href="https://docs.python.org/2/library/simplexmlrpcserver.html" rel="nofollow">官网</a></li>
<li>zeroRPC：zerorpc 是一个灵活的 RPC 实现，基于 ZeroMQ 和 MessagePack。<a href="https://github.com/0rpc/zerorpc-python">官网</a></li>
</ul>
<h3><a id="user-content-密码学" class="anchor" aria-hidden="true" href="#密码学"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>密码学</h3>
<ul>
<li>cryptography：这个软件包意在提供密码学基本内容和方法提供给 Python 开发者。<a href="https://cryptography.io/en/latest/" rel="nofollow">官网</a></li>
<li>hashids：在 Python 中实现 <a href="http://hashids.org/" rel="nofollow">hashids</a> 。<a href="https://github.com/davidaurelio/hashids-python">官网</a></li>
<li>Paramiko：SSHv2 协议的 Python (2.6+, 3.3+) ，提供客户端和服务端的功能。<a href="http://www.paramiko.org/" rel="nofollow">官网</a></li>
<li>Passlib：安全密码存储／哈希库，<a href="https://pythonhosted.org/passlib/" rel="nofollow">官网</a></li>
<li>PyCrypto：Python 密码学工具箱。<a href="https://www.dlitz.net/software/pycrypto/" rel="nofollow">官网</a></li>
<li>PyNacl：网络和密码学(NaCl) 库的 Python 绑定。<a href="https://github.com/pyca/pynacl">官网</a></li>
</ul>
<h3><a id="user-content-图形用户界面" class="anchor" aria-hidden="true" href="#图形用户界面"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>图形用户界面</h3>
<p>用来创建图形用户界面程序的库。</p>
<ul>
<li>curses：内建的 <a href="http://www.gnu.org/software/ncurses/" rel="nofollow">ncurses</a> 封装，用来创建终端图形用户界面。<a href="https://docs.python.org/2/library/curses.html#module-curses" rel="nofollow">官网</a></li>
<li>enaml：使用类似 QML 的 Declaratic 语法来创建美观的用户界面。<a href="https://github.com/nucleic/enaml">官网</a></li>
<li><a href="http://hao.jobbole.com/kivy/" rel="nofollow">kivy</a>：一个用来创建自然用户交互（NUI）应用程序的库，可以运行在 Windows, Linux, Mac OS X, Android 以及 iOS 平台上。<a href="https://kivy.org/" rel="nofollow">官网</a></li>
<li>pyglet：一个 Python 的跨平台窗口及多媒体库。<a href="https://bitbucket.org/pyglet/pyglet/wiki/Home" rel="nofollow">官网</a></li>
<li>PyQt：跨平台用户界面框架 <a href="http://www.qt.io/" rel="nofollow">Qt</a> 的 Python 绑定 ，支持 Qt v4 和 Qt v5。<a href="https://riverbankcomputing.com/software/pyqt/intro" rel="nofollow">官网</a></li>
<li>PySide：跨平台用户界面框架 <a href="http://www.qt.io/" rel="nofollow">Qt</a> 的 Python 绑定 ，支持 Qt v4。<a href="https://wiki.qt.io/PySide" rel="nofollow">官网</a></li>
<li>Tkinter：Tkinter 是 Python GUI 的一个事实标准库。<a href="https://wiki.python.org/moin/TkInter" rel="nofollow">官网</a></li>
<li>Toga：一个 Python 原生的, 操作系统原生的 GUI 工具包。<a href="https://github.com/pybee/toga">官网</a></li>
<li>urwid：一个用来创建终端 GUI 应用的库，支持组件，事件和丰富的色彩等。<a href="http://urwid.org/" rel="nofollow">官网</a></li>
<li>wxPython：wxPython 是 wxWidgets C++ 类库和 Python 语言混合的产物。<a href="http://wxpython.org/" rel="nofollow">官网</a></li>
<li>PyGObject：GLib/GObject/GIO/GTK+ (GTK+3) 的 Python 绑定。<a href="https://wiki.gnome.org/Projects/PyGObject" rel="nofollow">官网</a></li>
<li>Flexx：Flexx 是一个纯 Python 语言编写的用来创建 GUI 程序的工具集，它使用 web 技术进行界面的展示。<a href="https://github.com/zoofIO/flexx">官网</a></li>
</ul>
<h3><a id="user-content-游戏开发" class="anchor" aria-hidden="true" href="#游戏开发"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>游戏开发</h3>
<p>超赞的游戏开发库。</p>
<ul>
<li>Cocos2d：cocos2d 是一个用来开发 2D 游戏， 示例和其他图形/交互应用的框架。基于 pyglet。<a href="http://cocos2d.org/" rel="nofollow">官网</a></li>
<li>Panda3D：由迪士尼开发的 3D 游戏引擎，并由卡内基梅陇娱乐技术中心负责维护。使用 C++ 编写, 针对 Python 进行了完全的封装。<a href="https://www.panda3d.org/" rel="nofollow">官网</a></li>
<li>Pygame：Pygame 是一组 Python 模块，用来编写游戏。<a href="http://www.pygame.org/news.html" rel="nofollow">官网</a></li>
<li>PyOgre：Ogre 3D 渲染引擎的 Python 绑定，可以用来开发游戏和仿真程序等任何 3D 应用。<a href="http://www.ogre3d.org/tikiwiki/PyOgre" rel="nofollow">官网</a></li>
<li>PyOpenGL：OpenGL 的 Python 绑定及其相关 APIs。<a href="http://pyopengl.sourceforge.net/" rel="nofollow">官网</a></li>
<li>PySDL2：SDL2 库的封装，基于 ctypes。<a href="http://pysdl2.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
<li>RenPy：一个视觉小说（visual novel）引擎。<a href="https://www.renpy.org/" rel="nofollow">官网</a></li>
</ul>
<h3><a id="user-content-日志" class="anchor" aria-hidden="true" href="#日志"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>日志</h3>
<p>用来生成和操作日志的库。</p>
<ul>
<li>logging：(Python 标准库) 为 Python 提供日志功能。<a href="https://docs.python.org/2/library/logging.html" rel="nofollow">官网</a></li>
<li>logbook：Logging 库的替代品。<a href="http://pythonhosted.org/Logbook/" rel="nofollow">官网</a></li>
<li>Eliot：为复杂的和分布式系统创建日志。<a href="https://eliot.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
<li>Raven：Sentry 的 Python 客户端。<a href="http://raven.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
<li>Sentry：实时记录和收集日志的服务器。<a href="https://pypi.python.org/pypi/sentry" rel="nofollow">官网</a></li>
</ul>
<h3><a id="user-content-测试" class="anchor" aria-hidden="true" href="#测试"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>测试</h3>
<p>进行代码库测试和生成测试数据的库。</p>
<ul>
<li>测试框架
<ul>
<li>unittest：(Python 标准库) 单元测试框架。<a href="https://docs.python.org/2/library/unittest.html" rel="nofollow">官网</a></li>
<li>nose：nose 扩展了 unittest 的功能。<a href="https://nose.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
<li>contexts：一个 Python 3.3+ 的 BDD 框架。受到 C# – Machine.Specifications 的启发。<a href="https://github.com/benjamin-hodgson/Contexts">官网</a></li>
<li>hypothesis：Hypothesis 是一个基于先进的 Quickcheck 风格特性的测试库。<a href="https://github.com/DRMacIver/hypothesis">官网</a></li>
<li>mamba：Python 的终极测试工具， 拥护 BDD。<a href="http://nestorsalceda.github.io/mamba/" rel="nofollow">官网</a></li>
<li>PyAutoGUI：PyAutoGUI 是一个人性化的跨平台 GUI 自动测试模块。<a href="https://github.com/asweigart/pyautogui">官网</a></li>
<li>pyshould：Should 风格的断言，基于 <a href="https://github.com/hamcrest/PyHamcrest">PyHamcrest</a>。<a href="https://github.com/drslump/pyshould">官网</a></li>
<li>pytest：一个成熟的全功能 Python 测试工具。<a href="http://pytest.org/latest/" rel="nofollow">官网</a></li>
<li>green：干净，多彩的测试工具。<a href="https://github.com/CleanCut/green">官网</a></li>
<li>pyvows：BDD 风格的测试工具，受 Vows.js 的启发。<a href="http://heynemann.github.io/pyvows/" rel="nofollow">官网</a></li>
<li>Robot Framework：一个通用的自动化测试框架。<a href="https://github.com/robotframework/robotframework">官网</a></li>
</ul>
</li>
<li>Web 测试
<ul>
<li>Selenium：<a href="http://www.seleniumhq.org/" rel="nofollow">Selenium</a> WebDriver 的 Python 绑定。<a href="https://pypi.python.org/pypi/selenium" rel="nofollow">官网</a></li>
<li>locust：使用 Python 编写的，可扩展的用户加载测试工具。<a href="https://github.com/locustio/locust">官网</a></li>
<li>sixpack：一个和语言无关的 A/B 测试框架。<a href="https://github.com/seatgeek/sixpack">官网</a></li>
<li>splinter：开源的 web 应用测试工具。<a href="https://splinter.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
</ul>
</li>
<li>Mock 测试
<ul>
<li>mock：(Python 标准库) 一个用于伪造测试的库。<a href="https://docs.python.org/3/library/unittest.mock.html" rel="nofollow">官网</a></li>
<li>doublex：Python 的一个功能强大的 doubles &nbsp;测试框架。<a href="https://pypi.python.org/pypi/doublex" rel="nofollow">官网</a></li>
<li>freezegun：通过伪造日期模块来生成不同的时间。<a href="https://github.com/spulec/freezegun">官网</a></li>
<li>httmock：针对 Python 2.6+ 和 3.2+ 生成 伪造请求的库。<a href="https://github.com/patrys/httmock">官网</a></li>
<li>httpretty：Python 的 HTTP 请求 mock 工具。<a href="http://falcao.it/HTTPretty/" rel="nofollow">官网</a></li>
<li>responses：伪造 Python 中的 requests 库的一个通用库。<a href="https://github.com/getsentry/responses">官网</a></li>
<li>VCR.py：在你的测试中记录和重放 HTTP 交互。<a href="https://github.com/kevin1024/vcrpy">官网</a></li>
</ul>
</li>
<li>对象工厂
<ul>
<li>factoryboy：一个 Python 用的测试固件 (test fixtures) 替代库。<a href="https://github.com/rbarrois/factoryboy">官网</a></li>
<li>mixer：另外一个测试固件 (test fixtures) 替代库，支持 Django, Flask, SQLAlchemy, Peewee 等。<a href="https://github.com/klen/mixer">官网</a></li>
<li>modelmommy：为 Django 测试创建随机固件。<a href="https://github.com/vandersonmota/modelmommy">官网</a></li>
</ul>
</li>
<li>代码覆盖率
<ul>
<li>coverage：代码覆盖率测量。<a href="https://pypi.python.org/pypi/coverage" rel="nofollow">官网</a></li>
<li>Codecov：一个代码覆盖率测试工具，为开源项目提供免费代码覆盖率测试服务。<a href="https://codecov.io/" rel="nofollow">官网</a></li>
</ul>
</li>
<li>伪数据
<ul>
<li>faker：一个 Python 库，用来生成伪数据。<a href="http://www.joke2k.net/faker/" rel="nofollow">官网</a></li>
<li>fake2db：伪数据库生成器。<a href="https://github.com/emirozer/fake2db">官网</a></li>
<li>radar：生成随机的日期/时间。<a href="https://pypi.python.org/pypi/radar" rel="nofollow">官网</a></li>
</ul>
</li>
<li>错误处理
<ul>
<li>FuckIt.py：FuckIt.py 使用最先进的技术来保证你的 Python 代码无论对错都能继续运行。<a href="https://github.com/ajalt/fuckitpy">官网</a></li>
</ul>
</li>
</ul>
<h3><a id="user-content-代码分析和-lint-工具" class="anchor" aria-hidden="true" href="#代码分析和-lint-工具"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>代码分析和 Lint 工具</h3>
<p>进行代码分析，解析和操作代码库的库和工具。</p>
<ul>
<li>代码分析
<ul>
<li>coala：语言独立和易于扩展的代码分析应用程序。<a href="http://coala-analyzer.org/" rel="nofollow">官网</a></li>
<li>code2flow：把你的 Python 和 JavaScript 代码转换为流程图。<a href="https://github.com/scottrogowski/code2flow">官网</a></li>
<li>pycallgraph：这个库可以把你的 Python 应用的流程(调用图)进行可视化。<a href="https://github.com/gak/pycallgraph">官网</a></li>
<li>pysonar2：Python 类型推断和检索工具。<a href="https://github.com/yinwang0/pysonar2">官网</a></li>
</ul>
</li>
<li>Lint 工具
<ul>
<li>Flake8：模块化源码检查工具: pep8, pyflakes 以及 co。<a href="https://pypi.python.org/pypi/flake8" rel="nofollow">官网</a></li>
<li>Pylint：一个完全可定制的源码分析器。<a href="https://www.pylint.org/" rel="nofollow">官网</a></li>
<li>YAPF: Google 的 Python 代码格式化工具。<a href="https://github.com/google/yapf">官网</a></li>
<li>pylama：Python 和 JavaScript 的代码审查工具。<a href="https://pylama.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
</ul>
</li>
<li>代码格式化
<ul>
<li>autopep8：自动格式化 Python 代码，以使其符合 PEP8 规范。<a href="https://github.com/hhatto/autopep8">官网</a></li>
<li>black：一个坚定的 Python 代码格式化工具。<a href="https://github.com/ambv/black">官网</a></li>
</ul>
</li>
</ul>
<h3><a id="user-content-调试工具" class="anchor" aria-hidden="true" href="#调试工具"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>调试工具</h3>
<p>用来进行代码调试的库。</p>
<ul>
<li>调试器
<ul>
<li>ipdb：IPython 启用的 <a href="https://docs.python.org/2/library/pdb.html" rel="nofollow">pdb</a>。<a href="https://pypi.python.org/pypi/ipdb" rel="nofollow">官网</a></li>
<li>pudb：全屏，基于控制台的 Python 调试器。<a href="https://pypi.python.org/pypi/pudb" rel="nofollow">官网</a></li>
<li>pyringe：可以在 Python 进程中附加和注入代码的调试器。<a href="https://github.com/google/pyringe">官网</a></li>
<li>wdb：一个奇异的 web 调试器，通过 WebSockets 工作。<a href="https://github.com/Kozea/wdb">官网</a></li>
<li>winpdb：一个具有图形用户界面的 Python 调试器，可以进行远程调试，基于 rpdb2。<a href="http://winpdb.org/" rel="nofollow">官网</a></li>
<li>django-debug-toolbar：为 Django 显示各种调试信息。<a href="https://github.com/django-debug-toolbar/django-debug-toolbar">官网</a></li>
<li>django-devserver：一个 Django 运行服务器的替代品。<a href="https://github.com/dcramer/django-devserver">官网</a></li>
<li>flask-debugtoolbar：django-debug-toolbar 的 flask 版。<a href="https://github.com/mgood/flask-debugtoolbar">官网</a></li>
</ul>
</li>
<li>性能分析器
<ul>
<li>lineprofiler：逐行性能分析。<a href="https://github.com/rkern/lineprofiler">官网</a></li>
<li><a href="http://hao.jobbole.com/memory_profiler/" rel="nofollow">Memory Profiler</a>：监控 Python 代码的内存使用。<a href="http://pypi.python.org/pypi/memory_profiler" rel="nofollow">官网</a>、<a href="https://github.com/fabianp/memoryprofiler">内存</a></li>
<li>profiling：一个交互式 Python 性能分析工具。<a href="https://github.com/what-studio/profiling">官网</a></li>
</ul>
</li>
<li>其他
<ul>
<li>pyelftools：解析和分析 ELF 文件以及 DWARF 调试信息。<a href="https://github.com/eliben/pyelftools">官网</a></li>
<li>python-statsd：<a href="https://github.com/etsy/statsd/">statsd</a> 服务器的 Python 客户端。<a href="https://github.com/WoLpH/python-statsd">官网</a></li>
</ul>
</li>
</ul>
<h3><a id="user-content-科学计算和数据分析" class="anchor" aria-hidden="true" href="#科学计算和数据分析"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>科学计算和数据分析</h3>
<p>用来进行科学计算和数据分析的库。</p>
<ul>
<li>astropy：一个天文学 Python 库。<a href="http://www.astropy.org/" rel="nofollow">官网</a></li>
<li><a href="http://hao.jobbole.com/bcbio-nextgen/" rel="nofollow">bcbio-nextgen</a>：这个工具箱为全自动高通量测序分析提供符合最佳实践的处理流程。<a href="https://github.com/chapmanb/bcbio-nextgen">官网</a></li>
<li>bccb：生物分析相关代码集合。<a href="https://github.com/chapmanb/bcbb">官网</a></li>
<li>Biopython：Biopython 是一组可以免费使用的用来进行生物计算的工具。<a href="http://biopython.org/wiki/MainPage" rel="nofollow">官网</a></li>
<li><a href="http://hao.jobbole.com/blaze/" rel="nofollow">blaze</a>：NumPy 和 Pandas 的大数据接口。<a href="http://blaze.readthedocs.org/en/latest/index.html" rel="nofollow">官网</a></li>
<li><a href="http://hao.jobbole.com/cclib/" rel="nofollow">cclib</a>：一个用来解析和解释计算化学软件包输出结果的库。<a href="http://cclib.github.io/" rel="nofollow">官网</a></li>
<li>NetworkX：一个为复杂网络设计的高性能软件。<a href="https://networkx.github.io/" rel="nofollow">官网</a></li>
<li>Neupy：执行和测试各种不同的人工神经网络算法。<a href="http://neupy.com/pages/home.html" rel="nofollow">官网</a></li>
<li>Numba：Python JIT (just in time) 编译器，针对科学用的 Python ，由 Cython 和 NumPy 的开发者开发。<a href="http://numba.pydata.org/" rel="nofollow">官网</a></li>
<li><a href="http://hao.jobbole.com/numpy/" rel="nofollow">NumPy</a>：使用 Python 进行科学计算的基础包。<a href="http://www.numpy.org/" rel="nofollow">官网</a></li>
<li>Open Babel：一个化学工具箱，用来描述多种化学数据。<a href="http://openbabel.org/wiki/MainPage" rel="nofollow">官网</a></li>
<li><a href="http://hao.jobbole.com/open-mining/" rel="nofollow">Open Mining</a>：使用 Python 挖掘商业情报 (BI) (Pandas web 接口)。<a href="https://github.com/mining/mining">官网</a></li>
<li><a href="http://hao.jobbole.com/orange/" rel="nofollow">orange</a>：通过可视化编程或 Python 脚本进行数据挖掘，数据可视化，分析和机器学习。<a href="http://orange.biolab.si/" rel="nofollow">官网</a></li>
<li>Pandas：提供高性能，易用的数据结构和数据分析工具。<a href="http://pandas.pydata.org/" rel="nofollow">官网</a></li>
<li>PyDy：PyDy 是 Python Dynamics 的缩写，用来为动力学运动建模工作流程提供帮助， 基于 NumPy, SciPy, IPython 和 matplotlib。<a href="http://www.pydy.org/" rel="nofollow">官网</a></li>
<li><a href="http://hao.jobbole.com/pymc/" rel="nofollow">PyMC</a>：马尔科夫链蒙特卡洛采样工具。<a href="https://github.com/pymc-devs/pymc3">官网</a></li>
<li>RDKit：化学信息学和机器学习软件。<a href="http://www.rdkit.org/" rel="nofollow">官网</a></li>
<li><a href="http://hao.jobbole.com/scipy/" rel="nofollow">SciPy</a>：由一些基于 Python ，用于数学，科学和工程的开源软件构成的生态系统。<a href="http://www.scipy.org/" rel="nofollow">官网</a></li>
<li><a href="http://hao.jobbole.com/statsmodels/" rel="nofollow">statsmodels</a>：统计建模和计量经济学。<a href="https://github.com/statsmodels/statsmodels">官网</a></li>
<li>SymPy：一个用于符号数学的 Python 库。<a href="https://github.com/sympy/sympy">官网</a></li>
<li>zipline：一个 Python 算法交易库。<a href="https://github.com/quantopian/zipline">官网</a></li>
<li><a href="http://hao.jobbole.com/bayesian-belief-networks/" rel="nofollow">Bayesian-belief-networks</a>：优雅的贝叶斯信念网络框架。<a href="https://github.com/eBay/bayesian-belief-networks">官网</a></li>
</ul>
<h3><a id="user-content-数据可视化" class="anchor" aria-hidden="true" href="#数据可视化"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>数据可视化</h3>
<p>进行数据可视化的库。 参见: <a href="https://github.com/sorrycc/awesome-javascript#data-visualization">awesome-javascript</a>。</p>
<ul>
<li>matplotlib：一个 Python 2D 绘图库。<a href="http://matplotlib.org/" rel="nofollow">官网</a></li>
<li>bokeh：用 Python 进行交互式 web 绘图。<a href="https://github.com/bokeh/bokeh">官网</a></li>
<li>ggplot：ggplot2 给 R 提供的 API 的 Python 版本。<a href="https://github.com/yhat/ggplot">官网</a></li>
<li>plotly：协同 Python 和 matplotlib 工作的 web 绘图库。<a href="https://plot.ly/python/" rel="nofollow">官网</a></li>
<li>pyecharts：基于百度 Echarts 的数据可视化库。<a href="https://github.com/chenjiandongx/pyecharts">官网</a></li>
<li>pygal：一个 Python SVG 图表创建工具。<a href="http://www.pygal.org/en/latest/" rel="nofollow">官网</a></li>
<li>pygraphviz：Graphviz 的 Python 接口。<a href="https://pypi.python.org/pypi/pygraphviz" rel="nofollow">官网</a></li>
<li>PyQtGraph：交互式实时 2D/3D/ 图像绘制及科学/工程学组件。<a href="http://www.pyqtgraph.org/" rel="nofollow">官网</a></li>
<li>SnakeViz：一个基于浏览器的 Python's cProfile 模块输出结果查看工具。<a href="http://jiffyclub.github.io/snakeviz/" rel="nofollow">官网</a></li>
<li>vincent：把 Python 转换为 Vega 语法的转换工具。<a href="https://github.com/wrobstory/vincent">官网</a></li>
<li>VisPy：基于 OpenGL 的高性能科学可视化工具。<a href="http://vispy.org/" rel="nofollow">官网</a></li>
</ul>
<h3><a id="user-content-计算机视觉" class="anchor" aria-hidden="true" href="#计算机视觉"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>计算机视觉</h3>
<p>计算机视觉库。</p>
<ul>
<li>OpenCV：开源计算机视觉库。<a href="http://opencv.org/" rel="nofollow">官网</a></li>
<li>pyocr：Tesseract 和 Cuneiform 的包装库。<a href="https://github.com/jflesch/pyocr">官网</a></li>
<li>pytesseract：<a href="https://github.com/tesseract-ocr">Google Tesseract OCR</a> 的另一包装库。<a href="https://github.com/madmaze/pytesseract">官网</a></li>
<li><a href="http://hao.jobbole.com/simplecv/" rel="nofollow">SimpleCV</a>：一个用来创建计算机视觉应用的开源框架。<a href="http://simplecv.org/" rel="nofollow">官网</a></li>
</ul>
<h3><a id="user-content-机器学习" class="anchor" aria-hidden="true" href="#机器学习"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>机器学习</h3>
<p>机器学习库。 参见: <a href="https://github.com/josephmisiti/awesome-machine-learning#python">awesome-machine-learning</a>.</p>
<ul>
<li>Caffe: 一个 <a href="https://github.com/BVLC/caffe">Caffe</a> 的 python 接口。<a href="http://caffe.berkeleyvision.org" rel="nofollow">官网</a></li>
<li><a href="https://github.com/caffe2/caffe2/">Caffe2</a>：一个轻量级的，模块化的，可扩展的深度学习框架。<a href="https://caffe2.ai/" rel="nofollow">官网</a></li>
<li>Crab：灵活、快速的推荐引擎。<a href="https://github.com/muricoca/crab">官网</a></li>
<li>gensim：人性化的话题建模库。<a href="https://github.com/piskvorky/gensim">官网</a></li>
<li>hebel：GPU 加速的深度学习库。<a href="https://github.com/hannes-brt/hebel">官网</a></li>
<li><a href="https://github.com/keras-team/keras">keras</a>: 以 tensorflow/theano/CNTK 为后端的深度学习封装库，快速上手神经网络。<a href="https://keras.io/" rel="nofollow">官网</a></li>
<li><a href="https://github.com/apache/incubator-mxnet">MXNet</a>：一个高效和灵活的深度学习框架。<a href="http://mxnet.incubator.apache.org/" rel="nofollow">官网</a></li>
<li>NuPIC：智能计算 Numenta 平台。<a href="https://github.com/numenta/nupic">官网</a></li>
<li>pattern：Python 网络挖掘模块。<a href="https://github.com/clips/pattern">官网</a></li>
<li><a href="http://hao.jobbole.com/pybrain/" rel="nofollow">PyBrain</a>：另一个 Python 机器学习库。<a href="https://github.com/pybrain/pybrain">官网</a></li>
<li>pydeep：Python 深度学习库。<a href="https://github.com/andersbll/deeppy">官网</a></li>
<li><a href="http://hao.jobbole.com/pylearn2/" rel="nofollow">Pylearn2</a>：一个基于 <a href="https://github.com/Theano/Theano">Theano</a> 的机器学习库。<a href="https://github.com/lisa-lab/pylearn2">官网</a></li>
<li><a href="http://hao.jobbole.com/python-recsys/" rel="nofollow">python-recsys</a>：一个用来实现推荐系统的 Python 库。<a href="https://github.com/ocelma/python-recsys">官网</a></li>
<li><a href="https://github.com/pytorch/pytorch">Pytorch</a>：一个具有张量和动态神经网络，并有强大 GPU 加速能力的深度学习框架。<a href="http://pytorch.org/" rel="nofollow">官网</a></li>
<li>scikit-learn：基于 SciPy 构建的机器学习 Python 模块。<a href="http://scikit-learn.org/" rel="nofollow">官网</a></li>
<li>skflow：一个 <a href="https://github.com/tensorflow/tensorflow">TensorFlow</a> 的简化接口(模仿 scikit-learn)。<a href="https://github.com/tensorflow/skflow">官网</a></li>
<li><a href="https://github.com/tensorflow/tensorflow">TensorFlow</a>：谷歌开源的最受欢迎的深度学习框架。<a href="http://tensorflow.org/" rel="nofollow">官网</a></li>
<li>Theano：一个快速数值计算库。<a href="https://github.com/Theano/Theano">官网</a></li>
<li>vowpalporpoise：轻量级 <a href="https://github.com/JohnLangford/vowpalwabbit/">Vowpal Wabbit</a> 的 Python 封装。<a href="https://github.com/josephreisinger/vowpalporpoise">官网</a></li>
</ul>
<h3><a id="user-content-mapreduce" class="anchor" aria-hidden="true" href="#mapreduce"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>MapReduce</h3>
<p>MapReduce 框架和库。</p>
<ul>
<li><a href="http://hao.jobbole.com/dpark/" rel="nofollow">dpark</a>：Spark 的 Python 克隆版，一个类似 MapReduce 的框架。<a href="https://github.com/douban/dpark">官网</a></li>
<li>dumbo：这个 Python 模块可以让人轻松的编写和运行 Hadoop 程序。<a href="https://github.com/klbostee/dumbo">官网</a></li>
<li>luigi：这个模块帮你构建批处理作业的复杂流水线。<a href="https://github.com/spotify/luigi">官网</a></li>
<li>mrjob：在 Hadoop 或 Amazon Web Services 上运行 MapReduce 任务。<a href="https://github.com/Yelp/mrjob">官网</a></li>
<li>PySpark：Spark 的 Python API 。<a href="http://spark.apache.org/docs/latest/programming-guide.html" rel="nofollow">官网</a></li>
<li>streamparse：运行针对事实数据流的 Python 代码。集成了 <a href="http://storm.apache.org/" rel="nofollow">Apache Storm</a>。<a href="https://github.com/Parsely/streamparse">官网</a></li>
</ul>
<h3><a id="user-content-函数式编程" class="anchor" aria-hidden="true" href="#函数式编程"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>函数式编程</h3>
<p>使用 Python 进行函数式编程。</p>
<ul>
<li>CyToolz：Toolz 的 Cython 实现 : 高性能函数式工具。<a href="https://github.com/pytoolz/cytoolz/">官网</a></li>
<li>fn.py：在 Python 中进行函数式编程 : 实现了一些享受函数式编程缺失的功能。<a href="https://github.com/kachayev/fn.py">官网</a></li>
<li>funcy：炫酷又实用的函数式工具。<a href="https://github.com/Suor/funcy">官网</a></li>
<li>Toolz：一组用于迭代器，函数和字典的函数式编程工具。<a href="https://github.com/pytoolz/toolz">官网</a></li>
</ul>
<h3><a id="user-content-第三方-api" class="anchor" aria-hidden="true" href="#第三方-api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>第三方 API</h3>
<p>用来访问第三方 API 的库。 参见： <a href="https://github.com/realpython/list-of-python-api-wrappers">List of Python API Wrappers and Libraries</a>。</p>
<ul>
<li>apache-libcloud：一个为各种云设计的 Python 库。<a href="https://libcloud.apache.org/" rel="nofollow">官网</a></li>
<li>boto：Amazon Web Services 的 Python 接口。<a href="https://github.com/boto/boto">官网</a></li>
<li>django-wordpress：WordPress models and views for Django.<a href="https://github.com/sunlightlabs/django-wordpress/">官网</a></li>
<li>facebook-sdk：Facebook 平台的 Python SDK.<a href="https://github.com/mobolic/facebook-sdk">官网</a></li>
<li>facepy：Facepy 让和 Facebook's Graph API 的交互变得更容易。<a href="https://github.com/jgorset/facepy">官网</a></li>
<li>gmail：Gmail 的 Python 接口。<a href="https://github.com/charlierguo/gmail">官网</a></li>
<li>google-api-python-client：Python 用的 Google APIs 客户端库。<a href="https://github.com/google/google-api-python-client">官网</a></li>
<li>gspread：Google 电子表格的 Python API.<a href="https://github.com/burnash/gspread">官网</a></li>
<li>twython：Twitter API 的封装。<a href="https://github.com/ryanmcgrath/twython">官网</a></li>
</ul>
<h3><a id="user-content-devops-工具" class="anchor" aria-hidden="true" href="#devops-工具"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>DevOps 工具</h3>
<p>用于 DevOps 的软件和库。</p>
<ul>
<li>Ansible：一个非常简单的 IT 自动化平台。<a href="https://github.com/ansible/ansible">官网</a></li>
<li>SaltStack：基础设施自动化和管理系统。<a href="https://github.com/saltstack/salt">官网</a></li>
<li>OpenStack：用于构建私有和公有云的开源软件。<a href="http://www.openstack.org/" rel="nofollow">官网</a></li>
<li>Docker Compose：快速，分离的开发环境，使用 Docker。<a href="https://docs.docker.com/compose/" rel="nofollow">官网</a></li>
<li>Fabric：一个简单的，Python 风格的工具，用来进行远程执行和部署。<a href="http://www.fabfile.org/" rel="nofollow">官网</a></li>
<li>cuisine：为 Fabric 提供一系列高级函数。<a href="https://github.com/sebastien/cuisine">官网</a></li>
<li>Fabtools：一个用来编写超赞的 Fabric 文件的工具。<a href="https://github.com/ronnix/fabtools">官网</a></li>
<li>gitapi：Git 的纯 Python API。<a href="https://bitbucket.org/haard/gitapi" rel="nofollow">官网</a></li>
<li>hgapi：Mercurial 的纯 Python API。<a href="https://bitbucket.org/haard/hgapi" rel="nofollow">官网</a></li>
<li>honcho：<a href="https://github.com/ddollar/foreman">Foreman</a> 的 Python 克隆版，用来管理基于 <a href="https://devcenter.heroku.com/articles/procfile" rel="nofollow">Procfile</a> 的应用。<a href="https://github.com/nickstenning/honcho">官网</a></li>
<li>pexpect：Controlling interactive programs in a pseudo-terminal like 在一个伪终端中控制交互程序，就像 GNU expect 一样。<a href="https://github.com/pexpect/pexpect">官网</a></li>
<li>psutil：一个跨平台进程和系统工具模块。<a href="https://github.com/giampaolo/psutil">官网</a></li>
<li>supervisor：UNIX 的进程控制系统。<a href="https://github.com/Supervisor/supervisor">官网</a></li>
</ul>
<h3><a id="user-content-任务调度" class="anchor" aria-hidden="true" href="#任务调度"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>任务调度</h3>
<p>任务调度库。</p>
<ul>
<li>APScheduler：轻巧但强大的进程内任务调度，使你可以调度函数。<a href="http://apscheduler.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
<li>django-schedule：一个 Django 排程应用。<a href="https://github.com/thauber/django-schedule">官网</a></li>
<li>doit：一个任务执行和构建工具。<a href="http://pydoit.org/" rel="nofollow">官网</a></li>
<li>gunnery：分布式系统使用的多用途任务执行工具 ，具有 web 交互界面。<a href="https://github.com/gunnery/gunnery">官网</a></li>
<li>Joblib：一组为 Python 提供轻量级作业流水线的工具。<a href="http://pythonhosted.org/joblib/index.html" rel="nofollow">官网</a></li>
<li>Plan：如有神助地编写 crontab 文件。<a href="https://github.com/fengsp/plan">官网</a></li>
<li>schedule：人性化的 Python 任务调度库。<a href="https://github.com/dbader/schedule">官网</a></li>
<li>Spiff：使用纯 Python 实现的强大的工作流引擎。<a href="https://github.com/knipknap/SpiffWorkflow">官网</a></li>
<li>&nbsp; TaskFlow：一个可以让你方便执行任务的 Python 库，一致并且可靠。<a href="http://docs.openstack.org/developer/taskflow/" rel="nofollow">官网</a>
*&nbsp;  AirFlow：Airflow 是Airbnb公司开源的，是一个工作流分配管理系统，通过有向非循环图的方式管理任务流程，设置任务依赖关系和时间调度。<a href="https://airflow.incubator.apache.org/" rel="nofollow">官方</a>
&nbsp;</li>
</ul>
<h3><a id="user-content-外来函数接口" class="anchor" aria-hidden="true" href="#外来函数接口"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>外来函数接口</h3>
<p>使用外来函数接口的库。</p>
<ul>
<li>cffi：用来调用 C 代码的外来函数接口。<a href="https://pypi.python.org/pypi/cffi" rel="nofollow">官网</a></li>
<li><a href="http://hao.jobbole.com/ctypes/" rel="nofollow">ctypes</a>：(Python 标准库) 用来调用 C 代码的外来函数接口。<a href="https://docs.python.org/2/library/ctypes.html" rel="nofollow">官网</a></li>
<li>PyCUDA：Nvidia CUDA API 的封装。<a href="https://mathema.tician.de/software/pycuda/" rel="nofollow">官网</a></li>
<li>SWIG：简化的封装和接口生成器。<a href="http://www.swig.org/Doc1.3/Python.html" rel="nofollow">官网</a></li>
</ul>
<h3><a id="user-content-高性能" class="anchor" aria-hidden="true" href="#高性能"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>高性能</h3>
<p>让 Python 更快的库。</p>
<ul>
<li>Cython：优化的 Python 静态编译器。使用类型混合使 Python 编译成 C 或 C++ 模块来获得性能的极大提升。<a href="http://cython.org/" rel="nofollow">官网</a></li>
<li>PeachPy：嵌入 Python 的 x86-64 汇编器。可以被用作 Python 内联的汇编器或者是独立的汇编器，用于 Windows, Linux, OS X, Native Client 或者 Go 。<a href="https://github.com/Maratyszcza/PeachPy">官网</a></li>
<li>PyPy：使用 Python 实现的 Python。解释器使用黑魔法加快 Python 运行速度且不需要加入额外的类型信息。<a href="http://pypy.org/" rel="nofollow">官网</a></li>
<li><a href="http://hao.jobbole.com/pyston-llvm-jit/" rel="nofollow">Pyston</a>：使用 LLVM 和现代 JIT 技术构建的 Python 实现，目标是为了获得很好的性能。<a href="https://github.com/dropbox/pyston">官网</a></li>
<li>Stackless Python：一个强化版的 Python。<a href="https://bitbucket.org/stackless-dev/stackless/overview" rel="nofollow">官网</a></li>
</ul>
<h3><a id="user-content-微软的-windows-平台" class="anchor" aria-hidden="true" href="#微软的-windows-平台"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>微软的 Windows 平台</h3>
<p>在 Windows 平台上进行 Python 编程。</p>
<ul>
<li>Python(x,y)：面向科学应用的 Python 发行版，基于 Qt 和 Spyder。<a href="http://python-xy.github.io/" rel="nofollow">官网</a></li>
<li>pythonlibs：非官方的 Windows 平台 Python 扩展二进制包。<a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/" rel="nofollow">官网</a></li>
<li>PythonNet：Python 与 .NET 公共语言运行库 (CLR)的集成。<a href="https://github.com/pythonnet/pythonnet">官网</a></li>
<li>PyWin32：针对 Windows 的 Python 扩展。<a href="https://sourceforge.net/projects/pywin32/" rel="nofollow">官网</a></li>
<li>WinPython：Windows 7/8 系统下便携式开发环境。<a href="https://winpython.github.io/" rel="nofollow">官网</a></li>
</ul>
<h3><a id="user-content-网络可视化和-sdn" class="anchor" aria-hidden="true" href="#网络可视化和-sdn"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>网络可视化和 SDN</h3>
<p>用来进行网络可视化和 SDN(软件定义网络)的工具和库。</p>
<ul>
<li>Mininet：一款流行的网络模拟器以及用 Python 编写的 API。<a href="http://mininet.org/" rel="nofollow">官网</a></li>
<li>POX：一个针对基于 Python 的软件定义网络应用（例如 OpenFlow SDN 控制器）的开源开发平台。<a href="https://github.com/noxrepo/pox">官网</a></li>
<li>Pyretic：火热的 SDN 编程语言中的一员，为网络交换机和模拟器提供强大的抽象能力。<a href="http://frenetic-lang.org/pyretic/" rel="nofollow">官网</a></li>
<li>&nbsp; SDX Platform：基于 SDN 的 IXP 实现，影响了 Mininet, POX 和 Pyretic。<a href="https://github.com/sdn-ixp/internet2award">官网</a></li>
<li>&nbsp; NRU：一个基于组件的软件定义网络框架。<a href="http://ryu.readthedocs.io/en/latest/" rel="nofollow">官网</a></li>
</ul>
<h3><a id="user-content-硬件" class="anchor" aria-hidden="true" href="#硬件"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>硬件</h3>
<p>用来对硬件进行编程的库。</p>
<ul>
<li>ino：操作 <a href="https://www.arduino.cc/" rel="nofollow">Arduino</a> 的命令行工具。<a href="http://inotool.org/" rel="nofollow">官网</a></li>
<li>Pyro：Python 机器人编程库。<a href="http://pyrorobotics.com/" rel="nofollow">官网</a></li>
<li>PyUserInput：跨平台的，控制鼠标和键盘的模块。<a href="https://github.com/SavinaRoja/PyUserInput">官网</a></li>
<li>scapy：一个非常棒的操作数据包的库。<a href="https://github.com/secdev/scapy">官网</a></li>
<li>wifi：一个 Python 库和命令行工具用来在 Linux 平台上操作 WiFi。<a href="https://wifi.readthedocs.org/en/latest/" rel="nofollow">官网</a></li>
<li>Pingo：Pingo 为类似 Raspberry Pi，pcDuino， Intel Galileo 等设备提供统一的 API 用以编程。<a href="http://www.pingo.io/" rel="nofollow">官网</a></li>
</ul>
<h3><a id="user-content-兼容性" class="anchor" aria-hidden="true" href="#兼容性"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>兼容性</h3>
<p>帮助从 Python 2 向 Python 3 迁移的库。</p>
<ul>
<li>Python-Future：这就是 Python 2 和 Python 3 之间丢失的那个兼容性层。<a href="http://python-future.org/index.html" rel="nofollow">官网</a></li>
<li>Python-Modernize：使 Python 代码更加现代化以便最终迁移到 Python 3。<a href="https://github.com/mitsuhiko/python-modernize">官网</a></li>
<li>Six：Python 2 和 3 的兼容性工具。<a href="https://pypi.python.org/pypi/six" rel="nofollow">官网</a></li>
</ul>
<h3><a id="user-content-杂项" class="anchor" aria-hidden="true" href="#杂项"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>杂项</h3>
<p>不属于上面任何一个类别，但是非常有用的库。</p>
<ul>
<li>blinker：一个快速的 Python 进程内信号/事件分发系统。<a href="https://github.com/jek/blinker">官网</a></li>
<li>itsdangerous：一系列辅助工具用来将可信的数据传入不可信的环境。<a href="https://github.com/pallets/itsdangerous">官网</a></li>
<li>pluginbase：一个简单但是非常灵活的 Python 插件系统。<a href="https://github.com/mitsuhiko/pluginbase">官网</a></li>
<li>Pychievements：一个用来创建和追踪成就的 Python 框架。<a href="https://github.com/PacketPerception/pychievements">官网</a></li>
<li><a href="http://hao.jobbole.com/tryton/" rel="nofollow">Tryton</a>：一个通用商务框架。<a href="http://www.tryton.org/" rel="nofollow">官网</a></li>
</ul>
<h3><a id="user-content-算法和设计模式" class="anchor" aria-hidden="true" href="#算法和设计模式"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>算法和设计模式</h3>
<p>Python 实现的算法和设计模式。</p>
<ul>
<li><a href="http://hao.jobbole.com/algorithms/" rel="nofollow">algorithms</a>：一个 Python 算法模块。<a href="https://github.com/nryoung/algorithms">官网</a></li>
<li>python-patterns：Python 设计模式的集合。<a href="https://github.com/faif/python-patterns">官网</a></li>
<li>sortedcontainers：快速，纯 Python 实现的 SortedList，SortedDict 和 SortedSet 类型。<a href="http://www.grantjenks.com/docs/sortedcontainers/" rel="nofollow">官网</a></li>
<li>Python：使用Python实现的算法大全。<a href="https://github.com/TheAlgorithms/Python">官网</a></li>
</ul>
<h3><a id="user-content-编辑器插件" class="anchor" aria-hidden="true" href="#编辑器插件"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>编辑器插件</h3>
<p>编辑器和 IDE 的插件</p>
<ul>
<li>Emacs
<ul>
<li>Elpy：Emacs Python 开发环境。<a href="https://github.com/jorgenschaefer/elpy">官网</a></li>
</ul>
</li>
<li>Sublime Text
<ul>
<li>SublimeJEDI：一个 Sublime Text 插件，用来使用超赞的自动补全库 Jedi。<a href="https://github.com/srusskih/SublimeJEDI">官网</a></li>
<li>Anaconda：Anaconda 把你的 Sublime Text 3 变成一个功能齐全的 Python IDE。<a href="https://github.com/DamnWidget/anaconda">官网</a></li>
</ul>
</li>
<li>Vim
<ul>
<li><a href="http://hao.jobbole.com/youcompleteme/" rel="nofollow">YouCompleteMe</a>：引入基于 <a href="https://github.com/davidhalter/jedi">Jedi</a> 的 Python 自动补全引擎。<a href="https://github.com/Valloric/YouCompleteMe">官网</a></li>
<li>Jedi-vim：绑定 Vim 和 Jedi 自动补全库对 Python 进行自动补全。<a href="https://github.com/davidhalter/jedi-vim">官网</a></li>
<li>Python-mode：将 Vim 变成 Python IDE 的一款多合一插件。<a href="https://github.com/klen/python-mode">官网</a></li>
</ul>
</li>
<li>Visual Studio
<ul>
<li>PTVS：Visual Studio 的 Python 工具。<a href="https://github.com/Microsoft/PTVS">官网</a></li>
</ul>
</li>
</ul>
<h3><a id="user-content-集成开发环境" class="anchor" aria-hidden="true" href="#集成开发环境"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>集成开发环境</h3>
<p>流行的 Python 集成开发环境。</p>
<ul>
<li>PyCharm：商业化的 Python IDE ，由 JetBrains 开发。也有免费的社区版提供。<a href="https://www.jetbrains.com/pycharm/" rel="nofollow">官网</a></li>
<li>LiClipse：基于 Eclipse 的免费多语言 IDE 。使用 PyDev 来支持 Python 。<a href="http://www.liclipse.com/" rel="nofollow">官网</a></li>
<li>Spyder：开源 Python IDE。<a href="https://github.com/spyder-ide/spyder">官网</a></li>
</ul>
<h3><a id="user-content-自动聊天工具" class="anchor" aria-hidden="true" href="#自动聊天工具"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>自动聊天工具</h3>
<p>用于开发聊天机器人的库</p>
<ul>
<li>&nbsp; Errbot：最简单和最流行的聊天机器人用来实现自动聊天工具。<a href="http://errbot.io/en/latest/" rel="nofollow">官网</a></li>
</ul>
<h2><a id="user-content-服务" class="anchor" aria-hidden="true" href="#服务"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>服务</h2>
<p>在线工具和简化开发的 API 。</p>
<h3><a id="user-content-金融数据" class="anchor" aria-hidden="true" href="#金融数据"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>金融数据</h3>
<ul>
<li>Tushare ：一个可以提供免费股票、基金、期货、港股等金融数据的 Python 开源数据。<a href="http://tushare.org" rel="nofollow">官网</a></li>
<li>Ta-Lib ：金融数据技术分析库，可以依据原始金融数据计算各种技术指标,计算性能比较优异。<a href="https://www.ta-lib.org/" rel="nofollow">官网</a></li>
</ul>
<h3><a id="user-content-持续集成" class="anchor" aria-hidden="true" href="#持续集成"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>持续集成</h3>
<p>参见: <a href="https://github.com/ciandcd/awesome-ciandcd#online-build-system">awesome-CIandCD</a>.</p>
<ul>
<li>Travis CI：一个流行的工具，为你的开源和 <a href="https://travis-ci.com/" rel="nofollow">私人</a> 项目提供持续集成服务。(仅支持 GitHub)<a href="https://travis-ci.org/" rel="nofollow">官网</a></li>
<li>CircleCI：一个持续集成工具，可以非常快速的进行并行测试。 (仅支持 GitHub)<a href="https://circleci.com/" rel="nofollow">官网</a></li>
<li>Vexor CI：一个为私人 app 提供持续集成的工具，支持按分钟付费。<a href="https://vexor.io/" rel="nofollow">官网</a></li>
<li>Wercker：基于 Docker 平台，用来构建和部署微服务。<a href="http://wercker.com/" rel="nofollow">官网</a></li>
</ul>
<h3><a id="user-content-代码质量" class="anchor" aria-hidden="true" href="#代码质量"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>代码质量</h3>
<ul>
<li>Codacy：自动化代码审查，更加快速的发布高质量代码。对于开源项目是免费的。<a href="https://www.codacy.com/" rel="nofollow">官网</a></li>
<li>QuantifiedCode：一个数据驱动、自动、持续的代码审查工具。<a href="https://www.quantifiedcode.com/" rel="nofollow">官网</a></li>
</ul>
<h2><a id="user-content-资源" class="anchor" aria-hidden="true" href="#资源"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>资源</h2>
<p>在这里可以找到新的 Python 库。</p>
<h3><a id="user-content-网站" class="anchor" aria-hidden="true" href="#网站"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>网站</h3>
<ul>
<li><a href="https://www.reddit.com/r/python" rel="nofollow">r/Python</a></li>
<li><a href="https://www.coolgithubprojects.com/" rel="nofollow">CoolGithubProjects</a></li>
<li><a href="https://www.djangopackages.com/" rel="nofollow">Django Packages</a></li>
<li><a href="http://www.fullstackpython.com/" rel="nofollow">Full Stack Python</a></li>
<li><a href="http://python3wos.appspot.com/" rel="nofollow">Python 3 Wall of Superpowers</a></li>
<li><a href="http://pythonhackers.com/open-source/" rel="nofollow">Python Hackers</a></li>
<li><a href="https://python.zeef.com/alan.richmond" rel="nofollow">Python ZEEF</a></li>
<li><a href="https://github.com/trending?l=python">Trending Python repositories on GitHub today</a></li>
<li><a href="http://pypi-ranking.info/alltime" rel="nofollow">PyPI Ranking</a></li>
</ul>
<h3><a id="user-content-周刊" class="anchor" aria-hidden="true" href="#周刊"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>周刊</h3>
<ul>
<li><a href="http://importpython.com/newsletter/" rel="nofollow">Import Python Newsletter</a></li>
<li><a href="http://pycoders.com/" rel="nofollow">Pycoder's Weekly</a></li>
<li><a href="http://www.pythonweekly.com/" rel="nofollow">Python Weekly</a></li>
</ul>
<h3><a id="user-content-twitter" class="anchor" aria-hidden="true" href="#twitter"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Twitter</h3>
<ul>
<li><a href="https://twitter.com/codetengu" rel="nofollow">@codetengu</a></li>
<li><a href="https://twitter.com/getpy" rel="nofollow">@getpy</a></li>
<li><a href="https://twitter.com/planetpython" rel="nofollow">@planetpython</a></li>
<li><a href="https://twitter.com/pycoders" rel="nofollow">@pycoders</a></li>
<li><a href="https://twitter.com/pypi" rel="nofollow">@pypi</a></li>
<li><a href="https://twitter.com/pythontrending" rel="nofollow">@pythontrending</a></li>
<li><a href="https://twitter.com/PythonWeekly" rel="nofollow">@PythonWeekly</a></li>
</ul>
<h3><a id="user-content-学习指南" class="anchor" aria-hidden="true" href="#学习指南"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>学习指南</h3>
<ul>
<li><a href="http://hao.jobbole.com/scipy-lecture-notes/" rel="nofollow">Scipy-lecture-notes</a>：如何用 Python 来做学术？<a href="https://github.com/scipy-lectures/scipy-lecture-notes">官网</a></li>
<li><a href="http://hao.jobbole.com/scientific-python-lectures/" rel="nofollow">SScientific-python-lectures</a>：Python 科学计算的资料。<a href="https://github.com/jrjohansson/scientific-python-lectures">官网</a></li>
<li><a href="http://hao.jobbole.com/mario-level-1/" rel="nofollow">Mario-Level-1</a>：用 Python 和 Pygame 写的超级马里奥第一关。<a href="https://github.com/justinmeister/Mario-Level-1">官网</a></li>
<li><a href="http://hao.jobbole.com/python-koans/" rel="nofollow">Python Koans</a>：Python 的交互式学习工具。<a href="https://github.com/gregmalcolm/python_koans">官网</a></li>
<li><a href="http://hao.jobbole.com/minecraft-python/" rel="nofollow">Minecraft</a>：用 python 写的 Minecraft 游戏。<a href="https://github.com/fogleman/Minecraft">官网</a></li>
<li><a href="http://hao.jobbole.com/python-pycrumbs/" rel="nofollow">pycrumbs</a>：Python 资源大全。<a href="https://github.com/kirang89/pycrumbs/blob/master/pycrumbs.md">官网</a></li>
<li><a href="http://hao.jobbole.com/python-patterns/" rel="nofollow">python-patterns</a>：使用 python 实现设计模式。<a href="https://github.com/faif/python-patterns">官网</a></li>
<li><a href="http://hao.jobbole.com/python-projects/" rel="nofollow">Projects</a>：Python 项目大集合。<a href="https://github.com/karan/Projects">官网</a></li>
<li><a href="http://hao.jobbole.com/the-hitchhikers-guide-to-python/" rel="nofollow">The Hitchhiker’s Guide to Python</a>：旅行者的 Python 学习指南。<a href="http://docs.python-guide.org/en/latest/" rel="nofollow">官网</a></li>
<li><a href="http://top.jobbole.com/18767/" rel="nofollow">Code Like a Pythonista: Idiomatic Python</a>：如何像 Python 高手(Pythonista)一样编程。<a href="http://python.net/~goodger/projects/pycon/2007/idiomatic/handout.html" rel="nofollow">官网</a></li>
</ul>
<h3 id="user-content-websites"><a id="user-content-知名网站" class="anchor" aria-hidden="true" href="#知名网站"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>知名网站</h3>
<ul>
<li>《<a href="http://python.jobbole.com/81730/" rel="nofollow">值得关注的 10 个 Python 英文博客</a>》</li>
</ul>
</article>
      </div>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[PHP资源列表]]></title>
        <id>https://i.plbear.com/post/all-about-php</id>
        <link href="https://i.plbear.com/post/all-about-php">
        </link>
        <updated>2019-08-06T14:16:28.000Z</updated>
        <content type="html"><![CDATA[<div class="Box-body">
        <article class="markdown-body entry-content p-5" itemprop="text"><h1><a id="user-content-awesome-php" class="anchor" aria-hidden="true" name="awesome-php"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Awesome PHP</h1>
<p>一个PHP资源列表，内容包括：库、框架、模板、安全、代码分析、日志、第三方库、配置工具、Web 工具、书籍、电子书、经典博文等等</p>
<h2><a id="user-content-目录" class="anchor" aria-hidden="true" name="目录"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>目录</h2>
<ul>
<li><a href="#awesome-php">Awesome PHP</a>
<ul>
<li><a href="#composer%E6%BA%90-composer-repositories">Composer源 Composer Repositories</a></li>
<li><a href="#%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86-dependency-management">依赖管理 Dependency Management</a></li>
<li><a href="#%E5%85%B6%E4%BB%96%E7%9A%84%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86-dependency-management-extras">其他的依赖管理 Dependency Management Extras</a></li>
<li><a href="#%E6%A1%86%E6%9E%B6-frameworks">框架 Frameworks</a></li>
<li><a href="#%E5%85%B6%E4%BB%96%E6%A1%86%E6%9E%B6-framework-extras">其他框架 Framework Extras</a></li>
<li><a href="#%E6%A1%86%E6%9E%B6%E7%BB%84%E4%BB%B6-components">框架组件 Components</a></li>
<li><a href="#%E5%BE%AE%E5%9E%8B%E6%A1%86%E6%9E%B6-micro-frameworks">微型框架 Micro Frameworks</a></li>
<li><a href="#%E5%85%B6%E4%BB%96%E5%BE%AE%E5%9E%8B%E6%A1%86%E6%9E%B6-micro-framework-extras">其他微型框架 Micro Framework Extras</a></li>
<li><a href="#%E8%B7%AF%E7%94%B1-routers">路由 Routers</a></li>
<li><a href="#%E6%A8%A1%E6%9D%BF-templating">模板 Templating</a></li>
<li><a href="#%E9%9D%99%E6%80%81%E7%AB%99%E7%82%B9%E7%94%9F%E6%88%90%E5%99%A8-static-site-generators">静态站点生成器 Static Site Generators</a></li>
<li><a href="#%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE-http">超文本传输协议 HTTP</a></li>
<li><a href="#%E7%88%AC%E8%99%AB-scraping">爬虫 Scraping</a></li>
<li><a href="#%E4%B8%AD%E9%97%B4%E4%BB%B6-middlewares">中间件 Middlewares</a></li>
<li><a href="#%E7%BD%91%E5%9D%80-url">网址 URL</a></li>
<li><a href="#%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6-email">电子邮件 Email</a></li>
<li><a href="#%E6%96%87%E4%BB%B6-files">文件 Files</a></li>
<li><a href="#%E6%B5%81-streams">流 Streams</a></li>
<li><a href="#%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5-dependency-injection">依赖注入 Dependency Injection</a></li>
<li><a href="#%E5%9B%BE%E5%83%8F-imagery">图像 Imagery</a></li>
<li><a href="#%E6%B5%8B%E8%AF%95-testing">测试 Testing</a></li>
<li><a href="#%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90-continuous-integration">持续集成 Continuous Integration</a></li>
<li><a href="#%E6%96%87%E6%A1%A3-documentation">文档 Documentation</a></li>
<li><a href="#%E5%AE%89%E5%85%A8-security">安全 Security</a></li>
<li><a href="#%E5%AF%86%E7%A0%81-passwords">密码 Passwords</a></li>
<li><a href="#%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90-code-analysis">代码分析 Code Analysis</a></li>
<li><a href="#%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F-code-quality">代码质量 Code Quality</a></li>
<li><a href="#%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90-static-analysis">静态分析 Static Analysis</a></li>
<li><a href="#architectural-architectural">Architectural Architectural</a></li>
<li><a href="#%E8%B0%83%E8%AF%95%E5%92%8C%E5%88%86%E6%9E%90-debugging-and-profiling">调试和分析 Debugging and Profiling</a></li>
<li><a href="#%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7-build-tools">构建工具 Build Tools</a></li>
<li><a href="#%E4%BB%BB%E5%8A%A1%E8%BF%90%E8%A1%8C%E5%99%A8-task-runners">任务运行器 Task Runners</a></li>
<li><a href="#%E5%AF%BC%E8%88%AA-navigation">导航 Navigation</a></li>
<li><a href="#%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86-asset-management">资源管理 Asset Management</a></li>
<li><a href="#%E5%9C%B0%E7%90%86%E4%BD%8D%E7%BD%AE-geolocation">地理位置 Geolocation</a></li>
<li><a href="#%E6%97%A5%E6%9C%9F%E5%92%8C%E6%97%B6%E9%97%B4-date-and-time">日期和时间 Date and Time</a></li>
<li><a href="#%E4%BA%8B%E4%BB%B6-event">事件 Event</a></li>
<li><a href="#%E6%97%A5%E5%BF%97-logging">日志 Logging</a></li>
<li><a href="#%E7%94%B5%E5%AD%90%E5%95%86%E5%8A%A1-e-commerce">电子商务 E-commerce</a></li>
<li><a href="#pdf-pdf">PDF PDF</a></li>
<li><a href="#office-office">Office Office</a></li>
<li><a href="#%E6%95%B0%E6%8D%AE%E5%BA%93-database">数据库 Database</a></li>
<li><a href="#%E8%BF%81%E7%A7%BB-migrations">迁移 Migrations</a></li>
<li><a href="#nosql-nosql">NoSQL NoSQL</a></li>
<li><a href="#%E9%98%9F%E5%88%97-queue">队列 Queue</a></li>
<li><a href="#%E6%90%9C%E7%B4%A2-search">搜索 Search</a></li>
<li><a href="#%E5%91%BD%E4%BB%A4%E8%A1%8C-command-line">命令行 Command Line</a></li>
<li><a href="#%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81%E5%92%8C%E6%8E%88%E6%9D%83-authentication-and-authorization">身份验证和授权 Authentication and Authorization</a></li>
<li><a href="#%E6%A0%87%E8%AE%B0-markup">标记 Markup</a></li>
<li><a href="#%E5%AD%97%E7%AC%A6%E4%B8%B2-strings">字符串 Strings</a></li>
<li><a href="#%E6%95%B0%E5%AD%97-numbers">数字 Numbers</a></li>
<li><a href="#%E8%BF%87%E6%BB%A4%E5%92%8C%E9%AA%8C%E8%AF%81-filtering-and-validation">过滤和验证 Filtering and Validation</a></li>
<li><a href="#api-api">API API</a></li>
<li><a href="#%E7%BC%93%E5%AD%98-caching">缓存 Caching</a></li>
<li><a href="#%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E5%AD%98%E5%82%A8-data-structure-and-storage">数据结构和存储 Data Structure and Storage</a></li>
<li><a href="#%E9%80%9A%E7%9F%A5-notifications">通知 Notifications</a></li>
<li><a href="#%E9%83%A8%E7%BD%B2-deployment">部署 Deployment</a></li>
<li><a href="#%E5%9B%BD%E9%99%85%E5%8C%96%E5%92%8C%E6%9C%AC%E5%9C%B0%E5%8C%96-internationalisation-and-localisation">国际化和本地化 Internationalisation and Localisation</a></li>
<li><a href="#%E7%AC%AC%E4%B8%89%E6%96%B9api-third-party-apis">第三方API Third Party APIs</a></li>
<li><a href="#%E6%89%A9%E5%B1%95-extensions">扩展 Extensions</a></li>
<li><a href="#%E6%9D%82%E9%A1%B9-miscellaneous">杂项 Miscellaneous</a></li>
</ul>
</li>
<li><a href="#%E8%BD%AF%E4%BB%B6-software">软件 Software</a>
<ul>
<li><a href="#PHP%E5%AE%89%E8%A3%85-php-installation">PHP安装 PHP Installation</a></li>
<li><a href="#%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83-development-environment">开发环境 Development Environment</a></li>
<li><a href="#%E8%99%9A%E6%8B%9F%E6%9C%BA-virtual-machines">虚拟机 Virtual Machines</a></li>
<li><a href="#%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8%E5%92%8Cide-text-editors-and-ides">文本编辑器和IDE Text Editors and IDEs</a></li>
<li><a href="#web%E5%BA%94%E7%94%A8-web-applications">Web应用 Web Applications</a></li>
<li><a href="#%E5%9F%BA%E7%A1%80%E6%9E%B6%E6%9E%84-infrastructure">基础架构 Infrastructure</a></li>
</ul>
</li>
<li><a href="#%E8%B5%84%E6%BA%90-resources">资源 Resources</a>
<ul>
<li><a href="#php%E7%BD%91%E7%AB%99-php-websites">PHP网站 PHP Websites</a></li>
<li><a href="#%E5%85%B6%E4%BB%96%E7%BD%91%E7%AB%99-other-websites">其他网站 Other Websites</a></li>
<li><a href="#php%E4%B9%A6%E7%B1%8D-php-books">PHP书籍 PHP Books</a></li>
<li><a href="#%E5%85%B6%E4%BB%96%E4%B9%A6%E7%B1%8D-other-books">其他书籍 Other Books</a></li>
<li><a href="#php%E8%A7%86%E9%A2%91-php-videos">PHP视频 PHP Videos</a></li>
<li><a href="#php%E6%92%AD%E5%AE%A2-php-podcasts">PHP播客 PHP Podcasts</a></li>
<li><a href="#php%E9%98%85%E8%AF%BB-php-reading">PHP阅读 PHP Reading</a></li>
<li><a href="#php%E5%86%85%E6%A0%B8%E9%98%85%E8%AF%BB-php-internals-reading">PHP内核阅读 PHP Internals Reading</a></li>
<li><a href="#php%E6%9D%82%E5%BF%97-php-magazines">PHP杂志 PHP Magazines</a></li>
</ul>
</li>
</ul>
<h2><a id="user-content-composer源-composer-repositories" class="anchor" aria-hidden="true" name="composer源-composer-repositories"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Composer源 Composer Repositories</h2>
<p><em>Composer源</em></p>
<ul>
<li><a href="http://packages.firegento.com/" rel="nofollow">Firegento</a> - Magento模块Composer源</li>
<li><a href="https://packagist.org/" rel="nofollow">Packagist</a> - PHP包的源</li>
<li><a href="https://packagist.com/" rel="nofollow">Private Packagist</a> - 一个PHP的服务，提供Composer包的存储</li>
<li><a href="https://wpackagist.org/" rel="nofollow">WordPress Packagist</a> - 使用Composer管理你的WordPress插件</li>
<li><a href="https://packages.zendframework.com/" rel="nofollow">Zend Framework Packages</a> - Zend Framework Composer源</li>
</ul>
<h2><a id="user-content-依赖管理-dependency-management" class="anchor" aria-hidden="true" name="依赖管理-dependency-management"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>依赖管理 Dependency Management</h2>
<p><em>依赖和包管理库</em></p>
<ul>
<li><a href="https://github.com/composer/installers">Composer Installers</a> - 一个多框架Composer库安装器</li>
<li><a href="https://getcomposer.org/" rel="nofollow">Composer</a> - 一个包和依赖管理器</li>
<li><a href="http://melody.sensiolabs.org/" rel="nofollow">Melody</a> - 一个用于构建Composer脚本文件的工具</li>
<li><a href="https://github.com/FriendsOfPHP/pickle">Pickle</a> - 一个PHP扩展安装器</li>
</ul>
<h2><a id="user-content-其他的依赖管理-dependency-management-extras" class="anchor" aria-hidden="true" name="其他的依赖管理-dependency-management-extras"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>其他的依赖管理 Dependency Management Extras</h2>
<p><em>其他的相关依赖管理</em></p>
<ul>
<li><a href="https://github.com/joshdifabio/composed">Composed</a> - 一个在运行时解析你项目Composer环境的库</li>
<li><a href="https://github.com/wikimedia/composer-merge-plugin">Composer Merge Plugin</a> - 一个用于合并多个composer.json文件的Composer插件</li>
<li><a href="https://github.com/hirak/prestissimo">Prestissimo</a> - 一个开启并行安装进程的Composer插件</li>
<li><a href="https://github.com/composer/satis">Satis</a> - 一个静态Composer存储库的生成器</li>
<li><a href="https://github.com/tommy-muehle/tooly-composer-script">tooly</a> - 一个在项目中使用Composer管理PHAR文件的库</li>
<li><a href="https://toranproxy.com" rel="nofollow">Toran Proxy</a> - 一个静态Composer存储库和代理</li>
</ul>
<h2><a id="user-content-框架-frameworks" class="anchor" aria-hidden="true" name="框架-frameworks"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>框架 Frameworks</h2>
<p><em>Web开发框架</em></p>
<ul>
<li><a href="http://auraphp.com/framework/" rel="nofollow">Aura Framework</a> - 一个独立的组件框架</li>
<li><a href="https://cakephp.org/" rel="nofollow">CakePHP</a> - 一个快速应用程序开发框架 (CP)</li>
<li><a href="https://laravel.com/" rel="nofollow">Laravel 5</a> - 另一个PHP框架 (L5)</li>
<li><a href="https://nette.org" rel="nofollow">Nette</a> - 另一个由个体组件组成的框架</li>
<li><a href="https://phalconphp.com/en/" rel="nofollow">Phalcon</a> - 通过C扩展实现的框架</li>
<li><a href="https://github.com/ppi">PPI Framework 2</a> - 一个互操作性框架</li>
<li><a href="https://symfony.com/" rel="nofollow">Symfony</a> - 一个独立组件组成的框架 (SF)</li>
<li><a href="https://github.com/yiisoft/yii2/">Yii2</a> - 另一个PHP框架</li>
<li><a href="https://framework.zend.com" rel="nofollow">Zend Framework 2</a> - 另一个由独立组件组成的框架 (ZF2)</li>
<li><a href="https://www.iceframework.org/" rel="nofollow">Ice</a> - 另一个通过C扩展实现的简单快速的PHP框架</li>
</ul>
<h2><a id="user-content-其他框架-framework-extras" class="anchor" aria-hidden="true" name="其他框架-framework-extras"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>其他框架 Framework Extras</h2>
<p><em>其他Web开发框架</em></p>
<ul>
<li><a href="https://github.com/friendsofcake/crud">CakePHP CRUD</a> - CakePHP的快速应用程序（RAD）插件</li>
<li><a href="http://rad.knplabs.com/" rel="nofollow">Knp RAD Components</a> - Symfony 2的快速应用程序（RAD）包</li>
<li><a href="https://github.com/symfony-cmf/symfony-cmf">Symfony CMF</a> - 一个创建自定义CMS的内容管理框架</li>
</ul>
<h2><a id="user-content-框架组件-components" class="anchor" aria-hidden="true" name="框架组件-components"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>框架组件 Components</h2>
<p><em>来自web开发框架的独立组件</em></p>
<ul>
<li><a href="http://auraphp.com/" rel="nofollow">Aura</a> - 独立组件，完全解耦，不依赖于任何其他框架</li>
<li><a href="https://plugins.cakephp.org/" rel="nofollow">CakePHP Plugins</a> - CakePHP插件的目录</li>
<li><a href="https://hoa-project.net/En/" rel="nofollow">Hoa Project</a> - 另一个PHP组件包</li>
<li><a href="https://thephpleague.com/" rel="nofollow">League of Extraordinary Packages</a> - 一个PHP软件开发组</li>
<li><a href="http://symfony.com/doc/master/components/index.html" rel="nofollow">Symfony Components</a> - Symfony组件</li>
<li><a href="https://docs.zendframework.com/" rel="nofollow">Zend Framework 2 Components</a> - Zend Framework 2组件</li>
</ul>
<h2><a id="user-content-微型框架-micro-frameworks" class="anchor" aria-hidden="true" name="微型框架-micro-frameworks"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>微型框架 Micro Frameworks</h2>
<p><em>微型框架和路由</em></p>
<ul>
<li><a href="http://bulletphp.com/" rel="nofollow">Bullet PHP</a> - 用于构建REST APIs的微型框架</li>
<li><a href="https://lumen.laravel.com" rel="nofollow">Lumen</a> - 一个Laravel的微型框架</li>
<li><a href="https://github.com/radarphp/Radar.Adr">Radar</a> - 一个PHP的Action-Domain-Responder的实现</li>
<li><a href="https://www.slimframework.com/" rel="nofollow">Slim</a> - 另一个简单的微型框架</li>
</ul>
<h2><a id="user-content-其他微型框架-micro-framework-extras" class="anchor" aria-hidden="true" name="其他微型框架-micro-framework-extras"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>其他微型框架 Micro Framework Extras</h2>
<p><em>其他相关的微型框架和路由</em></p>
<ul>
<li><a href="https://github.com/silexphp/Silex-Skeleton">Silex Skeleton</a> - Silex的项目架构</li>
<li><a href="https://github.com/silexphp/Silex-WebProfiler">Silex Web Profiler</a> - 一个Silex web的调试工具</li>
<li><a href="https://github.com/slimphp/Slim-Skeleton">Slim Skeleton</a> - Slim架构</li>
<li><a href="https://github.com/slimphp/Slim-Views">Slim Twig View</a> - Twig集成在中</li>
<li><a href="https://github.com/slimphp/PHP-View">Slim PHP View</a> - 一个Slim中的简单PHP渲染</li>
</ul>
<h2><a id="user-content-路由-routers" class="anchor" aria-hidden="true" name="路由-routers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>路由 Routers</h2>
<p><em>处理应用路由的库</em></p>
<ul>
<li><a href="https://github.com/auraphp/Aura.Router">Aura.Router</a> - 一个全功能的路由库</li>
<li><a href="https://github.com/nikic/FastRoute">Fast Route</a> - 一个快速路由的库</li>
<li><a href="https://github.com/klein/klein.php">Klein</a> - 一个灵活的路由的库</li>
<li><a href="https://github.com/c9s/Pux">Pux</a> - 另一个快速路由的库</li>
<li><a href="https://github.com/thephpleague/route">Route</a> - 一个基于Fast Route的路由的库</li>
</ul>
<h2><a id="user-content-模板-templating" class="anchor" aria-hidden="true" name="模板-templating"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>模板 Templating</h2>
<p><em>模板化和词法分析的库和工具</em></p>
<ul>
<li><a href="https://github.com/auraphp/Aura.View">Aura.View</a> - 提供TemplateView和TwoStepView，支持partials, sections和helpers</li>
<li><a href="https://github.com/FoilPHP/Foil">Foil</a> - 另一个原生PHP模板库</li>
<li><a href="https://github.com/arnaud-lb/MtHaml">MtHaml</a> - 一个HAML模板语言的PHP实现</li>
<li><a href="https://github.com/bobthecow/mustache.php">Mustache</a> - 一个Mustache模板语言的PHP实现</li>
<li><a href="http://phptal.org/" rel="nofollow">PHPTAL</a> - 一个<a href="https://en.wikipedia.org/wiki/Template_Attribute_Language" rel="nofollow">TAL</a>模板语言的PHP实现</li>
<li><a href="http://platesphp.com/" rel="nofollow">Plates</a> - 一个原生PHP模板库</li>
<li><a href="https://www.smarty.net/" rel="nofollow">Smarty</a> - 一个模板引擎</li>
<li><a href="https://twig.symfony.com/" rel="nofollow">Twig</a> - 一个全面的模板语言</li>
<li><a href="https://github.com/Talesoft/tale-jade">Tale Jade</a> - Jade模版语言的PHP实现</li>
</ul>
<h2><a id="user-content-静态站点生成器-static-site-generators" class="anchor" aria-hidden="true" name="静态站点生成器-static-site-generators"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>静态站点生成器 Static Site Generators</h2>
<p><em>用来生成web页面的预处理内容的工具</em></p>
<ul>
<li><a href="http://couscous.io" rel="nofollow">Couscous</a> - 一个将Markdown转化为漂亮的网站的工具</li>
<li><a href="https://sculpin.io" rel="nofollow">Sculpin</a> - 转换Markdown和Twig为静态HTML的工具</li>
<li><a href="http://spress.yosymfony.com" rel="nofollow">Spress</a> - 一个能够将Markdown和Twig转化为HTML的可扩展工具</li>
</ul>
<h2><a id="user-content-超文本传输协议-http" class="anchor" aria-hidden="true" name="超文本传输协议-http"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>超文本传输协议 HTTP</h2>
<p><em>用于HTTP的库</em></p>
<ul>
<li><a href="https://github.com/kriswallsmith/Buzz">Buzz</a> - 另一个HTTP客户端</li>
<li><a href="https://github.com/guzzle/guzzle">Guzzle</a> - 一个全面的HTTP客户端</li>
<li><a href="https://github.com/nategood/httpful">HTTPFul</a> - 一个链式HTTP库</li>
<li><a href="http://httplug.io" rel="nofollow">HTTPlug</a> - 一个没有绑定特定实现的HTTP客户端的抽象</li>
<li><a href="http://php-vcr.github.io/" rel="nofollow">PHP VCR</a> - 一个录制和重放HTTP请求的库</li>
<li><a href="https://github.com/rmccue/Requests">Requests</a> - 一个简单的HTTP库</li>
<li><a href="https://github.com/tebru/retrofit-php">Retrofit</a> - 一个能轻松创建REST API客户端的库</li>
<li><a href="https://github.com/zendframework/zend-diactoros">zend-diactoros</a> - PSR-7 HTTP消息实现</li>
</ul>
<h2><a id="user-content-爬虫-scraping" class="anchor" aria-hidden="true" name="爬虫-scraping"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>爬虫 Scraping</h2>
<p><em>用于网站爬取的库</em></p>
<ul>
<li><a href="https://github.com/oscarotero/Embed">Embed</a> - &nbsp;一个从web服务或网页中提取的信息的工具</li>
<li><a href="https://github.com/FriendsOfPHP/Goutte">Goutte</a> - 一个简单的web爬取器</li>
<li><a href="https://github.com/mvdbos/php-spider">PHP Spider</a> - 一个可配置和可扩展的PHP web爬虫</li>
</ul>
<h2><a id="user-content-中间件-middlewares" class="anchor" aria-hidden="true" name="中间件-middlewares"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>中间件 Middlewares</h2>
<p><em>使用中间件构建应用程序的库</em></p>
<ul>
<li><a href="https://zendframework.github.io/zend-expressive/" rel="nofollow">Expressive</a> - 基于PSR-7的Zend中间件</li>
<li><a href="https://github.com/oscarotero/psr7-middlewares">PSR7-Middlewares</a> - 灵感来源于方便的中间件</li>
<li><a href="https://github.com/relayphp/Relay.Relay">Relay</a> - 一个PHP 5.5 PSR-7的中间件调度器</li>
<li><a href="https://github.com/stackphp">Stack</a> - 一个用于Silex/Symfony的可堆叠的中间件的库</li>
<li><a href="https://github.com/zendframework/zend-stratigility">zend-stratigility</a> - 基于PHP PSR-7之上的中间件之上</li>
</ul>
<h2><a id="user-content-网址-url" class="anchor" aria-hidden="true" name="网址-url"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>网址 URL</h2>
<p><em>解析URL的库</em></p>
<ul>
<li><a href="https://github.com/jeremykendall/php-domain-parser">PHP Domain Parser</a> - 一个本地前缀解析库</li>
<li><a href="https://github.com/jwage/purl">Purl</a> - 一个URL处理库</li>
<li><a href="https://github.com/sabre-io/uri">sabre/uri</a> - 一个URI操作库</li>
<li><a href="https://github.com/thephpleague/uri">Uri</a> - 另一个URL处理库</li>
</ul>
<h2><a id="user-content-电子邮件-email" class="anchor" aria-hidden="true" name="电子邮件-email"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>电子邮件 Email</h2>
<p><em>发送和解析邮件的库</em></p>
<ul>
<li><a href="https://github.com/tijsverkoyen/CssToInlineStyles">CssToInlineStyles</a> - 一个在邮件模板中的内联CSS库</li>
<li><a href="https://github.com/willdurand/EmailReplyParser">Email Reply Parser</a> - 一个邮件回复解析的库</li>
<li><a href="https://github.com/nojacko/email-validator">Email Validator</a> - 一个较小的电子邮件验证库</li>
<li><a href="https://github.com/tedious/Fetch">Fetch</a> - 一个IMAP库</li>
<li><a href="https://github.com/mautic/mautic">Mautic</a> - 邮件营销自动化</li>
<li><a href="https://github.com/PHPMailer/PHPMailer">PHPMailer</a> - 另一个邮件解决方案</li>
<li><a href="https://github.com/Stampie/Stampie">Stampie</a> - 一个邮件服务库，类似于<a href="http://sendgrid.com" rel="nofollow">SendGrid</a>,<a href="https://postmarkapp.com" rel="nofollow">PostMark</a>,<a href="http://www.mailgun.com" rel="nofollow">MailGun</a>和<a href="http://www.mandrill.com" rel="nofollow">Mandrill</a>.</li>
<li><a href="https://swiftmailer.symfony.com" rel="nofollow">SwiftMailer</a> - 一个邮件解决方案</li>
</ul>
<h2><a id="user-content-文件-files" class="anchor" aria-hidden="true" name="文件-files"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>文件 Files</h2>
<p><em>文件处理和MIME类型检测的库</em></p>
<ul>
<li><a href="https://github.com/thephpleague/csv">CSV</a> - 一个CSV数据处理库</li>
<li><a href="https://github.com/thephpleague/Flysystem">Flysystem</a> - 另一个文件系统抽象层</li>
<li><a href="https://github.com/KnpLabs/Gaufrette">Gaufrette</a> - 一个文件系统抽象层</li>
<li><a href="https://github.com/hoaproject/Mime">Hoa Mime</a> - 另一个MIME检测库</li>
<li><a href="https://github.com/PHP-FFmpeg/PHP-FFmpeg/">PHP FFmpeg</a> - 一个用于<a href="http://www.ffmpeg.org/" rel="nofollow">FFmpeg</a>视频包装的库</li>
<li><a href="https://github.com/wapmorgan/UnifiedArchive">UnifiedArchive</a> - 一个统一标准的压缩和解压的库</li>
</ul>
<h2><a id="user-content-流-streams" class="anchor" aria-hidden="true" name="流-streams"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>流 Streams</h2>
<p><em>处理流的库</em></p>
<ul>
<li><a href="https://github.com/fzaninotto/Streamer">Streamer</a> - 一个简单的面向对象的流包装库</li>
</ul>
<h2><a id="user-content-依赖注入-dependency-injection" class="anchor" aria-hidden="true" name="依赖注入-dependency-injection"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>依赖注入 Dependency Injection</h2>
<p><em>实现依赖注入设计模式的库</em></p>
<ul>
<li><a href="https://github.com/auraphp/Aura.Di">Aura.Di</a> - 一个依赖注入容器</li>
<li><a href="https://github.com/AcclimateContainer/acclimate-container">Acclimate</a> - 一个依赖注入容器和服务定位的通用接口</li>
<li><a href="https://github.com/rdlowrey/Auryn">Auryn</a> - 一个递归的依赖注入容器</li>
<li><a href="https://github.com/thephpleague/container">Container</a> - 另一个可伸缩的依赖注入容器</li>
<li><a href="https://github.com/bitExpert/disco">Disco</a> - 一个兼容PSR-11基于annotation的依赖注入容器</li>
<li><a href="http://php-di.org/" rel="nofollow">PHP-DI</a> - 一个支持自动装配和PHP配置的依赖注入容器</li>
<li><a href="https://pimple.symfony.com/" rel="nofollow">Pimple</a> - 一个小的依赖注入容器</li>
<li><a href="https://github.com/symfony/dependency-injection">Symfony DI</a> - 一个依赖注入容器组件 (SF2)</li>
</ul>
<h2><a id="user-content-图像-imagery" class="anchor" aria-hidden="true" name="图像-imagery"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>图像 Imagery</h2>
<p><em>处理图像的库</em></p>
<ul>
<li><a href="https://github.com/thephpleague/color-extractor">Color Extractor</a> - 一个从图像中提取颜色的库</li>
<li><a href="https://github.com/thephpleague/glide">Glide</a> - 一个按需处理图像的库</li>
<li><a href="https://github.com/jenssegers/imagehash">Image Hash</a> - 一个用于生成图像哈希感知的库</li>
<li><a href="https://github.com/psliwa/image-optimizer">Image Optimizer</a> - 一个优化图像的库</li>
<li><a href="http://imagine.readthedocs.io/en/latest/index.html" rel="nofollow">Imagine</a> - 一个图像处理库</li>
<li><a href="https://github.com/Intervention/image">Intervention Image</a> - 另一个图像处理库</li>
<li><a href="https://github.com/Sybio/ImageWorkshop">PHP Image Workshop</a> - 另一个图像处理库</li>
</ul>
<h2><a id="user-content-测试-testing" class="anchor" aria-hidden="true" name="测试-testing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>测试 Testing</h2>
<p><em>测试代码和生成测试数据的库</em></p>
<ul>
<li><a href="https://github.com/nelmio/alice">Alice</a> - 富有表现力的一代库</li>
<li><a href="https://github.com/Codeception/AspectMock">AspectMock</a> - 一个PHPUnit/Codeception的模拟框架。</li>
<li><a href="https://github.com/atoum/atoum">Atoum</a> - 一个简单的测试库</li>
<li><a href="http://docs.behat.org/en/v2.5/" rel="nofollow">Behat</a> - 一个行为驱动开发（BDD）测试框架</li>
<li><a href="https://github.com/Codeception/Codeception">Codeception</a> - 一个全栈测试框架</li>
<li><a href="https://github.com/sebastianbergmann/dbunit">DBUnit</a> - 一个PHPUnit的数据库测试库</li>
<li><a href="https://github.com/fzaninotto/Faker">Faker</a> - 一个伪数据生成库</li>
<li><a href="https://github.com/InterNations/http-mock">HTTP Mock</a> - 一个在单元测试模拟HTTP请求的库</li>
<li><a href="https://github.com/kahlan/kahlan">Kahlan</a> - 全栈Unit/BDD测试框架，内置stub，mock和代码覆盖率的支持</li>
<li><a href="http://mink.behat.org/en/latest/" rel="nofollow">Mink</a> - Web验收测试</li>
<li><a href="https://github.com/mockery/mockery">Mockery</a> - 一个用于测试的模拟对象的库</li>
<li><a href="https://github.com/paratestphp/paratest">ParaTest</a> - 一个PHPUnit的并行测试库</li>
<li><a href="https://github.com/peridot-php/peridot">Peridot</a> - 一个事件驱动开发的测试框架</li>
<li><a href="https://github.com/mlively/Phake">Phake</a> - 另一个用于测试的模拟对象的库</li>
<li><a href="https://github.com/danielstjules/pho">Pho</a> - 另一个行为驱动开发测试框架</li>
<li><a href="https://github.com/php-mock/php-mock">PHP-Mock</a> - 一个基于PHP函数的模拟库</li>
<li><a href="https://github.com/phpspec/phpspec">PHPSpec</a> - 一个基于功能点设计的单元测试库</li>
<li><a href="https://qa.php.net/write-test.php" rel="nofollow">PHPT</a> - 一个使用PHP本身的测试工具</li>
<li><a href="https://github.com/sebastianbergmann/phpunit">PHPUnit</a> - 一个单元测试框架</li>
<li><a href="https://github.com/phpspec/prophecy">Prophecy</a> - 一个可选度很高的模拟框架</li>
<li><a href="https://github.com/mikey179/vfsStream">VFS Stream</a> - 一个用于测试的虚拟文件系统流的包装器</li>
</ul>
<h2><a id="user-content-持续集成-continuous-integration" class="anchor" aria-hidden="true" name="持续集成-continuous-integration"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>持续集成 Continuous Integration</h2>
<p><em>持续集成的库和应用</em></p>
<ul>
<li><a href="https://circleci.com" rel="nofollow">CircleCI</a> - 一个持续集成平台</li>
<li><a href="https://about.gitlab.com/gitlab-ci/" rel="nofollow">GitlabCi</a> - 使用GitLab CI测试、构建、部署你的代码，像TravisCI</li>
<li><a href="https://jenkins.io/index.html" rel="nofollow">Jenkins</a> - 一个<a href="http://jenkins-php.org/index.html" rel="nofollow">PHP支持</a>的持续集成平台</li>
<li><a href="https://github.com/jolicode/JoliCi">JoliCi</a> - 一个用PHP编写的由Docker支持的持续集成的客户端</li>
<li><a href="https://www.phptesting.org/" rel="nofollow">PHPCI</a> - 一个PHP的开源的持续集成平台</li>
<li><a href="https://semaphoreci.com/" rel="nofollow">SemaphoreCI</a> - 一个开放源码和私人项目的持续集成平台</li>
<li><a href="https://www.shippable.com/" rel="nofollow">Shippable</a> - 一个基于开源和私人项目持续集成平台的docker</li>
<li><a href="https://travis-ci.org/" rel="nofollow">Travis CI</a> - 一个持续集成平台</li>
<li><a href="http://www.wercker.com/" rel="nofollow">Wercker</a> - 一个持续集成平台</li>
</ul>
<h2><a id="user-content-文档-documentation" class="anchor" aria-hidden="true" name="文档-documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>文档 Documentation</h2>
<p><em>生成项目文档的库</em></p>
<ul>
<li><a href="https://github.com/apigen/apigen">APIGen</a> - 另一个API文档生成器</li>
<li><a href="https://github.com/justinwalsh/daux.io">daux.io</a> - 一个使用Markdown文件的文档生成器</li>
<li><a href="https://github.com/phpDocumentor/phpDocumentor2">PHP Documentor 2</a> - 一个API文档生成器</li>
<li><a href="http://phpdox.de/" rel="nofollow">phpDox</a> - 一个PHP项目的文档生成器（不限于API文档）</li>
<li><a href="https://github.com/FriendsOfPHP/Sami">Sami</a> - 一个API文档生成器</li>
</ul>
<h2><a id="user-content-安全-security" class="anchor" aria-hidden="true" name="安全-security"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>安全 Security</h2>
<p><em>生成安全的随机数，加密数据，扫描漏洞的库</em></p>
<ul>
<li><a href="https://paragonie.com/project/halite" rel="nofollow">Halite</a> - 一个简单的使用<a href="https://github.com/jedisct1/libsodium">libsodium</a>的加密库</li>
<li><a href="https://github.com/ezyang/htmlpurifier">HTML Purifier</a> - 一个兼容标准的HTML过滤器</li>
<li><a href="https://github.com/psecio/iniscan">IniScan</a> - 一个扫描PHP INI文件安全的库</li>
<li><a href="https://github.com/jenssegers/optimus">Optimus</a> - 基于Knuth乘法散列方法的身份混淆工具</li>
<li><a href="https://github.com/defuse/php-encryption">PHP Encryption</a> - 一个安全的PHP加密库</li>
<li><a href="https://github.com/Herzult/php-ssh">PHP SSH</a> - 一个试验的面向对象的SSH包装库</li>
<li><a href="http://phpseclib.sourceforge.net/" rel="nofollow">PHPSecLib</a> - 一个纯PHP安全通信库</li>
<li><a href="https://github.com/paragonie/random_compat">random_compat</a> - PHP 5.x 支持<code>random_bytes()</code>和<code>random_int()</code></li>
<li><a href="https://github.com/ircmaxell/RandomLib">RandomLib</a> - 一个生成随机数和字符串的库</li>
<li><a href="https://security.sensiolabs.org/" rel="nofollow">SensioLabs Security Check</a> - 一个为检查Composer依赖提供安全建议的web工具</li>
<li><a href="https://github.com/timoh6/TCrypto">TCrypto</a> - 一个简单的键值加密存储库</li>
<li><a href="https://vaddy.net/" rel="nofollow">VAddy</a> - 一个持续安全的web应用测试平台</li>
<li><a href="https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project" rel="nofollow">Zed</a> - 一个集成的web应用渗透测试工具</li>
</ul>
<h2><a id="user-content-密码-passwords" class="anchor" aria-hidden="true" name="密码-passwords"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>密码 Passwords</h2>
<p><em>处理和存储密码的库和工具</em></p>
<ul>
<li><a href="https://github.com/timoh6/GenPhrase">GenPhrase</a> - 一个随机生成安全密码哈希的库</li>
<li><a href="https://github.com/ircmaxell/password_compat">Password Compat</a> - 一个新的PHP5.5密码函数的兼容库</li>
<li><a href="https://github.com/ircmaxell/password-policy">Password Policy</a> -  一个PHP和JavaScript的密码策略库</li>
<li><a href="https://github.com/jeremykendall/password-validator">Password Validator</a> - 一个校验和升级密码哈希的库</li>
<li><a href="https://github.com/hackzilla/password-generator">Password-Generator</a> - 一个生成随机密码的PHP库</li>
<li><a href="https://github.com/ircmaxell/PHP-PasswordLib">PHP Password Lib</a> - 一个生成和校验密码的库</li>
<li><a href="http://www.openwall.com/phpass/" rel="nofollow">phpass</a> - 一个便携式的密码哈希框架</li>
<li><a href="https://github.com/bjeavons/zxcvbn-php">Zxcvbn PHP</a> - 一个基于Zxcvbn JS的现实的PHP密码强度估计库</li>
</ul>
<h2><a id="user-content-代码分析-code-analysis" class="anchor" aria-hidden="true" name="代码分析-code-analysis"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>代码分析 Code Analysis</h2>
<p><em>分析，解析和处理代码库的库和工具</em></p>
<ul>
<li><a href="https://github.com/Roave/BetterReflection">Better Reflection</a> - 基于AST的反射库，允许分析操作代码</li>
<li><a href="https://codeclimate.com" rel="nofollow">Code Climate</a> - 一个自动代码审查工具</li>
<li><a href="https://github.com/nikic/PHP-Parser">PHP Parser</a> - 一个PHP编写的PHP解析器</li>
<li><a href="https://github.com/tomzx/php-semver-checker">PHP Semantic Versioning Checker</a> - 一个比较两个源集和确定适当的应用语义版本的命令行实用程序</li>
<li><a href="https://github.com/sebastianbergmann/phploc">PHPLOC</a> - 一个快速测量PHP项目大小的工具</li>
<li><a href="https://github.com/EdgedesignCZ/phpqa">PHPQA</a> - 一个用于运行质量保证工具的工具(phploc, phpcpd, phpcs, pdepend, phpmd, phpmetrics).</li>
<li><a href="https://github.com/Qafoo/QualityAnalyzer">Qafoo Quality Analyzer</a> - 一个可视化指标和源代码的工具</li>
<li><a href="https://scrutinizer-ci.com/" rel="nofollow">Scrutinizer</a> - 一个审查PHP代码的web工具</li>
<li><a href="https://github.com/devster/ubench">UBench</a> - 一个简单的微型基准检测库</li>
</ul>
<h2><a id="user-content-代码质量-code-quality" class="anchor" aria-hidden="true" name="代码质量-code-quality"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>代码质量 Code Quality</h2>
<p><em>管理代码质量、格式化和lint的库</em></p>
<ul>
<li><a href="https://github.com/squizlabs/PHP_CodeSniffer">PHP CodeSniffer</a> - 一个检测PHP、CSS和JS代码标准冲突的库</li>
<li><a href="https://github.com/FriendsOfPHP/PHP-CS-Fixer">PHP CS Fixer</a> - 一个编码标准库</li>
<li><a href="https://phpmd.org/" rel="nofollow">PHP Mess Detector</a> - 一个扫描代码缺陷，次优代码，未使用的参数等等的库</li>
<li><a href="https://github.com/PHPCheckstyle/phpcheckstyle">PHPCheckstyle</a> - 一个帮助遵守特定的编码惯例的工具</li>
<li><a href="https://github.com/sebastianbergmann/phpcpd">PHPCPD</a> - 一个检测复制和粘贴代码的库</li>
</ul>
<h2><a id="user-content-静态分析-static-analysis" class="anchor" aria-hidden="true" name="静态分析-static-analysis"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>静态分析 Static Analysis</h2>
<p><em>PHP代码静态分析的库</em></p>
<ul>
<li><a href="https://github.com/exakat/exakat">Exakat</a> - 一个PHP的静态分析引擎</li>
<li><a href="https://github.com/Trismegiste/Mondrian">Mondrian</a> - 使用图论的代码分析工具</li>
<li><a href="https://github.com/phan/phan">phan</a> - 一个基于PHP 7+和php-ast扩展的静态分析器</li>
<li><a href="https://github.com/wimg/PHPCompatibility">PHPCompatibility</a> - 一个PHP CodeSniffer的兼容性检查器</li>
<li><a href="https://github.com/mamuz/PhpDependencyAnalysis">PhpDependencyAnalysis</a> - 一个创建可定制依赖图的工具</li>
<li><a href="https://github.com/phpmetrics/PhpMetrics">PHP Metrics</a> - 一个静态测量库</li>
<li><a href="https://github.com/monque/PHP-Migration">PHP Migration</a> - 一个PHP版本升级的静态分析库</li>
<li><a href="https://github.com/phpstan/phpstan">PHPStan</a> - 一个PHP静态分析工具</li>
<li><a href="https://github.com/vimeo/psalm">Pslam</a> - 一个用于在PHP应用程序中查找错误的静态分析工具</li>
</ul>
<h2><a id="user-content-architectural-architectural" class="anchor" aria-hidden="true" name="architectural-architectural"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Architectural Architectural</h2>
<p><em>相关的设计模式库，组织代码编程的方法和途径</em></p>
<ul>
<li><a href="https://github.com/domnikl/DesignPatternsPHP">Design Patterns PHP</a> - 一个使用PHP实现的设计模式存储库</li>
<li><a href="http://yohan.giarel.li/Finite/" rel="nofollow">Finite</a> - 一个简单的PHP有限状态机</li>
<li><a href="https://github.com/lstrojny/functional-php">Functional PHP</a> - 一个函数式编程库</li>
<li><a href="https://github.com/nikic/iter">Iter</a> - 一个使用生成器提供迭代原语的库</li>
<li><a href="http://patchwork2.org/" rel="nofollow">Patchwork</a> - 一个重新定义用户的函数库</li>
<li><a href="https://github.com/thephpleague/pipeline">Pipeline</a> - 一个管道模式的实现</li>
<li><a href="https://github.com/K-Phoen/rulerz">RulerZ</a> - 一个强大的规则引擎和规范模式的实现</li>
</ul>
<h2><a id="user-content-调试和分析-debugging-and-profiling" class="anchor" aria-hidden="true" name="调试和分析-debugging-and-profiling"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>调试和分析 Debugging and Profiling</h2>
<p><em>调试和分析代码的库和工具</em></p>
<ul>
<li><a href="http://pecl.php.net/package/APM" rel="nofollow">APM</a> - 一个收集SQLite/MySQL/StatsD错误信息和统计信息的监控扩展</li>
<li><a href="https://github.com/barbushin/php-console">Barbushin PHP Console</a> - 另一个使用Google Chrome的web调试控制台</li>
<li><a href="https://blackfire.io" rel="nofollow">Blackfire.io</a> - 一个低开销的代码分析器</li>
<li><a href="https://github.com/kint-php/kint">Kint</a> - 一个调试和分析工具</li>
<li><a href="https://github.com/Seldaek/php-console">PHP Console</a> - 一个web调试控制台</li>
<li><a href="http://phpdebugbar.com/" rel="nofollow">PHP Debug Bar</a> - 一个调试工具栏</li>
<li><a href="https://github.com/phpbench/phpbench">PHPBench</a> - 一个基准测试框架</li>
<li><a href="https://tideways.io/" rel="nofollow">Tideways.io</a> - Monitoring and profiling tool</li>
<li><a href="https://github.com/nette/tracy">Tracy</a> - A一个简单的错误检测，写日志和时间测量库</li>
<li><a href="https://github.com/xdebug/xdebug">xDebug</a> - 一个调试和分析PHP的工具</li>
<li><a href="https://github.com/phacility/xhprof">XHProf</a> - 一个最初由Facebook开发的分析工具</li>
<li><a href="http://www.zend.com/en/products/server/z-ray" rel="nofollow">Z-Ray</a> - 一个调试和配置Zend服务器的工具</li>
</ul>
<h2><a id="user-content-构建工具-build-tools" class="anchor" aria-hidden="true" name="构建工具-build-tools"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>构建工具 Build Tools</h2>
<p><em>项目构建和自动化工具</em></p>
<ul>
<li><a href="https://github.com/box-project/box2">Box</a> - 一个构建PHAR文件的工具</li>
<li><a href="https://github.com/jonathantorres/construct">Construct</a> - 一个PHP项目的生成器</li>
<li><a href="https://www.phing.info/" rel="nofollow">Phing</a> - 一个灵感来自于Apache Ant的PHP项目构建系统</li>
</ul>
<h2><a id="user-content-任务运行器-task-runners" class="anchor" aria-hidden="true" name="任务运行器-task-runners"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>任务运行器 Task Runners</h2>
<p><em>自动运行任务的库</em></p>
<ul>
<li><a href="http://bldr.io/" rel="nofollow">Bldr</a> - 一个构建在Symfony组件上的PHP任务运行器</li>
<li><a href="https://github.com/jobbyphp/jobby">Jobby</a> - 一个没有修改crontab的PHP定时任务管理器</li>
<li><a href="https://github.com/consolidation/Robo">Robo</a> - 一个面向对象配置的PHP任务运行器</li>
<li><a href="http://taskphp.github.io/" rel="nofollow">Task</a> - 一个灵感来源于Grunt和Gulp的纯PHP任务运行器</li>
</ul>
<h2><a id="user-content-导航-navigation" class="anchor" aria-hidden="true" name="导航-navigation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>导航 Navigation</h2>
<p><em>构建导航结构的工具</em></p>
<ul>
<li><a href="https://github.com/KnpLabs/KnpMenu">KnpMenu</a> - 一个菜单库</li>
</ul>
<h2><a id="user-content-资源管理-asset-management" class="anchor" aria-hidden="true" name="资源管理-asset-management"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>资源管理 Asset Management</h2>
<p><em>管理，压缩和最小化web站点资源的工具</em></p>
<ul>
<li><a href="https://github.com/tedious/JShrink">JShrink</a> - 一个JavaScript的最小化库</li>
<li><a href="https://github.com/meenie/munee">Munee</a> - 一个资源优化库</li>
<li><a href="https://github.com/puli/repository">Puli</a> - 一个检测资源绝对路径的库</li>
<li><a href="https://github.com/Bee-Lab/bowerphp">BowerPHP</a> - Bower的一个PHP实现，一个web包管理工具</li>
</ul>
<h2><a id="user-content-地理位置-geolocation" class="anchor" aria-hidden="true" name="地理位置-geolocation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>地理位置 Geolocation</h2>
<p><em>地理编码地址和使用纬度经度的库</em></p>
<ul>
<li><a href="http://geocoder-php.org/" rel="nofollow">GeoCoder</a> - 一个地理编码库</li>
<li><a href="https://github.com/jmikola/geojson">GeoJSON</a> - 一个GeoJSON的实现</li>
<li><a href="https://github.com/thephpleague/geotools">GeoTools</a> - 一个地理工具相关的库</li>
<li><a href="https://github.com/mjaschen/phpgeo">PHPGeo</a> - 一个简单的地理库</li>
</ul>
<h2><a id="user-content-日期和时间-date-and-time" class="anchor" aria-hidden="true" name="日期和时间-date-and-time"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>日期和时间 Date and Time</h2>
<p><em>处理日期和时间的库</em></p>
<ul>
<li><a href="http://yohan.giarel.li/CalendR/" rel="nofollow">CalendR</a> - 一个日历管理库</li>
<li><a href="https://github.com/briannesbitt/Carbon">Carbon</a> - 一个简单的日期时间API扩展</li>
<li><a href="https://github.com/cakephp/chronos">Chronos</a> - 一个支持可变和不可变日期时间的DateTime API扩展</li>
<li><a href="https://github.com/fightbulc/moment.php">Moment.php</a> - 灵感来源于Moment.js的PHP DateTime处理库，支持国际化</li>
<li><a href="https://github.com/azuyalabs/yasumi">Yasumi</a> - 一个帮助你计算节日日期和名称的库</li>
</ul>
<h2><a id="user-content-事件-event" class="anchor" aria-hidden="true" name="事件-event"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>事件 Event</h2>
<p><em>时间驱动或实现非阻塞事件循环的库</em></p>
<ul>
<li><a href="https://github.com/amphp/amp">Amp</a> - 一个事件驱动的不阻塞的I/O库</li>
<li><a href="https://github.com/broadway/broadway">Broadway</a> - 一个事件源和CQRS(命令查询责任分离)库</li>
<li><a href="https://github.com/cakephp/event">Cake Event</a> - 一个事件调度的库 (CP)</li>
<li><a href="https://github.com/Wisembly/Elephant.io">Elephant.io</a> - 另一个web socket库</li>
<li><a href="https://github.com/igorw/evenement">Evenement</a> - 一个事件调度的库</li>
<li><a href="https://github.com/thephpleague/event">Event</a> - 一个专注于域名事件的库</li>
<li><a href="https://github.com/hoaproject/Eventsource">Hoa EventSource</a> - 一个事件源库</li>
<li><a href="https://github.com/hoaproject/Websocket">Hoa WebSocket</a> - 另一个web socket库</li>
<li><a href="https://github.com/prooph/event-store">Prooph Event Store</a> - 一个持久化事件消息的事件源组件</li>
<li><a href="https://github.com/ratchetphp/Ratchet">Ratchet</a> - 一个web socket库</li>
<li><a href="https://github.com/reactphp/react">React</a> - 一个事件驱动的非阻塞I/O库.</li>
<li><a href="https://github.com/ReactiveX/RxPHP">RxPHP</a> - 一个reactive扩展库</li>
<li><a href="https://github.com/walkor/Workerman">Workerman</a> - 一个事件驱动的不阻塞的I/O库</li>
</ul>
<h2><a id="user-content-日志-logging" class="anchor" aria-hidden="true" name="日志-logging"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>日志 Logging</h2>
<p><em>生成和处理日志文件的库</em></p>
<ul>
<li><a href="https://github.com/Seldaek/monolog">Monolog</a> - 一个全面的日志工具</li>
</ul>
<h2><a id="user-content-电子商务-e-commerce" class="anchor" aria-hidden="true" name="电子商务-e-commerce"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>电子商务 E-commerce</h2>
<p><em>处理支付和构建在线电子商务商店的库和应用</em></p>
<ul>
<li><a href="https://github.com/moneyphp/money">Money</a> - 一个Fowler金钱模式的PHP实现</li>
<li><a href="https://github.com/thephpleague/omnipay">OmniPay</a> - 一个框架混合了多网关支付处理的库</li>
<li><a href="https://github.com/payum/payum">Payum</a> - 一个支付抽象库</li>
<li><a href="https://github.com/shopware/shopware">Shopware</a> - 一个可高度定制的电子商务软件</li>
<li><a href="https://github.com/florianv/swap">Swap</a> - 一个汇率库</li>
<li><a href="https://sylius.com/" rel="nofollow">Sylius</a> - 一个开源的电子商务解决方案</li>
</ul>
<h2><a id="user-content-pdf-pdf" class="anchor" aria-hidden="true" name="pdf-pdf"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>PDF PDF</h2>
<p><em>处理PDF文件的库和软件</em></p>
<ul>
<li><a href="https://github.com/dompdf/dompdf">Dompdf</a> - 一个将HTML转换为PDF的工具</li>
<li><a href="https://github.com/psliwa/PHPPdf">PHPPdf</a> - 一个将XML文件转换为PDF和图片的库</li>
<li><a href="https://github.com/KnpLabs/snappy">Snappy</a> - 一个PDF和图像生成器库</li>
<li><a href="https://github.com/wkhtmltopdf/wkhtmltopdf">WKHTMLToPDF</a> - 一个将HTML转换为PDF的工具</li>
</ul>
<h2><a id="user-content-office-office" class="anchor" aria-hidden="true" name="office-office"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Office Office</h2>
<p><em>Libraries for working with office suite documents.</em></p>
<ul>
<li><a href="https://github.com/PHPOffice/PHPPresentation">PHPPowerPoint</a> - 一个处理PPT文档的库</li>
<li><a href="https://github.com/PHPOffice/PHPWord">PHPWord</a> - 一个处理Word文档的库</li>
<li><a href="https://github.com/PHPOffice/PhpSpreadsheet">PHPSpreadsheet</a> - 一个纯PHP的读写电子表格的库 (successor of PHPExcel)</li>
</ul>
<h2><a id="user-content-数据库-database" class="anchor" aria-hidden="true" name="数据库-database"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>数据库 Database</h2>
<p><em>使用对象关系映射（ORM）或数据映射技术的数据库交互的库</em></p>
<ul>
<li><a href="https://github.com/atlasphp/Atlas.Orm">Atlas.Orm</a> - 一个PHP持久化模型数据映射的实现</li>
<li><a href="https://github.com/auraphp/Aura.Sql">Aura.Sql</a> - 一个使用PDO的ORM</li>
<li><a href="https://github.com/auraphp/Aura.SqlQuery">Aura.SqlQuery</a> - 支持MySQL, PostgreSQL, SQLite和Microsoft SQL Server的ORM</li>
<li><a href="https://github.com/etrepat/baum">Baum</a> - 一个Eloquent的嵌套集实现</li>
<li><a href="https://github.com/cakephp/orm">Cake ORM</a> - 对象关系映射工具，利用DataMapper模式实现 (CP)</li>
<li><a href="https://github.com/Atlantic18/DoctrineExtensions">Doctrine Extensions</a> - 一个Doctrine行为扩展的集合</li>
<li><a href="http://www.doctrine-project.org/" rel="nofollow">Doctrine</a> - 一个全面的DBAL和ORM</li>
<li><a href="https://github.com/illuminate/database">Eloquent</a> - 一个简单的ORM(L5)</li>
<li><a href="https://github.com/corneltek/LazyRecord">LazyRecord</a> - 一个简单、可扩展、高性能的ORM</li>
<li><a href="https://github.com/chanmix51/Pomm">Pomm</a> - 一个PostgreSQL对象模型管理器</li>
<li><a href="http://propelorm.org/" rel="nofollow">Propel</a> - 一个快速的ORM，迁移库和查询构架器</li>
<li><a href="https://github.com/Ocramius/ProxyManager">ProxyManager</a> - 一个为数据映射生成代理对象的工具集</li>
<li><a href="https://redbeanphp.com/index.php" rel="nofollow">RedBean</a> - 一个轻量级，低配置的ORM</li>
<li><a href="https://github.com/spotorm/spot2">Spot2</a> - 一个MySQL的ORM映射器</li>
</ul>
<h2><a id="user-content-迁移-migrations" class="anchor" aria-hidden="true" name="迁移-migrations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>迁移 Migrations</h2>
<p><em>帮助管理数据库模式和迁移的库</em></p>
<ul>
<li><a href="http://docs.doctrine-project.org/projects/doctrine-migrations/en/latest/toc.html" rel="nofollow">Doctrine Migrations</a> - 一个Doctrine的迁移库</li>
<li><a href="https://github.com/icomefromthenet/Migrations">Migrations</a> - 一个迁移管理库</li>
<li><a href="https://github.com/cakephp/phinx">Phinx</a> - 另一个数据库迁移的管理库</li>
<li><a href="https://github.com/davedevelopment/phpmig">PHPMig</a> - 另一个迁移管理库</li>
<li><a href="https://github.com/ruckus/ruckusing-migrations">Ruckusing</a> - 基于PHP下ActiveRecord的数据库迁移，支持MySQL, Postgres, SQLite</li>
</ul>
<h2><a id="user-content-nosql-nosql" class="anchor" aria-hidden="true" name="nosql-nosql"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>NoSQL NoSQL</h2>
<p><em>处理NoSQL后端的库</em></p>
<ul>
<li><a href="https://github.com/sokil/php-mongo">PHPMongo</a> - 一个MongoDB ORM.</li>
<li><a href="https://github.com/nrk/predis">Predis</a> - 一个功能完整的Redis库</li>
</ul>
<h2><a id="user-content-队列-queue" class="anchor" aria-hidden="true" name="队列-queue"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>队列 Queue</h2>
<p><em>处理事件和任务队列的库</em></p>
<ul>
<li><a href="https://github.com/bernardphp/bernard">Bernard</a> - 一个多后端抽象库</li>
<li><a href="https://github.com/jakubkulhan/bunny">BunnyPHP</a> - 一个高性能的纯PHP AMQP(RabbitMQ)同步和异步(ReactPHP)库</li>
<li><a href="https://github.com/pda/pheanstalk">Pheanstalk</a> - 一个Beanstalkd客户端库</li>
<li><a href="https://github.com/php-amqplib/php-amqplib">PHP AMQP</a> - 一个纯PHP AMQP库</li>
<li><a href="https://github.com/tarantool-php/queue">Tarantool Queue</a> - PHP绑定Tarantool队列</li>
<li><a href="https://github.com/php-amqplib/Thumper">Thumper</a> - 一个RabbitMQ模式库</li>
</ul>
<h2><a id="user-content-搜索-search" class="anchor" aria-hidden="true" name="搜索-search"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>搜索 Search</h2>
<p><em>在数据上索引和执行查询的库和软件</em></p>
<ul>
<li><a href="https://github.com/ruflin/Elastica">Elastica</a> - ElasticSearch的客户端库</li>
<li><a href="https://github.com/elastic/elasticsearch-php">ElasticSearch PHP</a> - <a href="https://www.elastic.co/" rel="nofollow">ElasticSearch</a>的官方客户端库</li>
<li><a href="http://www.solarium-project.org/" rel="nofollow">Solarium</a> - <a href="http://lucene.apache.org/solr/" rel="nofollow">Solr</a>的客户端库</li>
<li><a href="https://github.com/ripaclub/sphinxsearch">Sphinx Search</a> - Sphinx搜索库，提供SphinxQL索引和搜索的功能</li>
<li><a href="http://foolcode.github.io/SphinxQL-Query-Builder/" rel="nofollow">SphinxQL query builder</a> - <a href="http://sphinxsearch.com/" rel="nofollow">Sphinx</a>搜索引擎的的查询库</li>
</ul>
<h2><a id="user-content-命令行-command-line" class="anchor" aria-hidden="true" name="命令行-command-line"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>命令行 Command Line</h2>
<p><em>关于命令行工具的库</em></p>
<ul>
<li><a href="https://github.com/auraphp/Aura.Cli">Aura.Cli</a> - 一个命令行库</li>
<li><a href="https://github.com/borisrepl/boris">Boris</a> - 一个微型PHP REPL</li>
<li><a href="https://github.com/Cilex/Cilex">Cilex</a> - 一个构建命令行工具的微型框架</li>
<li><a href="https://github.com/php-school/cli-menu">CLI Menu</a> - 一个构建CLI菜单的库</li>
<li><a href="https://github.com/c9s/CLIFramework">CLIFramework</a> - 一个支持完全zsh／bash、子命令和选项约束的命令行框架，这也归功于phpbrew</li>
<li><a href="https://github.com/thephpleague/climate">CLImate</a> - 一个输出带颜色的和特殊格式的命令行库</li>
<li><a href="https://github.com/nategood/commando">Commando</a> - 另一个简单的命令行选择解析器</li>
<li><a href="https://github.com/mtdowling/cron-expression">Cron Expression</a> - 一个计算cron运行日期的库</li>
<li><a href="https://github.com/getopt-php/getopt-php">GetOpt</a> - 一个命令行选择解析器</li>
<li><a href="https://github.com/c9s/GetOptionKit">GetOptionKit</a> - 另一个命令行选择解析器</li>
<li><a href="https://github.com/hoaproject/Console">Hoa Console</a> - 另一个命令行库</li>
<li><a href="https://github.com/bobthecow/psysh">PsySH</a> - 另一个PHP REPL</li>
<li><a href="https://github.com/MrRio/shellwrap">ShellWrap</a> - -一个简单的命令行包装库</li>
</ul>
<h2><a id="user-content-身份验证和授权-authentication-and-authorization" class="anchor" aria-hidden="true" name="身份验证和授权-authentication-and-authorization"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>身份验证和授权 Authentication and Authorization</h2>
<p><em>实现身份验证和授权的库</em></p>
<ul>
<li><a href="https://github.com/auraphp/Aura.Auth">Aura.Auth</a> - 一个身份认证的库</li>
<li><a href="https://github.com/socialConnect/auth">SocialConnect Auth</a> - 一个开源的social sign (OAuth1\OAuth2\OpenID\OpenIDConnect)</li>
<li><a href="https://github.com/lcobucci/jwt">Json Web Token</a> - 使用JSON Tokens进行身份验证和信息传输</li>
<li><a href="https://github.com/thephpleague/oauth1-client">OAuth 1.0 Client</a> - 一个OAuth 1.0客户端的库</li>
<li><a href="https://github.com/thephpleague/oauth2-client">OAuth 2.0 Client</a> - 一个OAuth 2.0客户端的库</li>
<li><a href="http://bshaffer.github.io/oauth2-server-php-docs/" rel="nofollow">OAuth2 Server</a> - 另一个OAuth2服务器实现</li>
<li><a href="http://oauth2.thephpleague.com/" rel="nofollow">OAuth2 Server</a> - 另一个OAuth2服务器实现</li>
<li><a href="https://github.com/opauth/opauth">Opauth</a> - 一个多渠道的身份验证框架</li>
<li><a href="https://github.com/Lusitanian/PHPoAuthLib">PHP oAuthLib</a> - 另一个OAuth库</li>
<li><a href="https://cartalyst.com/manual/sentinel-social/2.0" rel="nofollow">Sentinel Social</a> - 一个社交网络身份验证库</li>
<li><a href="https://cartalyst.com/manual/sentinel/2.0" rel="nofollow">Sentinel</a> - 一个混合的身份验证和授权的框架库</li>
<li><a href="https://github.com/abraham/twitteroauth">TwitterOAuth</a> - 一个Twitter OAuth库</li>
</ul>
<h2><a id="user-content-标记-markup" class="anchor" aria-hidden="true" name="标记-markup"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>标记 Markup</h2>
<p><em>处理标记的库</em></p>
<ul>
<li><a href="https://github.com/cebe/markdown">Cebe Markdown</a> - 一个快速的可扩展的Markdown解析器</li>
<li><a href="https://github.com/thephpleague/commonmark">CommonMark PHP</a> - 一个对<a href="http://spec.commonmark.org/" rel="nofollow">CommonMark spec</a>全支持的Markdown解析器</li>
<li><a href="https://github.com/milesj/decoda">Decoda</a> - 一个轻量级标记解析库</li>
<li><a href="https://github.com/heyupdate/Emoji">Emoji</a> - 一个把Unicode字符和名称转换为表情符号图片的库</li>
<li><a href="https://github.com/thephpleague/html-to-markdown">HTML to Markdown</a> - 将HTML转化为Markdown</li>
<li><a href="https://github.com/Masterminds/html5-php">HTML5 PHP</a> - 一个HTML5解析和序列化库</li>
<li><a href="https://github.com/erusev/parsedown">Parsedown</a> - 另一个Markdown解析器</li>
<li><a href="https://github.com/michelf/php-markdown">PHP Markdown</a> - 一个Markdown解析器</li>
</ul>
<h2><a id="user-content-字符串-strings" class="anchor" aria-hidden="true" name="字符串-strings"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>字符串 Strings</h2>
<p><em>解析和处理字符串的库</em></p>
<ul>
<li><a href="https://github.com/jenssegers/agent">Agent</a> - 一个基于Mobiledetect的桌面／手机端user agent解析库</li>
<li><a href="https://github.com/sensiolabs/ansi-to-html">ANSI to HTML5</a> - 一个将ANSI转化为HTML5的库</li>
<li><a href="https://github.com/mikeemoo/ColorJizz-PHP">Color Jizz</a> - 处理和转换颜色的库</li>
<li><a href="https://github.com/matomo-org/device-detector">Device Detector</a> - 另一个解析user agent字符串的库</li>
<li><a href="https://github.com/hoaproject/Ustring">Hoa String</a> - 另一个UTF-8字符串库</li>
<li><a href="https://github.com/fukuball/jieba-php">Jieba-PHP</a> - Python的jieba的PHP端口，自然语言处理的中文文本分词</li>
<li><a href="https://github.com/serbanghita/Mobile-Detect">Mobile-Detect</a> - 一个用于检测移动设备的轻量级PHP类(包括平板电脑)</li>
<li><a href="https://github.com/nicolas-grekas/Patchwork-UTF8">Patchwork UTF-8</a> - 一个处理UTF-8字符串的便携库</li>
<li><a href="https://github.com/cocur/slugify">Slugify</a> - 转换字符串到slug的库</li>
<li><a href="https://github.com/jdorn/sql-formatter/">SQL Formatter</a> - 一个格式化SQL语句的库</li>
<li><a href="https://github.com/danielstjules/Stringy">Stringy</a> - 一个多字节支持的字符串处理库</li>
<li><a href="https://github.com/tobie/ua-parser/tree/master/php">UA Parser</a> - 一个解析user agent字符串的库</li>
<li><a href="https://github.com/jbroadway/urlify">URLify</a> - 一个Django中URLify.js的PHP版本</li>
<li><a href="https://github.com/ramsey/uuid">UUID</a> - 生成UUIDs的库</li>
</ul>
<h2><a id="user-content-数字-numbers" class="anchor" aria-hidden="true" name="数字-numbers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>数字 Numbers</h2>
<p><em>处理数字的库</em></p>
<ul>
<li><a href="https://github.com/gabrielelana/byte-units">ByteUnits</a> - 一个在二进制和度量系统中解析,格式化和转换字节单元的库</li>
<li><a href="https://github.com/giggsey/libphonenumber-for-php">LibPhoneNumber for PHP</a> - 一个Google电话号码处理的PHP实现库</li>
<li><a href="https://github.com/Crisu83/php-conversion">PHP Conversion</a> - 另一个用于度量单位间转换的库</li>
<li><a href="https://github.com/triplepoint/php-units-of-measure">PHP Units of Measure</a> - 一个计量单位转换的库</li>
</ul>
<h2><a id="user-content-过滤和验证-filtering-and-validation" class="anchor" aria-hidden="true" name="过滤和验证-filtering-and-validation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>过滤和验证 Filtering and Validation</h2>
<p><em>过滤和验证数据的库</em></p>
<ul>
<li><a href="https://github.com/auraphp/Aura.Filter">Aura.Filter</a> - 一个验证库</li>
<li><a href="https://github.com/cakephp/validation">Cake Validation</a> - 另一个验证库 (CP)</li>
<li><a href="https://github.com/ircmaxell/filterus">Filterus</a> - 一个简单的PHP过滤库</li>
<li><a href="https://github.com/ronanguilloux/IsoCodes">ISO-codes</a> - 一个验证各种ISO和ZIP编码的库(IBAN, SWIFT/BIC, BBAN, VAT, SSN, UKNIN)</li>
<li><a href="https://github.com/romaricdrigon/MetaYaml">MetaYaml</a> - 一个支持YAML,JSON和XML的模式验证库</li>
<li><a href="https://github.com/Respect/Validation">Respect Validation</a> - 一个简单的验证库</li>
<li><a href="https://github.com/brandonsavage/Upload">Upload</a> - 一个处理文件上传和验证的库</li>
<li><a href="https://github.com/vlucas/valitron">Valitron</a> - 另一个验证库</li>
<li><a href="https://github.com/serkin/Volan">Volan</a> - 另一个简单的验证库</li>
</ul>
<h2><a id="user-content-api-api" class="anchor" aria-hidden="true" name="api-api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>API API</h2>
<p><em>开发REST-ful API的库和web工具</em></p>
<ul>
<li><a href="https://api-platform.com" rel="nofollow">API Platform</a> - 暴露出REST API的项目，包含JSON-LD, Hydra格式</li>
<li><a href="https://github.com/zfcampus/zf-apigility-skeleton">Apigility</a> - 一个使用Zend Framework 2构建的API构建器</li>
<li><a href="https://github.com/leedavis81/drest">Drest</a> - 一个将Doctrine实体暴露为REST资源节点的库</li>
<li><a href="https://github.com/blongden/hal">HAL</a> - 一个超文本应用语言(HAL)构建库</li>
<li><a href="https://github.com/willdurand/Hateoas">Hateoas</a> - 一个HOATEOAS REST web服务库</li>
<li><a href="https://github.com/willdurand/Negotiation">Negotiation</a> - 一个内容协商库</li>
<li><a href="https://github.com/Luracast/Restler">Restler</a> - 一个将PHP方法暴露为RESTful web API的轻量级框架</li>
<li><a href="https://github.com/wsdl2phpgenerator/wsdl2phpgenerator">wsdl2phpgenerator</a> - 一个从SOAP WSDL文件生成PHP类的工具</li>
</ul>
<h2><a id="user-content-缓存-caching" class="anchor" aria-hidden="true" name="缓存-caching"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>缓存 Caching</h2>
<p><em>缓存数据的库</em></p>
<ul>
<li><a href="http://php.net/manual/en/book.apc.php" rel="nofollow">Alternative PHP Cache (APC)</a> - 打开PHP操作码缓存</li>
<li><a href="https://github.com/apix/cache">APIx Cache</a> - &nbsp;一个轻量级的PSR-6缓存</li>
<li><a href="https://github.com/gordalina/cachetool">CacheTool</a> - 一个使用命令行清除apc/opcode缓存的工具</li>
<li><a href="https://github.com/cakephp/cache">Cake Cache</a> - 一个缓存库 (CP)</li>
<li><a href="https://github.com/doctrine/cache">Doctrine Cache</a> - 一个缓存库</li>
<li><a href="https://github.com/sobstel/metaphore">Metaphore</a> - 一个缓存失效防范的库，使用信号标记阻止dogpile影响</li>
<li><a href="https://github.com/tedious/Stash">Stash</a> - 另一个缓存库</li>
<li><a href="https://github.com/zendframework/zend-cache">Zend Cache</a> - 另一个缓存库 (ZF2)</li>
</ul>
<h2><a id="user-content-数据结构和存储-data-structure-and-storage" class="anchor" aria-hidden="true" name="数据结构和存储-data-structure-and-storage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>数据结构和存储 Data Structure and Storage</h2>
<p><em>实现数据结构和存储技术的库</em></p>
<ul>
<li><a href="https://github.com/cakephp/collection">Cake Collection</a> - 一个简单的集合库 (CP)</li>
<li><a href="https://github.com/italolelis/collections">Collections</a> - 一个PHP的集合抽象库</li>
<li><a href="https://github.com/thephpleague/fractal">Fractal</a> - 一个转换复杂数据结构到JSON输出的库</li>
<li><a href="https://github.com/akanehara/ginq">Ginq</a> - 另一个基于.NET实现的PHP的LINQ库</li>
<li><a href="https://github.com/cweiske/jsonmapper">JsonMapper</a> - 一个将内嵌JSON结构映射为PHP类的库</li>
<li><a href="https://github.com/DusanKasan/Knapsack">Knapsack</a> - 一个集合的库，灵感来自Clojure的相关库</li>
<li><a href="https://github.com/TimeToogo/Pinq">PINQ</a> - 一个基于.NET实现的PHP的LINQ(Language Integrated Query)库</li>
<li><a href="https://github.com/ScriptFUSION/Porter">Porter</a> - 数据导入的抽象框架</li>
<li><a href="https://github.com/schmittjoh/serializer">Serializer</a> - 一个序列化和反序列化数据的库</li>
<li><a href="https://github.com/Athari/YaLinqo">YaLinqo</a> - 另一个PHP的LINQ库</li>
<li><a href="https://github.com/zendframework/zend-serializer">Zend Serializer</a> - 另一个序列化和反序列化数据的库 (ZF2)</li>
</ul>
<h2><a id="user-content-通知-notifications" class="anchor" aria-hidden="true" name="通知-notifications"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>通知 Notifications</h2>
<p><em>处理通知软件的库</em></p>
<ul>
<li><a href="https://github.com/jolicode/JoliNotif">JoliNotif</a> - 一个跨平台的桌面通知库(支持Growl, notify-send, toaster等)</li>
<li><a href="https://github.com/Ph3nol/NotificationPusher">Notification Pusher</a> - 一个设备推送通知的独立库</li>
<li><a href="https://github.com/mac-cain13/notificato">Notificato</a> - 一个处理推送通知的库</li>
<li><a href="https://github.com/namshi/notificator">Notificator</a> - 一个轻量级的通知库</li>
<li><a href="https://github.com/gomoob/php-pushwoosh">Php-pushwoosh</a> - 一个使用Pushwoosh REST Web服务轻松推送通知的PHP库</li>
</ul>
<h2><a id="user-content-部署-deployment" class="anchor" aria-hidden="true" name="部署-deployment"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>部署 Deployment</h2>
<p><em>项目部署库</em></p>
<ul>
<li><a href="https://github.com/deployphp/deployer">Deployer</a> - 一个部署工具</li>
<li><a href="https://github.com/laravel/envoy">Envoy</a> - 一个用PHP运行SSH任务的工具</li>
<li><a href="https://github.com/rocketeers/rocketeer">Rocketeer</a> - PHP世界里的一个快速简单的部署器</li>
</ul>
<h2><a id="user-content-国际化和本地化-internationalisation-and-localisation" class="anchor" aria-hidden="true" name="国际化和本地化-internationalisation-and-localisation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>国际化和本地化 Internationalisation and Localisation</h2>
<p><em>国际化(I18n)和本地化(L10n)的库</em></p>
<ul>
<li><a href="https://github.com/auraphp/Aura.Intl">Aura.Intl</a> - 一个国际化的库</li>
<li><a href="https://github.com/cakephp/i18n">Cake I18n</a> - 消息国际化和日期和数字的本地化 (CP)</li>
</ul>
<h2><a id="user-content-第三方api-third-party-apis" class="anchor" aria-hidden="true" name="第三方api-third-party-apis"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>第三方API Third Party APIs</h2>
<p><em>访问第三方API的库</em></p>
<ul>
<li><a href="https://github.com/aws/aws-sdk-php">Amazon Web Service SDK</a> - PHP AWS SDK官方库</li>
<li><a href="http://campaignmonitor.github.io/createsend-php/" rel="nofollow">Campaign Monitor</a> - Campaign Monitor官方PHP库</li>
<li><a href="https://github.com/dropbox/dropbox-sdk-php">Dropbox SDK</a> - Dropbox SDK官方PHP库</li>
<li><a href="https://github.com/KnpLabs/php-github-api">Github</a> - 一个Github API交互库</li>
<li><a href="https://github.com/stripe/stripe-php">Stripe</a> - Stripe官方PHP库</li>
<li><a href="https://github.com/twilio/twilio-php">Twilio</a> - Twilio官方PHP REST API</li>
</ul>
<h2><a id="user-content-扩展-extensions" class="anchor" aria-hidden="true" name="扩展-extensions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>扩展 Extensions</h2>
<p><em>帮助构建PHP扩展的库</em></p>
<ul>
<li><a href="http://www.php-cpp.com/" rel="nofollow">PHP CPP</a> - 一个开发PHP扩展的C++库</li>
<li><a href="https://github.com/phalcon/zephir">Zephir</a> - 用于开发PHP扩展，且介于PHP和C++之间的编译语言</li>
</ul>
<h2><a id="user-content-杂项-miscellaneous" class="anchor" aria-hidden="true" name="杂项-miscellaneous"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>杂项 Miscellaneous</h2>
<p><em>创建一个开发环境的软件</em></p>
<ul>
<li><a href="https://github.com/doctrine/annotations">Annotations</a> - 一个注释库(Doctrine的一部分)</li>
<li><a href="https://github.com/botman/botman">BotMan</a> - 一个构建跨平台聊天机器人的PHP框架库</li>
<li><a href="https://github.com/cakephp/utility">Cake Utility</a> - 工具类如Inflector，字符串，哈希，安全和XML (CP)</li>
<li><a href="https://github.com/adamnicholson/Chief">Chief</a> - 一个命令总线库</li>
<li><a href="https://github.com/ClassPreloader/ClassPreloader">ClassPreloader</a> - 一个优化自动加载的库</li>
<li><a href="https://github.com/umpirsky/country-list">Country List</a> - 所有带有名称和ISO 3166-1编码的国家列表</li>
<li><a href="https://github.com/mpratt/Embera">Embera</a> - 一个Oembed消费库</li>
<li><a href="https://github.com/essence/essence">Essence</a> - 一个用于提取网络媒体的库</li>
<li><a href="https://github.com/alexandresalome/graphviz">Graphviz</a> - 一个图形库</li>
<li><a href="https://github.com/hprose/hprose-php">Hprose-PHP</a> - 一个很牛的RPC库，现在支持25+种语言</li>
<li><a href="https://github.com/Seldaek/jsonlint">JSON Lint</a> - 一个JSON lint工具</li>
<li><a href="https://github.com/willdurand/JsonpCallbackValidator">JSONPCallbackValidator</a> - 验证JSONP回调的库</li>
<li><a href="https://github.com/beberlei/metrics">Metrics</a> - 一个简单的度量API库</li>
<li><a href="https://github.com/ARCANEDEV/noCAPTCHA">noCAPTCHA</a> - 一个帮助使用谷歌noCAPTCHA (reCAPTCHA)的工具</li>
<li><a href="https://github.com/willdurand/nmap">Nmap</a> - 一个<a href="https://nmap.org/" rel="nofollow">Nmap</a> PHP包装器</li>
<li><a href="https://github.com/whiteoctober/Pagerfanta">Pagerfanta</a> - 一个分页库</li>
<li><a href="https://github.com/eymengunay/php-passbook">PHP PassBook</a> - 一个iOS PassBook PHP库</li>
<li><a href="https://github.com/php-ai/php-ml">PHP-ML</a> - 一个机器学习的PHP库</li>
<li><a href="https://github.com/phpcr/phpcr">PHPCR</a> - 一个Java内容存储库(JCR)的PHP实现</li>
<li><a href="http://dunkels.com/adam/phpstack/" rel="nofollow">PHPStack</a> - 一个PHP编写的TCP/IP栈概念</li>
<li><a href="https://github.com/koriym/print_o">print_o</a> - 一个对象图的可视化器</li>
<li><a href="https://github.com/lstrojny/Procrastinator">Procrastinator</a> - 一个运行耗时任务的库</li>
<li><a href="https://github.com/prooph/service-bus">Prooph Service Bus</a> - 轻量级的消息总线，支持CQRS和微服务</li>
<li><a href="https://github.com/liip/RMT">RMT</a> - 一个编写版本和发布软件的库</li>
<li><a href="https://github.com/sabre-io/vobject">sabre/vobject</a> - 一个解析VCard和iCalendar对象的库</li>
<li><a href="https://github.com/webfactory/slimdump">Slimdump</a> - 一个简单的MySQL dumper工具</li>
<li><a href="https://github.com/kriswallsmith/spork">Spork</a> - 一个处理forking的库</li>
<li><a href="https://github.com/jeremeamia/super_closure">SuperClosure</a> - 一个允许闭包序列化的库</li>
<li><a href="http://symfony.com/doc/current/components/var_dumper.html" rel="nofollow">Symfony VarDumper</a> - 一个dumper库(SF2)</li>
<li><a href="http://anahkiasen.github.io/underscore-php/" rel="nofollow">Underscore</a> - 一个Undersccore JS库的PHP实现</li>
<li><a href="https://github.com/filp/whoops">Whoops</a> - 一个不错的错误处理库</li>
</ul>
<h2><a id="user-content-php安装-php-installation" class="anchor" aria-hidden="true" name="php安装-php-installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>PHP安装 PHP Installation</h2>
<p><em>在你的电脑上帮助安装和管理PHP的工具</em></p>
<ul>
<li><a href="https://github.com/Homebrew/homebrew-php">HomeBrew PHP</a> - 一个HomeBrew的PHP通道</li>
<li><a href="https://brew.sh/" rel="nofollow">HomeBrew</a> - 一个OSX包管理器</li>
<li><a href="https://github.com/phpbrew/phpbrew">PHP Brew</a> - 一个PHP版本管理和安装器</li>
<li><a href="https://github.com/php-build/php-build">PHP Build</a> - 另一个PHP版本安装器</li>
<li><a href="https://php-osx.liip.ch/" rel="nofollow">PHP OSX</a> - 一个OSX下的PHP安装器</li>
<li><a href="http://virtphp.org/" rel="nofollow">VirtPHP</a> - 一个创建和管理独立PHP环境的工具</li>
</ul>
<h2><a id="user-content-开发环境-development-environment" class="anchor" aria-hidden="true" name="开发环境-development-environment"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>开发环境 Development Environment</h2>
<p><em>创建沙盒开发环境的软件和工具</em></p>
<ul>
<li><a href="https://www.ansible.com/" rel="nofollow">Ansible</a> - 一个非常简单的编制框架</li>
<li><a href="http://phansible.com/" rel="nofollow">Phansible</a> - 一个用Ansible构建PHP开发虚拟机的web工具</li>
<li><a href="https://www.getprotobox.com/" rel="nofollow">Protobox</a> - 另一个构建PHP开发虚拟机的web工具</li>
<li><a href="https://puphpet.com/" rel="nofollow">PuPHPet</a> - 一个构建PHP开发虚拟机的web工具</li>
<li><a href="https://puppet.com/" rel="nofollow">Puppet</a> - 一个服务器自动化框架和应用</li>
<li><a href="https://www.vagrantup.com/" rel="nofollow">Vagrant</a> - 一个便携的开发环境工具</li>
<li><a href="https://www.docker.com/" rel="nofollow">Docker</a> - 一个容器化的平台</li>
</ul>
<h2><a id="user-content-虚拟机-virtual-machines" class="anchor" aria-hidden="true" name="虚拟机-virtual-machines"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>虚拟机 Virtual Machines</h2>
<p><em>相关的PHP虚拟机</em></p>
<ul>
<li><a href="http://hacklang.org/" rel="nofollow">Hack</a> - 一个PHP进行无缝操作的HHVM编程语言</li>
<li><a href="https://github.com/facebook/hhvm">HHVM</a> - Facebook出品的PHP虚拟机，Runtime和JIT</li>
</ul>
<h2><a id="user-content-文本编辑器和ide-text-editors-and-ides" class="anchor" aria-hidden="true" name="文本编辑器和ide-text-editors-and-ides"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>文本编辑器和IDE Text Editors and IDEs</h2>
<p><em>支持PHP的文本编辑器和集成开发环境(IDE)</em></p>
<ul>
<li><a href="https://atom.io/" rel="nofollow">Atom</a> - 一个文本编辑器</li>
<li><a href="https://ide.atom.io/" rel="nofollow">Atom IDE</a> - 一个扩展自Atom的IDE</li>
<li><a href="https://www.eclipse.org/downloads/" rel="nofollow">Eclipse for PHP Developers</a> - 一个基于Eclipse平台的PHP IDE</li>
<li><a href="https://netbeans.org" rel="nofollow">Netbeans</a> - 一个支持PHP和HTML5的IDE</li>
<li><a href="http://www.jetbrains.com/phpstorm/" rel="nofollow">PhpStorm</a> - 一个商业PHP IDE</li>
<li><a href="https://code.visualstudio.com/" rel="nofollow">VS Code</a> - 一个开源的代码编辑器</li>
</ul>
<h2><a id="user-content-web应用-web-applications" class="anchor" aria-hidden="true" name="web应用-web-applications"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Web应用 Web Applications</h2>
<p><em>基于Web的应用和工具</em></p>
<ul>
<li><a href="https://3v4l.org/" rel="nofollow">3V4L</a> - 一个在线的PHP和HHVM shell</li>
<li><a href="https://dbv.vizuina.com/" rel="nofollow">DBV</a> - 一个数据库版本控制应用</li>
<li><a href="https://github.com/CoderKungfu/php-queue">PHP Queue</a> - A一个管理后端队列的应用</li>
<li><a href="https://github.com/sj26/mailcatcher">MailCatcher</a> - 一个抓取和查看邮件的web工具</li>
<li><a href="https://github.com/cachethq/cachet">Cachet</a> - 开源状态页面系统</li>
<li><a href="https://github.com/ErikDubbelboer/phpRedisAdmin">phpRedisAdmin</a> - 一个用于管理<a href="http://redis.io/" rel="nofollow">Redis</a>数据库的简单web界面</li>
<li><a href="https://github.com/phpmyadmin/phpmyadmin">phpMyAdmin</a> - 一个MySQL/MariaDB的web界面</li>
<li><a href="https://www.adminer.org/" rel="nofollow">Adminer</a> - 一个数据库管理工具</li>
<li><a href="https://github.com/getgrav/grav">Grav</a> - 一个现代的flat－file的CMS</li>
<li><a href="https://github.com/electerious/Lychee">Lychee</a> - 一个易于使用和好看的照片管理系统</li>
</ul>
<h2><a id="user-content-基础架构-infrastructure" class="anchor" aria-hidden="true" name="基础架构-infrastructure"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>基础架构 Infrastructure</h2>
<p><em>提供PHP应用和服务的基础架构</em></p>
<ul>
<li><a href="https://appserver.io/" rel="nofollow">appserver.io</a> - 一个用PHP写的多线程的PHP应用服务器</li>
<li><a href="https://github.com/php-pm/php-pm">php-pm</a> - 一个PHP应用的进程管理器、修改器和负载平衡器</li>
</ul>
<h2><a id="user-content-php网站-php-websites" class="anchor" aria-hidden="true" name="php网站-php-websites"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>PHP网站 PHP Websites</h2>
<p><em>PHP相关的有用的网站</em></p>
<ul>
<li><a href="https://nomadphp.com/" rel="nofollow">Nomad PHP</a> - 一个在线PHP学习资源</li>
<li><a href="https://phpbestpractices.org/" rel="nofollow">PHP Best Practices</a> - 一个PHP最佳实践指南</li>
<li><a href="https://www.php-fig.org/" rel="nofollow">PHP FIG</a> - PHP框架交互组</li>
<li><a href="https://php-mentoring.org/" rel="nofollow">PHP Mentoring</a> - 点对点PHP导师组织</li>
<li><a href="http://php-pds.com" rel="nofollow">PHP Package Development Standards</a> - PHP包开发标准</li>
<li><a href="https://www.phpschool.io/" rel="nofollow">PHP School</a> - PHP的开源学习</li>
<li><a href="http://phpsecurity.readthedocs.io/en/latest/index.html" rel="nofollow">PHP Security</a> - 一个PHP安全指南</li>
<li><a href="http://www.phptherightway.com/" rel="nofollow">PHP The Right Way</a> - 一个PHP最佳实践的快速指引手册</li>
<li><a href="http://php.ug" rel="nofollow">PHP UG</a> - 一个帮助用户定位最近的PHP用户组(UG)的网站</li>
<li><a href="http://phpversions.info/" rel="nofollow">PHP Versions</a> - 哪些版本的PHP可以用在哪几种流行的Web主机上的列表</li>
<li><a href="http://www.phpweekly.com/archive.html" rel="nofollow">PHP Weekly</a> - 一个PHP新闻周刊</li>
<li><a href="https://phptrends.com/" rel="nofollow">PHPTrends</a> - 一个快速增长的PHP类库的概述</li>
<li><a href="http://securingphp.com/" rel="nofollow">Securing PHP</a> - 一个关于PHP安全和库的建议的简报</li>
<li><a href="https://7php.com/" rel="nofollow">Seven PHP</a> - 一个PHP社区成员采访的网站</li>
<li><a href="https://blog.jetbrains.com/phpstorm/category/php-annotated-monthly/" rel="nofollow">PHP Annotated Monthly</a> - 一个PHP新闻的月度摘要</li>
</ul>
<h2><a id="user-content-其他网站-other-websites" class="anchor" aria-hidden="true" name="其他网站-other-websites"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>其他网站 Other Websites</h2>
<p><em>web开发相关的有用网站</em></p>
<ul>
<li><a href="https://www.atlassian.com/git" rel="nofollow">Atlassian Git Tutorials</a> - 一个Git教程系列</li>
<li><a href="http://hginit.com/" rel="nofollow">Hg Init</a> - 一个Mercurial教程系列</li>
<li><a href="https://linuxjourney.com/" rel="nofollow">Learning Linux</a> - 一个学习linux的个网站</li>
<li><a href="https://semver.org/" rel="nofollow">Semantic Versioning</a> - 一个解析语义版本的网站</li>
<li><a href="https://serversforhackers.com/" rel="nofollow">Servers for Hackers</a> - 一个关于服务器管理的新闻通讯</li>
<li><a href="https://www.owasp.org/index.php/Main_Page" rel="nofollow">The Open Web Application Security Project (OWASP)</a> - 一个开放软件安全社区</li>
<li><a href="https://websec.io/" rel="nofollow">WebSec IO</a> - 一个web安全社区资源</li>
</ul>
<h2><a id="user-content-php书籍-php-books" class="anchor" aria-hidden="true" name="php书籍-php-books"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>PHP书籍 PHP Books</h2>
<p><em>PHP相关的非常好的书籍</em></p>
<ul>
<li><a href="https://www.functionalphp.com/" rel="nofollow">Functional Programming in PHP</a> - 这本书将告诉你如何利用PHP5.3+的新功能的认识函数式编程的原则</li>
<li><a href="https://leanpub.com/grumpy-phpunit" rel="nofollow">Grumpy PHPUnit</a> - 一本Chris Hartjes关于使用PHPUnit进行单元测试的书</li>
<li><a href="https://www.brandonsavage.net/" rel="nofollow">Mastering Object-Orientated PHP</a> - 一本Brandon Savage关于PHP面向对象的书</li>
<li><a href="http://shop.oreilly.com/product/0636920033868.do" rel="nofollow">Modern PHP New Features and Good Practices</a> - 一本Josh Lockhart关于新的PHP功能和最佳做法的书</li>
<li><a href="https://leanpub.com/mlaphp" rel="nofollow">Modernizing Legacy Applications in PHP</a> - 一本Paul M.Jones关于遗留PHP应用进行现代化的书</li>
<li><a href="https://leanpub.com/php7" rel="nofollow">PHP 7 Upgrade Guide</a> - 一本Colin O'Dell的包含所有PHP 7功能和改变的书</li>
<li><a href="https://daylerees.com/php-pandas/" rel="nofollow">PHP Pandas</a> - 一本Dayle Rees关于如何学习写PHP的书</li>
<li><a href="http://www.scalingphpbook.com" rel="nofollow">Scaling PHP Applications</a> - 一本Steve Corona关于扩展PHP应用程序的电子书</li>
<li><a href="https://leanpub.com/securingphp-coreconcepts" rel="nofollow">Securing PHP: Core Concepts</a> - 一本Chris Cornutt关于PHP常见安全条款和实践的书</li>
<li><a href="https://leanpub.com/signalingphp" rel="nofollow">Signaling PHP</a> - 一本Cal Evans关于在CLI脚本捕获PCNTL信号的书</li>
<li><a href="https://leanpub.com/grumpy-testing" rel="nofollow">The Grumpy Programmer's Guide to Building Testable PHP Applications</a> - 一本Chris Hartjes关于构建PHP应用程序测试的书</li>
<li><a href="https://www.phparch.com/books/xml-parsing-with-php/" rel="nofollow">XML Parsing with PHP</a> - 这本书涵盖的解析和验证XML文档，利用XPath表达式，使用命名空间，以及如何创建和修改XML文件的编程</li>
<li><a href="https://leanpub.com/ddd-in-php" rel="nofollow">Domain-Driven Design in PHP</a> - 展示PHP DDD风格的实例</li>
</ul>
<h2><a id="user-content-其他书籍-other-books" class="anchor" aria-hidden="true" name="其他书籍-other-books"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>其他书籍 Other Books</h2>
<p><em>与一般计算和web开发相关的书</em></p>
<ul>
<li><a href="https://www.elastic.co/guide/index.html" rel="nofollow">Elasticsearch: The Definitive Guide</a> - Clinton Cormley和Zachary Tong编写的与Elasticsearch工作的一本指南</li>
<li><a href="http://eloquentjavascript.net/" rel="nofollow">Eloquent JavaScript</a> - Marijin Haverbeke关于JavaScript编程的一本书</li>
<li><a href="http://www.headfirstlabs.com/books/hfdp/" rel="nofollow">Head First Design Patterns</a> - 解说软件设计模式的一本书</li>
<li><a href="https://git-scm.com/book/en/v2" rel="nofollow">Pro Git</a> - Scott Chacon和Ben Straub关于Git的一本书</li>
<li><a href="http://linuxcommand.org/tlcl.php" rel="nofollow">The Linux Command Line</a> - William Shotts关于Linux命令行的一本书</li>
<li><a href="https://www.amazon.com/Tangled-Web-Securing-Modern-Applications/dp/1593273886" rel="nofollow">The Tangled Web — Securing Web Applications</a> - Michal Zalewski关于web应用安全的一本书</li>
<li><a href="http://computationbook.com" rel="nofollow">Understanding Computation</a> - Tom Stuart关于计算理论的一本书</li>
<li><a href="https://leanpub.com/vagrantcookbook" rel="nofollow">Vagrant Cookbook</a> - Erika Heidi关于创建 Vagrant环境的一本书</li>
</ul>
<h2><a id="user-content-php视频-php-videos" class="anchor" aria-hidden="true" name="php视频-php-videos"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>PHP视频 PHP Videos</h2>
<p><em>PHP相关的非常不错的视频</em></p>
<ul>
<li><a href="https://www.youtube.com/c/nomadphp" rel="nofollow">Nomad PHP Lightning Talks</a> - PHP社区成员10到15分钟的快速会谈</li>
<li><a href="https://www.youtube.com/user/phpukconference/videos" rel="nofollow">PHP UK Conference</a> - 一个PHP英国会议的视频集合</li>
<li><a href="https://www.youtube.com/playlist?list=PLM-218uGSX3DQ3KsB5NJnuOqPqc5CW2kW" rel="nofollow">Programming with Anthony</a> - Anthony Ferrara的视频系列</li>
<li><a href="https://www.infoq.com/presentations/php-history" rel="nofollow">Taking PHP Seriously</a> - 来自Facebook Keith Adams 讲述PHP优势</li>
</ul>
<h2><a id="user-content-php播客-php-podcasts" class="anchor" aria-hidden="true" name="php播客-php-podcasts"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>PHP播客 PHP Podcasts</h2>
<p><em>专注于PHP话题的博客</em></p>
<ul>
<li><a href="https://phptownhall.com/" rel="nofollow">PHP Town Hall</a> - 一个随意的Ben Edmunds和Phil Sturgeon的PHP播客</li>
<li><a href="https://www.phproundtable.com/" rel="nofollow">PHP Roundtable</a> - PHP Roundtable是一个讨论PHP开发者关心话题的临时聚会</li>
</ul>
<h2><a id="user-content-php阅读-php-reading" class="anchor" aria-hidden="true" name="php阅读-php-reading"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>PHP阅读 PHP Reading</h2>
<p><em>PHP相关的阅读资料</em></p>
<ul>
<li><a href="https://daylerees.com/composer-primer/" rel="nofollow">Composer Primer</a> - Composer初级使用</li>
<li><a href="https://igor.io/2013/02/07/composer-stability-flags.html" rel="nofollow">Composer Stability Flags</a> - 一篇关于Composer稳定性标志的文章</li>
<li><a href="https://igor.io/2013/01/07/composer-versioning.html" rel="nofollow">Composer Versioning</a> - 一篇关于Composer版本的文章</li>
<li><a href="http://fabien.potencier.org/create-your-own-framework-on-top-of-the-symfony2-components-part-1.html" rel="nofollow">Create Your Own PHP Framework</a> - 一部Fabien Potencier的关于如何创建你自己的PHP框架的系列文章</li>
<li><a href="https://blog.ircmaxell.com/2013/08/dont-worry-about-breach.html" rel="nofollow">Don't Worry About BREACH</a> - 一篇关于BREACH攻击和CSRF令牌的文章</li>
<li><a href="http://fabien.potencier.org/on-php-5-3-lambda-functions-and-closures.html" rel="nofollow">On PHP 5.3, Lambda Functions and Closures</a> - 一篇关于lambda函数和闭包的文章</li>
<li><a href="http://fabien.potencier.org/php-is-much-better-than-you-think.html" rel="nofollow">PHP Is Much Better Than You Think</a> - 一篇关于PHP语言和生态圈的文章</li>
<li><a href="http://phppackagechecklist.com/" rel="nofollow">PHP Package Checklist</a> - 一个成功PHP包开发的清单</li>
<li><a href="https://blog.ircmaxell.com/2012/04/php-sucks-but-i-like-it.html" rel="nofollow">PHP Sucks! But I Like It!</a> - 一篇关于PHP利弊的文章</li>
<li><a href="https://blog.ircmaxell.com/2013/02/preventing-csrf-attacks.html" rel="nofollow">Preventing CSRF Attacks</a> - 一篇阻止CSRF攻击的文章</li>
<li><a href="https://blog.ircmaxell.com/2012/12/seven-ways-to-screw-up-bcrypt.html" rel="nofollow">Seven Ways to Screw Up BCrypt</a> - 一篇关于纠正BCrypt实现的文章</li>
<li><a href="https://paragonie.com/blog/2017/12/2018-guide-building-secure-php-software" rel="nofollow">The 2018 Guide to Building Secure PHP Software</a> - 一份建立安全PHP软件的指南</li>
<li><a href="https://seancoates.com/blogs/use-env/" rel="nofollow">Use Env</a> - 一篇关于使用unix环境帮助的文章</li>
</ul>
<h2><a id="user-content-php内核阅读-php-internals-reading" class="anchor" aria-hidden="true" name="php内核阅读-php-internals-reading"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>PHP内核阅读 PHP Internals Reading</h2>
<p><em>阅读PHP内核或性能相关的资料</em></p>
<ul>
<li><a href="http://nikic.github.io/2012/01/09/Disproving-the-Single-Quotes-Performance-Myth.html" rel="nofollow">Disproving the Single Quotes Myth</a> - 一篇关于单，双引号字符串性能的文章</li>
<li><a href="http://nikic.github.io/2011/12/12/How-big-are-PHP-arrays-really-Hint-BIG.html" rel="nofollow">How Big Are PHP Arrays (And Values) Really?</a> - 一篇关于数组原理的文章</li>
<li><a href="https://stackoverflow.com/questions/10057671/how-does-php-foreach-actually-work/14854568#14854568" rel="nofollow">How Foreach Works</a> - StackOverflow关于foreach回答的详情</li>
<li><a href="http://blog.golemon.com/2006/06/how-long-is-piece-of-string.html" rel="nofollow">How Long is a Piece of String</a> - 一篇关于字符串原理的文章</li>
<li><a href="https://gist.github.com/nikic/6699370">PHP Evaluation Order</a> - 一篇关于PHP评估顺序的文章</li>
<li><a href="http://www.phpinternalsbook.com" rel="nofollow">PHP Internals Book</a> - 一本由三名核心开发编写的关于PHP内核的在线书</li>
<li><a href="https://wiki.php.net/rfc" rel="nofollow">PHP RFCs</a> - PHP RFCs主页(请求注解)</li>
<li><a href="http://fabien.potencier.org/print-vs-echo-which-one-is-faster.html" rel="nofollow">Print vs Echo, Which One is Faster?</a> - 一篇关于打印和echo性能的文章</li>
<li><a href="http://fabien.potencier.org/the-php-ternary-operator-fast-or-not.html" rel="nofollow">The PHP Ternary Operator. Fast or Not?</a> - 一篇关于三元操作性能的文章</li>
<li><a href="http://blog.golemon.com/2008/01/understanding-opcodes.html" rel="nofollow">Understanding OpCodes</a> - 一篇关于opcodes的文章</li>
<li><a href="http://nikic.github.io/2011/11/11/PHP-Internals-When-does-foreach-copy.html" rel="nofollow">When Does Foreach Copy?</a> - 一篇关于foreach原理的文章</li>
<li><a href="https://gist.github.com/nikic/5015323">Why Objects (Usually) Use Less Memory Than Arrays</a> - 一篇关于对象和数组原理的文章</li>
<li><a href="http://blog.golemon.com/2007/01/youre-being-lied-to.html" rel="nofollow">You're Being Lied To</a> - 一篇关于内核ZVALs的文章</li>
</ul>
<h2><a id="user-content-php杂志-php-magazines" class="anchor" aria-hidden="true" name="php杂志-php-magazines"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>PHP杂志 PHP Magazines</h2>
<p><em>有趣的PHP相关的杂志</em></p>
<ul>
<li><a href="https://www.phparch.com/magazine/" rel="nofollow">php[architect]</a> - 一个致力于PHP的月更的杂志</li>
</ul>
</article>
      </div>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[YAML基础语法手册以及和JSON的对照]]></title>
        <id>https://i.plbear.com/post/yaml</id>
        <link href="https://i.plbear.com/post/yaml">
        </link>
        <updated>2019-08-05T13:44:18.000Z</updated>
        <content type="html"><![CDATA[<div class="article_body" id="nei">
            <div>
  <p>
    <a href="http://yaml.org/" target="_blank" rel="nofollow,noindex">YAML</a>
全名 YAML Ain’t Markup Language，主要设计目标是对人类可读性高。    <a href="http://yaml.org/spec/1.2/spec.html" target="_blank" rel="nofollow,noindex">YAML 1.2</a>
是 JSON 的超集，也就是说合法的 JSON 扔给 YAML 1.2 解析器是可以被完美解析的。YAML 集 JSON 和 XML 等各种标记语言之长，进行了扩展强化，功能全面也很易读，很多的系统采用它作为配置文件的格式。  </p>
  <h2>示例  </h2>
  <div>
    <div>
      <pre class="prettyprint hljs less"><span class="hljs-attribute">fruits</span>:
  - <span class="hljs-attribute">apple1</span>: 
      <span class="hljs-attribute">color</span>: red
  - <span class="hljs-attribute">apple2</span>: 
      <span class="hljs-attribute">color</span>: green
  - pear
</pre>
    </div>
  </div>
  <p>上面的 YAML 等同于 JSON：</p>
  <div>
    <div>
      <pre class="prettyprint hljs json">{
  <span class="hljs-attr">"fruits"</span>: [
    {
      <span class="hljs-attr">"apple1"</span>: {
        <span class="hljs-attr">"color"</span>: <span class="hljs-string">"red"</span>
      }
    }, 
    {
      <span class="hljs-attr">"apple2"</span>: {
        <span class="hljs-attr">"color"</span>: <span class="hljs-string">"green"</span>
      }
    }, 
    <span class="hljs-string">"pear"</span>
  ]
}
</pre>
    </div>
  </div>
  <p>是不是看上去简洁了很多，也更容易阅读很多？</p>
  <h2>YAML 的基本结构  </h2>
  <h2>缩进符  </h2>
  <p>YAML 的缩进只能用空格而不能用 tab，一个主要的原因是不同的系统对 tab 的处理不完全一致（比如有的系统把 tab 处理成 4 个空格，有的系统把 tab 处理成 8 个空格）。好在现代的文本编辑器基本都支持把 tab 转换成指定数量的空格。</p>
  <p>YAML 里的元素都是用缩进来匹配层级关系的，简单说就是缩进相同的都是同级元素，缩进比上一个元素长就是上一个元素的子元素。</p>
  <p>具体的例子如下：</p>
  <div>
    <div>
      <pre class="prettyprint hljs yaml"><span class="hljs-attr">- apple1:</span>
<span class="hljs-attr">  color:</span> red
<span class="hljs-attr">- apple2:</span>
<span class="hljs-attr">    color:</span> green
</pre>
    </div>
  </div>
  <p>对应的 JSON：</p>
  <div>
    <div>
      <pre class="prettyprint hljs json">[
  {
    <span class="hljs-attr">"color"</span>: <span class="hljs-string">"red"</span>, 
    <span class="hljs-attr">"apple1"</span>: <span class="hljs-literal">null</span>
  }, 
  {
    <span class="hljs-attr">"apple2"</span>: {
      <span class="hljs-attr">"color"</span>: <span class="hljs-string">"green"</span>
    }
  }
]
</pre>
    </div>
  </div>
  <p>请自行体会，我就不展开了。为了方便理解说一下前面的 YAML 等同于：</p>
  <div>
    <div>
      <pre class="prettyprint hljs yaml"><span class="hljs-bullet">-</span>
<span class="hljs-attr">  apple1:</span>
<span class="hljs-attr">  color:</span> red
<span class="hljs-bullet">-</span>
<span class="hljs-attr">  apple2:</span>
<span class="hljs-attr">    color:</span> green
</pre>
    </div>
  </div>
  <h2>分隔符  </h2>
  <p>
只要不是行首的缩进符，其它地方的词法分隔符是可以用各种 white space 字符的。但是要注意这是 YAML 1.2 的规则，在 YAML 1.1 里还是严禁用 tab 作分隔符的。我认为 YAML 1.2 做出这样的更改主要也是为了兼容 JSON。目前解析 YAML 的大部分库还是仅支持 YAML 1.1，所以为了兼容性，    <strong>分隔符最好还是不要用 tab</strong>
。  </p>
  <h2>注释  </h2>
  <p>YAML 使用 “#” 来进行注释，”#” 及在其之后的当行内容将被忽略。注意 “#” 如果跟在别的元素后面，和元素之间需要用 white space 字符隔开。</p>
  <h2>多行文本的种种  </h2>
  <p>
说起来会絮絮叨叨的，懒得说了……请自行看    <a href="http://yaml.org/spec/1.2/spec.html#Basic" target="_blank" rel="nofollow,noindex">官网文档</a>
。  </p>
  <h2>YAML 的纯量（Scalar）  </h2>
  <p>这就是大部分语言里的基础类型，YAML 里常用的纯量有以下类型：</p>
  <h2>null  </h2>
  <p>
    <code>~</code>
/    <code>null</code>
/    <code>Null</code>
/    <code>NULL</code>
还有空字符都被解析成 null 类型，最标准的写法是    <code>~</code>
。  </p>
  <h2>bool  </h2>
  <p>
最新标准里    <code>y</code>
/    <code>Y</code>
/    <code>yes</code>
/    <code>Yes</code>
/    <code>YES</code>
/    <code>n</code>
/    <code>N</code>
/    <code>no</code>
/    <code>No</code>
/    <code>NO</code>
/    <code>true</code>
/    <code>True</code>
/    <code>TRUE</code>
/    <code>false</code>
/    <code>False</code>
/    <code>FALSE</code>
/    <code>on</code>
/    <code>On</code>
/    <code>ON</code>
/    <code>off</code>
/    <code>Off</code>
/    <code>OFF</code>
全部都会被解析成正确的 bool 类型，为了兼容性比较好建议用    <code>true</code>
和    <code>false</code>
。  </p>
  <p>举个例子，我使用的在线解析器解析如下 YAML：</p>
  <div>
    <div>
      <pre class="prettyprint hljs markdown"><span class="hljs-bullet">- </span>on
<span class="hljs-bullet">- </span>On
<span class="hljs-bullet">- </span>no
<span class="hljs-bullet">- </span>No
<span class="hljs-bullet">- </span>n
<span class="hljs-bullet">- </span>N
</pre>
    </div>
  </div>
  <p>解析出的 JSON：</p>
  <div>
    <div>
      <pre class="prettyprint hljs json">[
  <span class="hljs-literal">true</span>, 
  <span class="hljs-literal">true</span>, 
  <span class="hljs-literal">false</span>, 
  <span class="hljs-literal">false</span>, 
  <span class="hljs-string">"n"</span>, 
  <span class="hljs-string">"N"</span>
]
</pre>
    </div>
  </div>
  <h2>int  </h2>
  <p>很常规就不多介绍了，YAML 支持 8 进制和 16 进制格式的数据，甚至 2 进制和 60 进制。</p>
  <h2>float  </h2>
  <p>
支持常规的浮点数，支持科学计数法，还支持无穷大和 NaN。详情可以参考    <a href="http://yaml.org/type/float.html" target="_blank" rel="nofollow,noindex">tag:yaml.org,2002:float</a>
。  </p>
  <h2>str  </h2>
  <p>大部分情况下，YAML 里的字串是不需要带引号的，某些容易引起解析歧义的字串可以用引号括起来。</p>
  <p>示例 YAML：</p>
  <div>
    <div>
      <pre class="prettyprint hljs ruby">- a b c
- <span class="hljs-string">"a\n\x20b"</span>
- <span class="hljs-string">'a\n\x20b'</span>
- <span class="hljs-string">"'\""</span>
- <span class="hljs-string">''</span><span class="hljs-string">'"'</span>
- <span class="hljs-number">123</span> <span class="hljs-comment"># 有歧义，会被解析成 int</span>
- <span class="hljs-string">'123'</span>
- yes <span class="hljs-comment"># 有歧义，会被解析成 bool</span>
- <span class="hljs-string">'yes'</span>
- <span class="hljs-symbol">a:</span> b <span class="hljs-comment"># 有歧义，会被解析成 map</span>
- <span class="hljs-string">'a: b'</span>
</pre>
    </div>
  </div>
  <p>对应 JSON：</p>
  <div>
    <div>
      <pre class="prettyprint hljs json">[
  <span class="hljs-string">"a b c"</span>, 
  <span class="hljs-string">"a\n b"</span>, 
  <span class="hljs-string">"a\\n\\x20b"</span>, 
  <span class="hljs-string">"'\""</span>, 
  <span class="hljs-string">"'\""</span>, 
  <span class="hljs-number">123</span>, 
  <span class="hljs-string">"123"</span>, 
  <span class="hljs-literal">true</span>, 
  <span class="hljs-string">"yes"</span>, 
  { <span class="hljs-attr">"a"</span>: <span class="hljs-string">"b"</span> }, 
  <span class="hljs-string">"a: b"</span>
]
</pre>
    </div>
  </div>
  <p>
顺带说明下双引号会对转义符进行操作，而单引号不会。双引号内包含双引号可以用    <code>\"</code>
来表示，单引号内包含单引号可以用    <code>''</code>
来表示。  </p>
  <h2>其它纯量  </h2>
  <p>
其它纯量是很不常用的类型，可以自行查阅(官方文档)[    <a href="http://yaml.org/type/]。" target="_blank" rel="nofollow,noindex">http://yaml.org/type/]。</a>
  </p>
  <h2>类型强转  </h2>
  <p>另外要提一点，YAML 支持类型强转：</p>
  <div>
    <div>
      <pre class="hljs markdown"><span class="hljs-bullet">- </span>123
<span class="hljs-bullet">- </span>!!str 123
</pre>
    </div>
  </div>
  <p>对应 JSON：</p>
  <div>
    <div>
      <pre class="prettyprint hljs json">[
  <span class="hljs-number">123</span>, 
  <span class="hljs-string">"123"</span>
]
</pre>
    </div>
  </div>
  <h2>字典（Mapping）和数组（Sequence）  </h2>
  <h2>基本用法  </h2>
  <p>字典：</p>
  <div>
    <div>
      <pre class="hljs http"><span class="hljs-attribute">a</span>: b
<span class="hljs-attribute">c</span>: d
</pre>
    </div>
  </div>
  <p>对应 JSON：</p>
  <div>
    <div>
      <pre class="prettyprint hljs json">{
  <span class="hljs-attr">"a"</span>: <span class="hljs-string">"b"</span>, 
  <span class="hljs-attr">"c"</span>: <span class="hljs-string">"d"</span>
}
</pre>
    </div>
  </div>
  <p>数组：</p>
  <div>
    <div>
      <pre class="hljs markdown"><span class="hljs-bullet">- </span>a
<span class="hljs-bullet">- </span>b
</pre>
    </div>
  </div>
  <p>对应 JSON：</p>
  <div>
    <div>
      <pre class="prettyprint hljs json">[
  <span class="hljs-string">"a"</span>, 
  <span class="hljs-string">"b"</span>
]
</pre>
    </div>
  </div>
  <h2>嵌套使用  </h2>
  <p>字典的 value 为数组：</p>
  <div>
    <div>
      <pre class="prettyprint hljs makefile"><span class="hljs-section">a:</span>
  - b
  - c
<span class="hljs-section">d:</span>
  - e
  - f
</pre>
    </div>
  </div>
  <p>对应 JSON：</p>
  <div>
    <div>
      <pre class="prettyprint hljs json">{
  <span class="hljs-attr">"a"</span>: [
    <span class="hljs-string">"b"</span>, 
    <span class="hljs-string">"c"</span>
  ], 
  <span class="hljs-attr">"d"</span>: [
    <span class="hljs-string">"e"</span>, 
    <span class="hljs-string">"f"</span>
  ]
}
</pre>
    </div>
  </div>
  <p>数据的元素为字典：</p>
  <div>
    <div>
      <pre class="hljs yaml"><span class="hljs-bullet">-</span>
<span class="hljs-attr">  a:</span> b
<span class="hljs-attr">- d:</span> e
</pre>
    </div>
  </div>
  <p>对应 JSON：</p>
  <div>
    <div>
      <pre class="prettyprint hljs json">[
  {
    <span class="hljs-attr">"a"</span>: <span class="hljs-string">"b"</span>
  }, 
  {
    <span class="hljs-attr">"d"</span>: <span class="hljs-string">"e"</span>
  }
]
</pre>
    </div>
  </div>
  <h2>类 JSON 的行内写法  </h2>
  <p>数组有一种类似 JSON 的写法，可以完成行内数组的功能，当然和 JSON 一样写成多行的也可以：</p>
  <div>
    <div>
      <pre class="hljs json">[a, b]
</pre>
    </div>
  </div>
  <p>对应 JSON：</p>
  <div>
    <div>
      <pre class="prettyprint hljs json">[
  <span class="hljs-string">"a"</span>, 
  <span class="hljs-string">"b"</span>
]
</pre>
    </div>
  </div>
  <p>字典也可以用类似 JSON 的方法写成行内的：</p>
  <div>
    <div>
      <pre class="hljs css">{<span class="hljs-attribute">a</span>: b}
</pre>
    </div>
  </div>
  <p>对应 JSON：</p>
  <div>
    <div>
      <pre class="prettyprint hljs json">{
  <span class="hljs-attr">"a"</span>: <span class="hljs-string">"b"</span>
}
</pre>
    </div>
  </div>
  <h2>引用  </h2>
  <p>引用是 YAML 的一个很方便的高级语法，示例如下：</p>
  <div>
    <div>
      <pre class="prettyprint hljs yaml"><span class="hljs-attr">name:</span> &amp;name Jason
<span class="hljs-attr">relation:</span>
<span class="hljs-bullet">  -</span> <span class="hljs-meta">&amp;info</span>
<span class="hljs-attr">    name:</span> Sara
<span class="hljs-attr">    age:</span> <span class="hljs-number">23</span>
<span class="hljs-attr">  - name:</span> <span class="hljs-meta">*name</span>
<span class="hljs-attr">    age:</span> <span class="hljs-number">25</span>
<span class="hljs-attr">    wife:</span> <span class="hljs-meta">*info</span>
</pre>
    </div>
  </div>
  <p>解析出的对应 JSON：</p>
  <div>
    <div>
      <pre class="prettyprint hljs json">{
  <span class="hljs-attr">"relation"</span>: [
    {
      <span class="hljs-attr">"age"</span>: <span class="hljs-number">23</span>, 
      <span class="hljs-attr">"name"</span>: <span class="hljs-string">"Sara"</span>
    }, 
    {
      <span class="hljs-attr">"age"</span>: <span class="hljs-number">25</span>, 
      <span class="hljs-attr">"name"</span>: <span class="hljs-string">"Jason"</span>, 
      <span class="hljs-attr">"wife"</span>: {
        <span class="hljs-attr">"age"</span>: <span class="hljs-number">23</span>, 
        <span class="hljs-attr">"name"</span>: <span class="hljs-string">"Sara"</span>
      }
    }
  ], 
  <span class="hljs-attr">"name"</span>: <span class="hljs-string">"Jason"</span>
}
</pre>
    </div>
  </div>
  <p>
可以看到基本的规则就是用    <code>&amp;</code>
声明一个引用，然后在其他地方用    <code>*</code>
进行展开，有点像 c 语言的指针操作。  </p>
  <p>
引用的部分就是在    <code>&amp;</code>
之后的整个子元素，上面例子里    <code>&amp;name</code>
引用的是    <code>Jason</code>
，而    <code>&amp;info</code>
引用的是：  </p>
  <div>
    <div>
      <pre class="hljs http"><span class="hljs-attribute">name</span>: Sara
<span class="hljs-attribute">age</span>: 23
</pre>
    </div>
  </div>
  <p>在后面使用对应的名称展开后就得到了最终的 JSON 内容。</p>
</div>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[运维的生活中常见的Nginx规则]]></title>
        <id>https://i.plbear.com/post/nginx-rule</id>
        <link href="https://i.plbear.com/post/nginx-rule">
        </link>
        <updated>2019-08-01T14:24:47.000Z</updated>
        <content type="html"><![CDATA[<div><h1><strong>1. 概述</strong></h1><p>大家都知道Nginx有很多功能模块，比如反向代理、缓存等，这篇文章总结下我们这些年实际环境中那些有用的Nginx规则和模块，大部分是用法的概括及介绍，具体细节在实际配置时再自行google。</p><h1><strong>2. 内置语法</strong></h1><p>先介绍Nginx默认已支持的内置功能，靠这些基本就满足大部分的web服务需求。</p><h1><strong>2.1 proxy代理</strong></h1><p>proxy常用于两类应用场景，一类是中转，如异地科学的上网方式，另外一类是到后端服务的负载均衡方案。</p><p>用反向代理时候，需要特别注意里面的域名默认是在nginx启动时候就解析了，除非reload否则一直用的是当初解析的域名，也就是说不能动态解析。</p><p>但这个问题是可以通过别的模块或者用内置字典变量方式来解决。</p><pre>resolver 114.114.114.114;<br>server {<br> location / {<br> set $servers github.com;<br> proxy_pass http://$servers;<br> }<br>}<br></pre><h1><strong>2.1.1 中转</strong></h1><p>针对某个域名进行中转：</p><pre>server {<br>listen 172.16.10.1:80;<br> server_name pypi.python.org;<br> location ~ /simple {<br> proxy_set_header Host $http_host;<br> proxy_redirect off;<br> proxy_pass http://pypi.python.org;<br> }<br>}<br></pre><p>注意如果是前后端域名不一样的话需要处理proxy_redirect的301跳转之类的显示，否则在跳转时候会跳转到proxy_pass的域名。</p><p>另外可以直接代理所有80端口的http流量：</p><pre>server {<br> listen 80;<br> server_name _;<br> resolver 114.114.114.114;<br> set $URL $host;<br> location / {<br> proxy_pass http://$URL;<br> }<br>}<br></pre><p>如果是想代理https的站点也不是不可能，只是需要自行处理CA证书导入即可，而且经过https中转的流量对nginx是透明的，也就是有证书的时候做窃听和劫持的情况。</p><h1><strong>2.1.2 负载均衡</strong></h1><p>这是代理的另外一个常见用法，通过upstream到多个后端，可以通过weight来调节权重或者backup关键词来指定备份用的后端，通常默认就可以 了，或者可以指定类似ip_hash这样的方式来均衡，配置很简单，先在http区域添加upstream定义：</p><pre>upstream backend {<br> ip_hash;<br> server backend1.example.com weight=5;<br> server backend2.example.com weight=5;;<br>}<br></pre><p>然后在server里面添加proxy_pass：</p><pre>location / {<br> proxy_pass http://backend;<br> proxy_http_version 1.1;<br> proxy_set_header Connection "";<br>}<br></pre><p>做负载均衡的时候可以智能识别后端服务器状态，虽然可以智能地proxy_next_upstream到另外的后端，但还是会定期损失一些正常的“尝试性”的连接，比如过了max_fails 次尝试之后，休息fail_timeout时间，过了这个时间之后又会去尝试，这个时候可以使用第三方的upstream_check模块来在后台定期地自动探索，类似这样：</p><pre>check interval=3000 rise=2 fall=5 timeout=2000 type=http;<br></pre><p>这样替代用户正常的连接来进行尝试的方式进一步保障了高可用的特性。</p><p>还有就是在做前端代理的时候也是这样的方式，直接proxy_pass到后端即可，比如CDN的场景。</p><h1><strong>2.2 防盗链</strong></h1><p>普通的防盗链是通过referer来做，比如：</p><pre>location ~* \.(gif|jpg|png|bmp)$ {<br> valid_referers none blocked *.example.com server_names ~\.google\. ~\.baidu\.;<br> if ($invalid_referer) {<br> return 403;<br> }<br>}<br></pre><p>再精细一点的就是URL加密，针对一些用户IP之类的变量生成一个加密URL通常是针对文件下载时候用到，可以通过openresty来写lua脚本或者是accesskey之类的模块来实现。</p><h1><strong>2.3 变量</strong></h1><p>nginx里面支持正则匹配和变量配置，默认的变量比如remote_addr、request_filename、query_string、server_name之类的，这些组合在一起可以做很多规则，或者还有日志里面status、http_cookie等。</p><p>还有在进行多域名配置时候可以用通配符，比如：</p><pre>server_name ~^(www\.)?(.+)$;<br>root /data/web/$2;<br></pre><p>这样就实现了自动进行域名的目录指派。</p><p>变量方面，比如配置变量a=1：</p><pre>set $a 1;<br></pre><p>下面这个案例配合if判断来做有更大的用处。</p><h1><strong>2.4 if判断</strong></h1><p>nginx里面支持一些简单的if判断，但是没有多重逻辑的语法，多个判断条件用起来需要结合变量的方式来实现，比如允许ip地址为10.10.61段和和192.168.100段的用户访问，其余的拒绝，返回405状态码：</p><pre>set $err 0;<br> if ( $remote_addr ~ 10.10.61.){<br> set $err 0;<br> }<br> if ( $remote_addr ~ 192.168.100.){<br> set $err 0;<br> }<br> if ( $err = 1){<br> return 405;<br> }<br></pre><p>这样通过一个err变量比较巧妙实现了需求。</p><h1><strong>2.5 error_page</strong></h1><p>有用到后端proxy的地方需要加上这句话才可以传到状态码到nginx：</p><pre>fastcgi_intercept_errors on;<br></pre><p>具体配置一般是配置到具体的错误URL页面，比如：</p><pre>#返回具体状态码<br>error_page 404 403 /4xx.html<br>#返回200状态码<br>error_page 404 403 =200 /error.html<br></pre><p>或者采用callback的方式统一做处理：</p><pre>error_page 404 403 = @fallback; <br>location @fallback {<br> proxy_pass http://backend;<br> access_log /data/logs/404_error.log access;<br>}<br></pre><p>这样在重定向时不会改变URL，然后把404页面直接返回。</p><h1><strong>2.6 rewrite</strong></h1><p>rewrite做一些301、302之类的跳转，同时也可以在CDN前端做“去问号”缓存的效果。</p><pre>location /db.txt {<br> rewrite (.*) $1? break;<br> include proxy.conf;<br>}<br></pre><p>另外最常见的跳转写法：</p><pre>rewrite ^/game/(.*) /$1;<br></pre><p>把/game/test跳转为/test的效果，注意这样是没有状态码的，如果访问正常就直接返回200状态码。</p><p>可以在后面加个permanent参数，就变为了301 Moved Permanently，或者添加redirect改为302跳转。</p><p>同理，还可以进行多个正则匹配进行URL重组，比如：</p><pre>rewrite ^/download/(.*)/lastest/(.*)$ /file/$1?ver=$2 break;<br></pre><h1><strong>2.7 日志字段</strong></h1><p>想针对每个连接进行日志留档，可以在nginx日志那里配置好字段，比如记录cookie之类的数据。</p><p>在log_format字段里面加入$http_cookie变量即可。</p><p>另外post的数据可以永久保留在文件里面，比如用来做http的日志备份，包括get和post的原始数据，把这个值开启即可：</p><pre>client_body_in_file_only on;<br></pre><p>然后post的数据就会保存在nginx/client_body_temp文件夹里面。</p><h1><strong>2.8 internal关键词</strong></h1><p>这个关键词很少见，但有时候是很有用的，比如在有很多规则时候，突然需要针对某个目录转为nginx内部处理。</p><pre>location ^~ /upload/down/ {<br>alias /data/web/dts/dtsfile/down/;<br>internal;<br>}<br></pre><h1><strong>2.9 try_files</strong></h1><p>字面意思是尝试，后面可以接多个目录或者文件，比如kohana框架：</p><pre>try_files $uri /index.php?$query_string;<br></pre><p>先看是否有URL这个文件，没有的话再调用index.php来处理，或者支持状态码处理：</p><pre>try_files /foo /bar/ =404;<br></pre><p>没有这两个文件的话返回404状态。</p><h1><strong>2.10 auth认证</strong></h1><p>可以做简单的用户登录认证方式，其中的passwd_file得通过apache的htpasswd命令来生成。</p><pre>auth_basic "Restricted";<br>auth_basic_user_file passwd_file;<br></pre><p>认证通过之后每次访问会在头部添加Authorization字段包含用户名密码的base64加密密文给服务端。</p><h1><strong>2.11 gzip</strong></h1><p>普通的线上web站点gzip压缩是必须要开的，压缩一些文本类型的文件再返回给用户。</p><p>注意必须手动指定全需要压缩的类型，比如css、js之类的，线上配置如下：</p><pre>gzip on;<br>gzip_min_length 2048;<br>gzip_buffers 4 16k;<br>gzip_vary on;<br>gzip_http_version 1.1;<br>gzip_types text/plain text/css text/xml application/xml application/javascript application/x-javascript ;<br></pre><h1><strong>2.12 mime配置</strong></h1><p>很久以前基本是忽略这个配置，但手游流行之后就发现异常了，需要让手机浏览器知道返回的apk后缀是什么类型，否则类似IE浏览器会以zip后缀返回，需要加上：</p><pre>application/vnd.android.package-archive apk;<br>application/iphone pxl ipa;<br></pre><h1><strong>2.13 限速</strong></h1><p>限速包括限制请求的并发数和请求的下载速度。</p><p>简单的限制某个线程的下载速度就直接加上一句话就可以了：</p><pre>limit_rate 1024k;<br></pre><p>要限制某个IP的并发数之类的就需要用ngx_http_limit_req_module和ngx_http_limit_conn_module模块了，不过是默认就编译好的。</p><p>比如使用一个 10M 大小的状态缓存区，针对每个IP每秒只接受20次的请求：</p><pre>limit_req_zone $binary_remote_addr zone=NAME:10m rate=20r/s;<br></pre><h1><strong>2.14 location匹配</strong></h1><p>location匹配有多种方式，常见的比如</p><pre>location = / <br>location / <br>location ^~ /test{<br></pre><p>是有优先级的，直接 ”=” 的优先级是最高的，一般就用”~”这个符号来匹配php就好了，不过是区分了大小写的：</p><pre>location ~ .*\.php$<br></pre><h1><strong>2.15 文件缓存</strong></h1><p>返回给用户的文件一般都配置了过期时间，让浏览器缓存起来。</p><p>比如缓存14天：</p><pre>expires 14d;<br></pre><p>针对某些特殊的文件就需要location匹配之后进行禁止缓存配置：</p><pre>add_header Cache-Control no-cache;<br>add_header Cache-Control no-store;<br>expires off;<br></pre><h1><strong>2.16 缓存文件</strong></h1><p>nginx可以作为ATS这样的缓存服务器来缓存文件，配置也比较简单，不过我们很少用，除非一些特殊的场合，参考配置：</p><pre>#先在全局下面定义好缓存存放的目录<br>proxy_cache_path /data/cache/ levels=1:2 keys_zone=cache_one:10m inactive=7d max_size=10g;<br>proxy_temp_path /data/cache/proxy_temp_path;<br>proxy_cache_key $host$uri$is_args$args;<br>#然后在server里面的location匹配好目的文件，加入下一段即可<br>proxy_cache cache_one;<br>proxy_cache_valid 200 304 24h;<br>proxy_cache_valid any 10m;<br>proxy_pass https://$host;<br>proxy_cache_key $host$uri$is_args$args;<br>add_header Nginx-Cache "$upstream_cache_status"; 3. 内置模块<br></pre><h1><strong>3. 内置模块</strong></h1><p>nginx含有大量的模块可以支持多种复杂的需求，比如源码目录src/http/modules里面就有很多c模块的代码，或者直接通过./configure –help|grep module来查看有哪些内置模块，编译时候直接加上就可以了。</p><p>除了nginx内置的模块，网络上还有很多第三方的模块，可以通过编译时候加参数–add-module=PATH指定模块源码来编译。</p><p>下面介绍一些我们线上用过而且比较赞的内置模块。</p><h1><strong>3.1 stream</strong></h1><p>端口转发的模块，从nginx1.9版本才开始支持，包含tcp和udp的支持，和IPTABLES相比这个虽然是应用层，会监听端口，但是配置起来很方便，比IPTABLES灵活，在tcp模块下面添加类似vhost的server就可以了，方便自动化管理，参考配置：</p><pre>server {<br> listen PORT;<br> proxy_pass IP:PORT;<br> access_log /data/logs/tcp/PORT.log;<br>}<br></pre><h1><strong>3.2 http_realip_module</strong></h1><p>nginx反向代理之后，如何让后端web直接获取到的IP不是反向代理的iP，而是直接获取到用户的真实IP呢，就需要这个模块了，不需要代码那里再做类似X-Real-IP的变量特殊判断。</p><h1><strong>3.3 http_slice_module</strong></h1><p>在做CDN时候可以用到，让一个大文件分片，分成多个小文件通过206断点续传到后端，然后再组合起来，避免大文件直接回源导致多副本和多次回源的问题。</p><h1><strong>3.4 http_secure_link_module</strong></h1><p>前面说到的防盗链可以用这个来做，但是这个一般是针对那种文件下载时候用到的，比如从网页下载时候，服务端生成一个加密URL给用户，然后这个URL有过期时间之类的，避免此URL被多次分享出去，不过普通的素材加载还是用普通的防盗链即可。</p><h1><strong>3.5 http_sub_module</strong></h1><p>替换响应给用户的内容，相对于sed之后再返回，比如可以在需要临时全局修改网站背景或者title时候可以一次性处理好。</p><h1><strong>4. 扩展项目</strong></h1><p>简单介绍下大名鼎鼎的两个基于nginx的扩展项目，也是我们线上有很多地方用到的。</p><h1><strong>4.1 openresty</strong></h1><p>集成lua脚本，几乎可以完成任何普通web相关的需求。</p><p>比如URL加密进行防劫持和防盗链，服务端动态生成一串aes加密的URL给CDN，CDN的openresty解密之后用普通的URL转发到后端，然后再返回给用户正确的内容。</p><h1><strong>4.2 tengine</strong></h1><p>淘宝的nginx修改版，实现了很多nginx的收费功能或者是特殊功能，比如动态加载、concat合并请求，动态解析等。</p></div>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[MySQL表分区（partition）创建、查询、删除以及重建分区等等操作]]></title>
        <id>https://i.plbear.com/post/mysql-partition</id>
        <link href="https://i.plbear.com/post/mysql-partition">
        </link>
        <updated>2019-08-01T14:11:22.000Z</updated>
        <content type="html"><![CDATA[<div><p>下面演示MySQL Range类型分区的操作，其他类型的分区还有Hash、Key、List等等。</p><p>分区优点：</p><p>1. 分区可以分在多个磁盘，存储更大一点。</p><p>2. 根据查找条件，也就是where后面的条件，查找只查找相应的分区不用全部查找了。</p><p>3. 进行大数据搜索时可以进行并行处理。</p><p>4. 跨多个磁盘来分散数据查询，来获得更大的查询吞吐量.</p><h1><strong>1. 创建演示表 tr，设置range 类型分区</strong></h1><blockquote><p>CREATE TABLE tr (id INT, name VARCHAR(50), purchased DATE)</p><p> PARTITION BY RANGE( YEAR(purchased) ) (</p><p> PARTITION p0 VALUES LESS THAN (1990),</p><p> PARTITION p1 VALUES LESS THAN (1995),</p><p> PARTITION p2 VALUES LESS THAN (2000),</p><p> PARTITION p3 VALUES LESS THAN (2005),</p><p> PARTITION p4 VALUES LESS THAN (2010),</p><p> PARTITION p5 VALUES LESS THAN (2015)</p><p>);</p></blockquote><h1><strong>2. 插入演示数据</strong></h1><blockquote><p>INSERT INTO tr VALUES</p><p>(1, 'desk organiser', '2003-10-15'),</p><p>(2, 'alarm clock', '1997-11-05'),</p><p>(3, 'chair', '2009-03-10'),</p><p>(4, 'bookcase', '1989-01-10'),</p><p>(5, 'exercise bike', '2014-05-09'),</p><p>(6, 'sofa', '1987-06-05'),</p><p>(7, 'espresso maker', '2011-11-22'),</p><p>(8, 'aquarium', '1992-08-04'),</p><p>(9, 'study desk', '2006-09-16'),</p><p>(10, 'lava lamp', '1998-12-25');</p></blockquote><p><strong>3. 查询分区 p2中的数据</strong></p><blockquote><p>SELECT * FROM tr</p><p>WHERE purchased BETWEEN '1995-01-01' AND '1999-12-31';</p></blockquote><p>也可以使用分区参数partition 获取相同的信息。</p><h1>SELECT * FROM tr PARTITION (p2);</h1><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/f4140e2646e9492e9ffa88179cc77f81" img_width="587" img_height="250" alt="MySQL表分区（partition）创建、查询、删除以及重建分区等等操作" inline="0"><p class="pgc-img-caption"></p></div><h1><strong>4. 删除分区</strong></h1><p>下面指定删除分区p2，执行如下命令。</p><blockquote><p>ALTER TABLE tr DROP PARTITION p2;</p></blockquote><p>需要注意的是：<strong>当删除一个分区时，分区中的数据也会被删除。</strong></p><p>再次执行前面的SELECT 脚本，没有任何数据返回。</p><blockquote><p>SELECT * FROM tr</p><p>WHERE purchased BETWEEN '1995-01-01' AND '1999-12-31';</p></blockquote><p>返回结果：0 row(s) returned</p><blockquote><p>SELECT * FROM tr PARTITION (p2);</p></blockquote><p>出现异常：Error Code: 1735. Unknown partition 'p2' in table 'tr'</p><h1><strong>5. 查看表tr的分区定义</strong></h1><blockquote><p>SHOW CREATE TABLE tr;</p></blockquote><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/f8cd0de264854e089b8d2d345ed7a06e" img_width="513" img_height="269" alt="MySQL表分区（partition）创建、查询、删除以及重建分区等等操作" inline="0"><p class="pgc-img-caption"></p></div><p>partition p2 已经不存在了。</p><p>现在插入 purchased 列数据在1995-01-01 到 2004-12-31 之间的数据，新的行数据将存储在 partition p3中。</p><blockquote><p>INSERT INTO tr VALUES (11, 'pencil holder', '1995-07-12');</p><p>SELECT * FROM tr WHERE purchased BETWEEN '1995-01-01' AND '2004-12-31';</p><p>select * from tr partition(p3);</p></blockquote><div class="pgc-img"><img src="http://p9.pstatp.com/large/pgc-image/748a57d73a7747f0af24463daac5f7c0" img_width="743" img_height="222" alt="MySQL表分区（partition）创建、查询、删除以及重建分区等等操作" inline="0"><p class="pgc-img-caption"></p></div><h1><strong>6. RANGE 重建分区</strong></h1><p>将原来的 p0,p1 分区合并起来，放到新的 p0 分区中。</p><p>在分区合并之前，先检查一下 p0和p1 分区中的数据。</p><p>select * from tr partition(p0,p1);</p><p>输出结果：3条记录</p><div class="pgc-img"><img src="http://p3.pstatp.com/large/pgc-image/01ba2e3ed4054d9a9d4f4f190d1617dd" img_width="421" img_height="182" alt="MySQL表分区（partition）创建、查询、删除以及重建分区等等操作" inline="0"><p class="pgc-img-caption"></p></div><p>下面进行分区合并操作。</p><p>ALTER TABLE tr REORGANIZE PARTITION p0, p1 INTO (PARTITION p0 VALUES LESS THAN (1995));</p><p>合并操作完成之后，分区 p1 已经不存在了，新的 p0 分区数据记录如下，3条记录。</p><p>select * from tr partition(p0);</p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/2ee35a9b924841ee8aab57323ce53e76" img_width="420" img_height="186" alt="MySQL表分区（partition）创建、查询、删除以及重建分区等等操作" inline="0"><p class="pgc-img-caption"></p></div><p>查看更新后的分区定义，分区p0的范围进行了重新定义。</p><p>SHOW CREATE TABLE tr;</p><div class="pgc-img"><img src="http://p9.pstatp.com/large/pgc-image/52c3a3b52b0b48d59b1511ca65a5e027" img_width="491" img_height="256" alt="MySQL表分区（partition）创建、查询、删除以及重建分区等等操作" inline="0"><p class="pgc-img-caption"></p></div><p>打开MySQL的数据目录，查看分区的表空间文件如下。</p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/8757eccc655e4845aec2b263e6abc1e6" img_width="606" img_height="108" alt="MySQL表分区（partition）创建、查询、删除以及重建分区等等操作" inline="0"><p class="pgc-img-caption"></p></div><h1><strong>7. 子分区</strong></h1><p>子分区是分区表中每个分区的再次分割，子分区既可以使用HASH分区，也可以使用KEY分区。这也被称为复合分区（composite partitioning）。</p><p>子分区的几点注意事项：</p><ul><li>如果一个分区中创建了子分区，其他分区也要有子分区。</li><li>如果创建了子分区，每个分区中的子分区数必有相同。</li><li>同一分区内的子分区，名字不相同，不同分区内的子分区名字可以相同。</li><li>由于分区是RANGE和LIST分区，所以删除分区也是同RANGE和LIST分区一样，这里只能对每个分区进行删除，不能针对每个子分区进行删除操作，删除分区后子分区连同数据一并被删除。</li></ul><p><strong>子分区由两种创建方法：</strong></p><p>一种是不定义每个子分区的名字和路径由分区决定；</p><p>二是定义每个子分区的分区名和各自的路径；</p><p>（1）不定义每个子分区</p><p>表名称：tb_sub</p><blockquote><p>CREATE TABLE tb_sub (id INT, purchased DATE)</p><p> PARTITION BY RANGE( YEAR(purchased) )</p><p> SUBPARTITION BY HASH( TO_DAYS(purchased) )</p><p> SUBPARTITIONS 2 (</p><p> PARTITION p0 VALUES LESS THAN (1990),</p><p> PARTITION p1 VALUES LESS THAN (2000),</p><p> PARTITION p2 VALUES LESS THAN MAXVALUE</p><p> );</p></blockquote><p>分区表空间文件如下。</p><div class="pgc-img"><img src="http://p3.pstatp.com/large/pgc-image/736fdd7f0a9f4f588d85d7bfbccbcf26" img_width="609" img_height="150" alt="MySQL表分区（partition）创建、查询、删除以及重建分区等等操作" inline="0"><p class="pgc-img-caption"></p></div><p>查看系统中表tb_sub 信息：</p><blockquote><p>SELECT PARTITION_NAME,PARTITION_METHOD,PARTITION_EXPRESSION,PARTITION_DESCRIPTION,TABLE_ROWS,SUBPARTITION_NAME,SUBPARTITION_METHOD,SUBPARTITION_EXPRESSION</p><p>FROM information_schema.PARTITIONS</p><p>WHERE TABLE_SCHEMA=SCHEMA() AND TABLE_NAME='tb_sub';</p></blockquote><div class="pgc-img"><img src="http://p3.pstatp.com/large/pgc-image/5b927bdc92f641d9837cec790f803278" img_width="1016" img_height="300" alt="MySQL表分区（partition）创建、查询、删除以及重建分区等等操作" inline="0"><p class="pgc-img-caption"></p></div><p>（2）定义每个子分区</p><p>定义子分区可以为每个子分区定义具体的分区名和分区路径。</p><blockquote><p>CREATE TABLE tb_sub_ev (id INT, purchased DATE)</p><p> PARTITION BY RANGE( YEAR(purchased) )</p><p> SUBPARTITION BY HASH( TO_DAYS(purchased) ) (</p><p> PARTITION p0 VALUES LESS THAN (1990) (</p><p> SUBPARTITION s0,</p><p> SUBPARTITION s1</p><p> ),</p><p> PARTITION p1 VALUES LESS THAN (2000) (</p><p> SUBPARTITION s2,</p><p> SUBPARTITION s3</p><p> ),</p><p> PARTITION p2 VALUES LESS THAN MAXVALUE (</p><p> SUBPARTITION s4,</p><p> SUBPARTITION s5</p><p> )</p><p> );</p></blockquote><p>插入测试记录：</p><blockquote><p>INSERT INTO tb_sub_ev() VALUES(1,'1989-01-01'),(2,'1989-03-19'),(3,'1989-04-19');</p></blockquote><p>从查询结果中，可以看到3条记录分表存储在2个不同的子分区中。</p><div class="pgc-img"><img src="http://p3.pstatp.com/large/pgc-image/9bec9e47cfe9407f9ac5a1350610b12d" img_width="1016" img_height="385" alt="MySQL表分区（partition）创建、查询、删除以及重建分区等等操作" inline="0"><p class="pgc-img-caption"></p></div><p>查看如下查询语言的执行计划：</p><blockquote><p>explain select * from tb_sub where purchased='1989-01-01';</p><p>explain select * from tb_sub where purchased='1989-03-19';</p><p>explain select * from tb_sub where purchased='1989-04-19';</p></blockquote><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/362381940f1c4c6991fba01dc062149a" img_width="808" img_height="114" alt="MySQL表分区（partition）创建、查询、删除以及重建分区等等操作" inline="0"><p class="pgc-img-caption"></p></div><h1><strong>8. 移除表的分区</strong></h1><p>注意：使用remove移除分区是仅仅移除分区的定义，并不会删除数据和drop PARTITION不一样，后者会连同数据一起删除。</p><p>ALTER TABLE tb_sub REMOVE PARTITIONING;</p><p>移除分区之后，再次查询表中的数据，确认表的数据依然存在。</p><div class="pgc-img"><img src="http://p3.pstatp.com/large/pgc-image/ecf5574015af49259b8e3a153455f093" img_width="459" img_height="246" alt="MySQL表分区（partition）创建、查询、删除以及重建分区等等操作" inline="0"><p class="pgc-img-caption"></p></div><p>查看表结构，确认表分区已经成功移除了。</p><p>show create table tb_sub;</p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/2336de35079440b8bded63559396d1b0" img_width="417" img_height="244" alt="MySQL表分区（partition）创建、查询、删除以及重建分区等等操作" inline="0"><p class="pgc-img-caption"></p></div><!----></div>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[微服务架构基于Mycat分库分表及读写分离的配置实战]]></title>
        <id>https://i.plbear.com/post/mycat</id>
        <link href="https://i.plbear.com/post/mycat">
        </link>
        <updated>2019-08-01T13:57:58.000Z</updated>
        <content type="html"><![CDATA[<div><blockquote><p>本文以在线商城系统为主要业务场景，分别定义了用户、商品和订单三个微服务，并实现三个微服务所涉及到的数据库和表的水平拆分、垂直拆分和读写分离的相关配置。</p></blockquote><h1>概念</h1><p>先来看一下本文业务场景中涉及到的数据库表。</p><div class="pgc-img"><img src="http://p9.pstatp.com/large/pgc-image/4ef055d806c046bcb286caf945fb019e" img_width="161" img_height="256" alt="微服务架构基于Mycat分库分表及读写分离的配置实战" inline="0"><p class="pgc-img-caption">单机环境的数据库结构</p></div><p><strong>1、水平拆分</strong></p><p>将同一个表的数据进行分块保存到不同的数据库中，这些数据库中的表结构完全相同。</p><p>我们把数据库水平拆分成三个数据库，每个数据库中的表结构是完全相同的，不同数据库中表的记录条数不同。</p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/6fe8a9205795466886ded8fcdedb0d8e" img_width="519" img_height="544" alt="微服务架构基于Mycat分库分表及读写分离的配置实战" inline="0"><p class="pgc-img-caption">水平拆分后的数据库结构</p></div><p><strong>2、垂直拆分</strong></p><p>按功能模块拆分，比如分为订单库、商品库、用户库...这种方式多个数据库之间的表结构不同。</p><p>按用户库、商品库和订单库实现的不同功能进行垂直拆分。</p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/e00c8023747d430797d51fdf0f5be00d" img_width="591" img_height="449" alt="微服务架构基于Mycat分库分表及读写分离的配置实战" inline="0"><p class="pgc-img-caption">垂直拆分数据库结构</p></div><p><strong>3、读写分离</strong></p><p>读写分离一般来说都是通过主从复制（Master-Slave）的方式来同步数据，再通过读写分离（MySQL-Proxy）来提升数据库的并发负载能力这样的方案来进行部署与实施的。</p><div class="pgc-img"><img src="http://p3.pstatp.com/large/pgc-image/cbd8c22935544d82a243d225f3dc9394" img_width="866" img_height="532" alt="微服务架构基于Mycat分库分表及读写分离的配置实战" inline="0"><p class="pgc-img-caption">数据库读写分离架构</p></div><p><strong>4、Mycat介绍</strong></p><p>首先，Mycat是数据库分库分表中间件。这是Mycat官网（http://mycat.io/）定义的一句话。个人理解它相当于一个数据库的代理，将拆分后的数据库在逻辑上重新封装，对外暴露和未拆分之前是同样的数据库结构。</p><p>按照上面的业务场景，将数据库进行垂直拆分再水平拆分。按三个业务模块进行垂直拆分，在分别水平拆分成3个数据库，最后形成9个数据库。再按一主一从的方式进行读写分离配置，即一共18个数据库。</p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/137595b896e949e7bfd8dd56a9671501" img_width="1336" img_height="809" alt="微服务架构基于Mycat分库分表及读写分离的配置实战" inline="0"><p class="pgc-img-caption">垂直、水平拆分及读写分离架构</p></div><p>1、 不同的微服务连接Mycat中间件。访问对应业务模块的数据库。</p><p>2、 Mycat中的三个数据库在物理上并不存在，是逻辑上的三个数据库。</p><p>3、 Master将三个业务模块的数据库表进行水平拆分，各库中的表结构相同，数据不同。并作为主数据库完成数据的写操作。</p><p>4、 Slave将三个业务模块的数据库表进行水平拆分，各库中的表结构相同，数据不同。并作为从数据库完成数据的读操作。</p><p>5、 Master和Slave实现数据同步操作。</p><h1>Mycat配置</h1><p><strong>概览</strong></p><p>Mycat官网下载1.6.7-release版本解压后的目录结构包括bin、catlet、conf、lib和version.txt。其中conf目录中存放大量的配置文件，其中最主要的是有server.xml、schema.xml和rule.xml三个文件。</p><p><strong>1、server.xml</strong></p><p>server.xml 包含mycat的系统配置信息，它有两个标签，分别是user和system。</p><p>user标签</p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/f45c49c024e74b3a9478f7edeb9b16c7" img_width="970" img_height="466" alt="微服务架构基于Mycat分库分表及读写分离的配置实战" inline="0"><p class="pgc-img-caption">server的user标签</p></div><p>name：user的名称，下面的schema.xml文件中的数据库访问用户名。</p><p>password：访问密码。</p><p>schemas：下面schema.xml文件中的逻辑数据库名称，这里把三个都配置上了，方便操作。</p><p>readOnly：说明此用户只有读权限，没有写权限。上面配置中，如果使用user用户登录，则只能进行读操作。</p><p>system标签：</p><p>这里只着重介绍sequnceHanlderType属性，这里是Mycat主键的生成策略。因为现在是把数据进行了多节点的分片拆分。所以使用主键的自增就会造成主键冲突的问题。</p><p>sequnceHanlderType属性有三个选项。0代表本地文件，1代表数据库方式，2代表时间戳方式。这里可以根据需要自行配置。数据库方式的话需要对dataNode创建一些相关的函数才能使用。本地文件是使用conf/sequence_conf.properties文件内容进行维护的。具体详见该文件的内容。</p><div class="pgc-img"><img src="http://p3.pstatp.com/large/pgc-image/32b7d5cbf1c342c1bf30f8f4f595eed2" img_width="541" img_height="35" alt="微服务架构基于Mycat分库分表及读写分离的配置实战" inline="0"><p class="pgc-img-caption">sequnceHanlderType配置</p></div><p><strong>2、schema.xml</strong></p><p>这里将数据库从逻辑上分为三个，javapupil_user(用户库)、javapupil_goods(商品库)、javapupil_order(订单库)。</p><div class="pgc-img"><img src="http://p3.pstatp.com/large/pgc-image/7c00ec461b08456784e2ae3721443fed" img_width="929" img_height="559" alt="微服务架构基于Mycat分库分表及读写分离的配置实战" inline="0"><p class="pgc-img-caption">schema-table-datanode配置</p></div><p>table配置：</p><p>name：表名。</p><p>primaryKey：表中的主键列名。</p><p>dataNode：数据库表所在的数据节点名称。</p><p>rule：数据插入规则，rule.xml小节中详述。</p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/05401142d526494880bc0f9b56832921" img_width="831" img_height="270" alt="微服务架构基于Mycat分库分表及读写分离的配置实战" inline="0"><p class="pgc-img-caption">dataNode配置</p></div><p>dataNode配置：</p><p>name：数据节点名称。</p><p>dataHost：数据主机名称。下面详述。</p><p>database：数据库名称。</p><div class="pgc-img"><img src="http://p3.pstatp.com/large/pgc-image/5a3f6b863ca14942b764c8559dc1d6ce" img_width="1080" img_height="388" alt="微服务架构基于Mycat分库分表及读写分离的配置实战" inline="0"><p class="pgc-img-caption">dataHost配置</p></div><p>name：dataHost的名称。</p><p>balance：负载均衡类型。</p><p>（1）0不开启读写分离机制，所有读操作都发送到当前可用的writeHost 上。</p><p>（2）全部的 readHost 与 stand by writeHost 参与 select 语句的负载均衡，简单的说，当双主双从模式(M1-&gt;S1，M2-&gt;S2，并且 M1 与 M2 互为主备)，正常情况下，M2,S1,S2 都参与 select 语句的负载均衡。</p><p>（3）balance="2"，所有读操作都随机的在 writeHost、 readhost 上分发。</p><p>（4）balance="3"，所有读请求随机的分发到 wiriterHost 对应的 readhost 执行，writerHost 不负担读压力，注意 balance=3 只在 1.4 及其以后版本有，1.3 没有。</p><p>所以，这里使用1和3都是可以的。</p><p>writeType：</p><p>（1）writeType="0", 所有写操作发送到配置的第一个 writeHost，第一个挂了切到还生存的第二个riteHost，重新启动后已切换后的为准，切换记录在配置文件中:dnindex.properties.</p><p>（2）writeType="1"，所有写操作都随机的发送到配置的 writeHost，1.5 以后废弃不推荐。</p><p>heartbeat：心跳，判断该数据库是否存活。</p><p>writeHost：Master写操作的数据库配置</p><p>readHost：Slave读操作的数据库配置。如果有多个Slave，这里可以配置多个。</p><p><strong>3、rule.xml</strong></p><p>规则配置文件。</p><pre>&lt;table name="user" primaryKey="id" dataNode="dn1,dn2,dn3" rule="mod-long" /&gt;<br></pre><p>rule属性的mod-long在此配置文件中进行设置。这里表示的是“取模”规则。</p><p>rule.xml文件中会找到如下代码：</p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/ec54c97105c443b28c1926bb19416037" img_width="546" img_height="133" alt="微服务架构基于Mycat分库分表及读写分离的配置实战" inline="0"><p class="pgc-img-caption">mod-long配置</p></div><p>columns：表示利用哪个列进行操作，这里是用id列进行操作。这里的id列必须是整型。</p><p>algorithm：表示具体的算法，这里的算法是mod-long。</p><p>那么mod-long是怎么实现的呢：</p><div class="pgc-img"><img src="http://p3.pstatp.com/large/pgc-image/65fc61b83d1b4598975cd44d7cedc0d4" img_width="764" img_height="94" alt="微服务架构基于Mycat分库分表及读写分离的配置实战" inline="0"><p class="pgc-img-caption">实现mod-long的java类</p></div><p>class：io.mycat.route.funciton.PartitionByMod。取模的算法是通过这个类实现的。</p><p>count：表示一共有几个数据节点，这里配置3个，也就是当生成的id与3取模，得到的余数是几就将该条记录插入到哪个数据库中。比如余数是0，就进入dn1中，余数是1就进入dn2中，余数是2就进入dn3中。</p><h1>应用配置</h1><p><strong>1、数据库连接配置</strong></p><p>本例中因为使用了Mycat作为数据库中间件，代理了数据库的分库分表。所以应用程序只需要连接Mycat中的逻辑数据库javapupil_user、javapupil_goods、javapupil_order即可。</p><p>jdbc:mysql://192.168.1.145:8066/javapupil_user</p><p>jdbc:mysql://192.168.1.145:8066/javapupil_ goods</p><p>jdbc:mysql://192.168.1.145:8066/javapupil_order</p><p>注意：Mycat默认的端口是8066。</p><p><strong>2、sql配置</strong></p><p>当程序需要插入数记录时，在insert into中需要加入如下的Sql代码：</p><p>next value for MYCATSEQ_GLOBAL，这里的GLOBAL是在conf/sequence_conf.properties中进行的配置。</p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/57be1f8820844309987b7f329f8eb7c2" img_width="308" img_height="102" alt="微服务架构基于Mycat分库分表及读写分离的配置实战" inline="0"><p class="pgc-img-caption">SEQ_GLOBAL配置</p></div><h1>总结</h1><p>本文着重介绍了基于Mycat的Mysql分库分表及读写分离的配置。使用了垂直和水平相结合的方式对数据库进行拆分。Mycat是一款强大的分库分表的中间件，配置简单，运行稳定。希望本文能给正在研究微服务架构分库分表读写分离的朋友带来一点启发。</p></div>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何写出完美的接口：接口规范定义、接口管理工具推荐]]></title>
        <id>https://i.plbear.com/post/that-is-how-restful-api-workds</id>
        <link href="https://i.plbear.com/post/that-is-how-restful-api-workds">
        </link>
        <updated>2019-07-24T14:09:42.000Z</updated>
        <content type="html"><![CDATA[<div><p> <strong>无规矩不成方圆</strong>，为了开发人员间更好的配合，我特意整理了这么一篇文档供大家参考学习，如有意见、见解，请在评论区留言探讨。</p><p> 接口规范说起来大，其实也就那么几个部分，接口规范、接口管理工具、接口文档编写、开发文档编写。</p><p class="ql-align-justify"><br></p><p><strong>接口规范定义</strong></p><p><strong>一、协议规范</strong></p><p> 为了确保不同系统/模块间的数据交互，需要事先约定好通讯协议，如：TCP、HTTP、HTTPS协议。为了确保数据交互安全，建议使用HTTPS协议。</p><p><strong>二、接口路径规范</strong></p><p> 作为接口路径，为了方便清晰的区分来自不同的系统，可以采用不同系统/模块名作为接口路径前缀。</p><p>格式规范如下：</p><p> 支付模块 /pay/xx</p><p> 订单模块 /order/xx</p><p><strong>三、版本控制规范</strong></p><p> 为了便于后期接口的升级和维护，建议在接口路径中加入版本号，便于管理，实现接口多版本的可维护性。如果你细心留意过的话，你会发现好多框架对外提供的API接口中(如：Eureka)，都带有版本号的。如：接口路径中添加类似"v1"、"v2"等版本号。</p><p>格式规范如下：</p><p> /xx/v1/xx</p><p>更新版本后可以使用v2、v3等、依次递加。</p><p><strong>四、接口命名规范</strong></p><p> 和Java命名规范一样，好的、统一的接口命名规范，不仅可以增强其可读性，而且还会减少很多不必要的口头/书面上的解释。</p><p> 可结合【接口路径规范】、【版本控制规范】，外加<strong>具体接口命名</strong>(路径中可包含请求数据，如：id等)，建议具体接口命名也要规范些，可使用"<strong>驼峰命名法</strong>"按照实现接口的业务类型、业务场景等命名，有必要时可采取多级目录命名，但目录不宜过长，两级目录较为适宜。</p><p>格式规范如下：</p><p> /user/v1/sys/login 用户服务/模块的系统登录接口</p><p> /zoo/v1/zoos/{ID} 动物园服务/模块中，获取id为ID的动物</p><p>具体接口命名，通常有以下两种方式：</p><ul><li class="ql-align-justify">接口名称动词前/后缀化</li></ul><p> 接口名称以接口数据操作的动词为前/后缀，常见动词有：add、delete、update、query、get、send、save、detail、list等，如：新建用户addUser、查询订单详情queryOrderDetail。</p><ul><li class="ql-align-justify">接口名称动词+请求方式</li></ul><p> 接口路径中包含具体接口名称的名词，接口数据操作动作以HTTP请求方式来区分。常用的HTTP请求方式有：</p><p> <strong>GET</strong>：从服务器取出资源（一项或多项）。</p><p> <strong>POST</strong>：在服务器新建一个资源。</p><p> <strong>PUT</strong>：在服务器更新资源（客户端提供改变后的完整资源）。</p><p> <strong>PATCH</strong>：在服务器更新资源（客户端提供改变的属性）。</p><p> <strong>DELETE</strong>：从服务器删除资源。</p><p>如：</p><p> GET /zoo/v1/zoos：列出所有动物园</p><p> POST /zoo/v1/zoos：新建一个动物园</p><p> GET /zoo/v1/zoos/{ID}：获取某个指定动物园的信息</p><p> PUT /zoo/v1/zoos/{ID}：更新某个指定动物园的信息（提供该动物园的全部信息）</p><p> PATCH /zoo/v1/zoos/{ID}：更新某个指定动物园的信息（提供该动物园的部分信息）</p><p> DELETE /zoo/v1/zoos/{ID}：删除某个动物园</p><p> GET /zoo/v1/zoos/{ID}/animals：列出某个指定动物园的所有动物</p><p> DELETE /zoo/v1/zoos/ID/animals/ID：删除某个指定动物园的指定动物</p><p class="ql-align-justify"><br></p><p><strong>五、请求参数规范</strong></p><ul><li class="ql-align-justify">请求方式：</li><li class="ql-align-justify">按照GET、POST、PUT等含义定义，避免出现不一致现象，对人造成误解、歧义。</li><li class="ql-align-justify">请求头：</li><li class="ql-align-justify">请求头根据项目需求添加配置参数。如：请求数据格式，accept=‘application/json’等。如有需要，请求头可根据项目需求要求传入用户token、唯一验签码等加密数据。</li><li class="ql-align-justify">请求参数/请求体：</li></ul><p> 请求参数字段，尽可能与数据库表字段、对象属性名等保持一致，因为保持一致最省事，最舒服的一件事。</p><p><strong>六、返回数据规范</strong></p><p> 统一规范返回数据的格式，对己对彼都有好处，此处以json格式为例。返回数据应包含：<strong>返回状态码</strong>、<strong>返回状态信息</strong>、<strong>具体数据。</strong></p><p>格式规范如下：</p><pre>{<br> "status":"000000",<br> "msg":"success",<br> "data": {<br> //json格式的具体数据<br> }<br>}<br></pre><p><strong>接口管理工具推荐</strong></p><p> 接口开发完后，最终的目的是提供给其他系统/模块来使用的，因此，接口的管理是必不可少的。</p><p><strong>接口管理的痛点</strong></p><p> 接口的管理常常面临很多的痛苦，这里就列举几个常见的，看看你是否也遇到过。</p><ul><li class="ql-align-justify">系统/模块太多、接口太多，没有系统统一管理所有接口。</li><li class="ql-align-justify">代码修改后，接口文档没有及时更新，造成接口文档和实际接口不一致的现象。</li><li class="ql-align-justify">接口管理系统自主研开发成本高。</li><li class="ql-align-justify">接口管理缺少接口mock功能。</li></ul><p><strong>接口管理工具推荐</strong></p><p> 在日常工作过程中用过、接触过的接口管理工具也是不尽其数，下面介绍你可能使用过、没有使用过的接口管理工具，同时也介绍这些接口管理工具的优缺点。 </p><p><strong>word</strong></p><p> 相信大家之前用来管理接口比较多的应该是word吧，开发人员将系统的接口维护在word文档里，不管是组内沟通还是和其他团队的接口沟通都离不开这些接口文档，每次修改文档和代码都要同步修改。相信使用word的缺点大家应该也很清楚，就是维护和管理很麻烦，我们经常会遇到<strong>文档和代码不一致</strong>的情况，大部分不一致都是因为接口因为种种原因修改了，开发人员大部分都是只改了代码里的接口实现，而没有去修改接口文档。而且word文档搜索接口也很麻烦，没办法建全局索引，只能一个个文档点开查看，想想就很痛苦。但不可否认的是，word对于一些小团队用起来还是挺方便的，不用搭建系统，给谁一看就明白。</p><p class="ql-align-justify"><br></p><p><strong>自建接口管理系统</strong></p><p> 对于一些有一定规模的企业，在各项工程管理活动上都非常正规，各种ISO标准要遵守，自然对接口管理的要求也非常高，之前在国有银行，我们就是自建了接口管理系统，自建还是很消<strong>耗人力成本</strong>的，从开发到后续运维，都要<strong>消耗人力</strong>，但是自建的好处就是，可以根据公司的要求进行各种花样的定制，我们之前在接口管理系统中加入了很多好用的定制功能，例如接口被哪些系统调用、接口是在哪个批次投产又在哪个批次做过变更等等，这对于架构师来说非常好用，用于分析接口影响范围非常方便。目前开源的接口管理系统还没有能做到这些定制化功能的。</p><p><strong>wiki</strong></p><p> 之前在小团队的时候还用过一段时间的私有wiki，wiki特别适合于小团队高速线性迭代开发，在wiki上看到的就是最新的接口，团队内所有成员看到的都是一样的，如果接口有变化，相关开发人员修改后立即生效，保证了顺畅的接口沟通。但是wiki的缺点也很多，接口文档只是静态页面，<strong>无法实现一些动态效果</strong>，无法实现追溯等等缺点。</p><p><strong>RAP</strong></p><p> 相信很多互联网公司都在使用RAP，RAP是阿里开源的一套接口管理系统，RAP可以比较方便的管理公司所有系统的接口，同时还有比较完善的权限管理，还可以做接口mock，方便开发人员在接口功能还没有完成的时候能够及时发布出去，给调用方去使用。但是RAP的缺点就是每个接口都需要维护进去，接口修改后也需要及时维护，当时我们在使用的时候遇到的最大的问题也是经常碰到接口没有及时维护的问题。</p><p><strong>swagger</strong></p><p class="ql-align-center"><br></p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/70132de473a14bffbc577d64af355b95" img_width="532" img_height="173" alt="如何写出完美的接口：接口规范定义、接口管理工具推荐" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-center"><br></p><p class="ql-align-justify"> 上面说的那些接口管理工具，其实都有一个很大的问题就是修改代码后需要同步维护接口文档，但是让程序员去修改文档是很难的，大部分程序员都比较讨厌维护各类文档。当我第一次了解到swagger的时候，发现这简直就是为程序员定制的接口管理工具，swagger定义了很多注解，在对接口加上swagger相关的注解，当接口代码修改后，swagger在工程启动后会根据代码自动生成最新的接口html文档，同时swagger提供了mock接口模拟的功能，也能够更加方便的模拟接口，并且还能够在swagger界面上直接发起接口调用，可以方便调用方在还没写代码的时候就能够尝试下接口调用后的结果。</p><p> 看了那么多swagger的优点，下面也说说swagger的缺点，那就是swagger是跟随着每个工程一起启动的，这就导致每个工程都有一个swagger的访问地址，如果公司系统很多的话，那就会导致查看不同系统的接口都要到不同的地址去查看，每个开发都要自己收藏好各个系统的swagger地址。有些公司也自己开发了统一网关，将所有swagger的接口地址聚合起来，但是多少还是涉及到一些开发工作的，而且做的还不一定很完善。</p><p><strong>Easy Mock</strong></p><p class="ql-align-center"><br></p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/5f8b8653282d44318f49479b6b03e071" img_width="1080" img_height="670" alt="如何写出完美的接口：接口规范定义、接口管理工具推荐" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-center"><br></p><p> 官网的这张图基本上介绍清楚了easymock的核心功能，这其中我最看重的功能有两块，一个是能够集成swagger接口并集中管理所有接口，另一个就是响应式数据。</p><p> EasyMock能够根据swagger接口的地址自动导入所有swagger接口，非常方便，对于非swagger的接口也可以手工维护进去，这样可以很方便的做到全公司接口统一维护，而且也有比较完善的接口权限管理，方便分组管理。但缺点就是过于庞大，可能太适合小一点项目或团队。</p><p class="ql-align-justify"> 上面提及到接口管理工具，大家可根据自己项目的规模、需求，进行实际选择，切记生搬硬套。</p></div>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[这可能是最为详细的Docker入门吐血总结]]></title>
        <id>https://i.plbear.com/post/awesome-docker-get-start</id>
        <link href="https://i.plbear.com/post/awesome-docker-get-start">
        </link>
        <updated>2019-07-22T14:40:23.000Z</updated>
        <content type="html"><![CDATA[<div><p class="ql-align-justify">在计算机技术日新月异的今天， Docker 在国内发展的如火如荼。</p><p class="ql-align-center"><br></p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/1540437482919069761a6bf" img_width="600" img_height="320" alt="这可能是最为详细的Docker入门吐血总结" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-center"><br></p><p class="ql-align-justify">特别是在一线互联网公司 Docker 的使用是十分普遍的，甚至成为了一些企业面试的加分项，不信的话看看下面这张图。</p><p class="ql-align-center"><br></p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/15404374832194c7c2d4160" img_width="500" img_height="354" alt="这可能是最为详细的Docker入门吐血总结" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-center"><br></p><p class="ql-align-justify">这是我在某招聘网站上看到的招聘 Java 开发工程师的招聘要求，其中有一条熟悉 Docker 成为了你快速入职的加分项，由此可见熟悉 Docker 在互联网公司的地位之重要。</p><p class="ql-align-justify">市面上已经有很多优秀的 Docker 教程，但是很多原理性的东西，笔者认为那些教程对初学者而言还是很难理解，感觉没有说清楚(笔者自己都觉得挺懵逼的)。</p><p class="ql-align-justify">为了让初学者少走弯路，我将以我的学习经历以及作为一个 CTF 的角度，编写此套教程，来带大家去了解并熟练运用 Docker 。</p><p class="ql-align-justify"><strong>Docker 是什么?</strong></p><p class="ql-align-justify">说了这么多， Docker 到底是个什么东西呢?我们在理解 Docker 之前，首先得先区分清楚两个概念，容器和虚拟机。</p><p class="ql-align-justify">可能很多读者朋友都用过虚拟机，而对容器这个概念比较的陌生。我们用的传统虚拟机如 VMware ， VisualBox 之类的需要模拟整台机器包括硬件。</p><p class="ql-align-justify">每台虚拟机都需要有自己的操作系统，虚拟机一旦被开启，预分配给它的资源将全部被占用。</p><p class="ql-align-justify">每一台虚拟机包括应用，必要的二进制和库，以及一个完整的用户操作系统。</p><p class="ql-align-justify">而容器技术是和我们的宿主机共享硬件资源及操作系统，可以实现资源的动态分配。</p><p class="ql-align-justify">容器包含应用和其所有的依赖包，但是与其他容器共享内核。容器在宿主机操作系统中，在用户空间以分离的进程运行。</p><p class="ql-align-justify">容器技术是实现操作系统虚拟化的一种途径，可以让您在资源受到隔离的进程中运行应用程序及其依赖关系。</p><p class="ql-align-justify">通过使用容器，我们可以轻松打包应用程序的代码、配置和依赖关系，将其变成容易使用的构建块，从而实现环境一致性、运营效率、开发人员生产力和版本控制等诸多目标。</p><p class="ql-align-justify">容器可以帮助保证应用程序快速、可靠、一致地部署，其间不受部署环境的影响。</p><p class="ql-align-justify">容器还赋予我们对资源更多的精细化控制能力，让我们的基础设施效率更高。</p><p class="ql-align-justify">通过下面这幅图，我们可以很直观的反映出这两者的区别所在：</p><p class="ql-align-center"><br></p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/154043748298764b5cbeafd" img_width="500" img_height="258" alt="这可能是最为详细的Docker入门吐血总结" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-center"><br></p><p class="ql-align-justify">Docker 属于 Linux 容器的一种封装，提供简单易用的容器使用接口。它是目前最流行的 Linux 容器解决方案。</p><p class="ql-align-justify">而 Linux 容器是 Linux 发展出的另一种虚拟化技术，简单来讲， Linux 容器不是模拟一个完整的操作系统，而是对进程进行隔离，相当于是在正常进程的外面套了一个保护层。</p><p class="ql-align-justify">对于容器里面的进程来说，它接触到的各种资源都是虚拟的，从而实现与底层系统的隔离。</p><p class="ql-align-justify">Docker 将应用程序与该程序的依赖，打包在一个文件里面。运行这个文件，就会生成一个虚拟容器。</p><p class="ql-align-justify">程序在这个虚拟容器里运行，就好像在真实的物理机上运行一样。有了 Docker ，就不用担心环境问题。</p><p class="ql-align-justify">总体来说，Docker 的接口相当简单，用户可以方便地创建和使用容器，把自己的应用放入容器。容器还可以进行版本管理、复制、分享、修改，就像管理普通的代码一样。</p><p class="ql-align-justify"><strong>Docker 的优势</strong></p><p class="ql-align-justify">Docker 相比于传统虚拟化方式具有更多的优势：</p><ul><li>Docker 启动快速属于秒级别。虚拟机通常需要几分钟去启动。</li><li>Docker 需要的资源更少。Docker 在操作系统级别进行虚拟化，Docker 容器和内核交互，几乎没有性能损耗，性能优于通过 Hypervisor 层与内核层的虚拟化。</li><li>Docker 更轻量。Docker 的架构可以共用一个内核与共享应用程序库，所占内存极小。同样的硬件环境，Docker 运行的镜像数远多于虚拟机数量，对系统的利用率非常高。</li><li>与虚拟机相比，Docker 隔离性更弱。Docker 属于进程之间的隔离，虚拟机可实现系统级别隔离。</li><li>安全性。Docker 的安全性也更弱，Docker 的租户 Root 和宿主机 Root 等同，一旦容器内的用户从普通用户权限提升为 Root 权限，它就直接具备了宿主机的 Root 权限，进而可进行无限制的操作。</li></ul><p class="ql-align-justify">虚拟机租户 Root 权限和宿主机的 Root 虚拟机权限是分离的，并且虚拟机利用如 Intel 的 VT-d 和 VT-x 的 ring-1 硬件隔离技术。</p><p class="ql-align-justify">这种隔离技术可以防止虚拟机突破和彼此交互，而容器至今还没有任何形式的硬件隔离，这使得容器容易受到攻击。</p><ul><li>可管理性。Docker 的集中化管理工具还不算成熟。各种虚拟化技术都有成熟的管理工具，例如 VMware vCenter 提供完备的虚拟机管理能力。</li><li>高可用和可恢复性。Docker 对业务的高可用支持是通过快速重新部署实现的。</li><li>虚拟化具备负载均衡，高可用，容错，迁移和数据保护等经过生产实践检验的成熟保障机制， VMware 可承诺虚拟机 99.999% 高可用，保证业务连续性。</li><li>快速创建、删除。虚拟化创建是分钟级别的，Docker 容器创建是秒级别的，Docker 的快速迭代性，决定了无论是开发、测试、部署都可以节约大量时间</li><li>交付、部署。虚拟机可以通过镜像实现环境交付的一致性，但镜像分发无法体系化。Docker 在 Dockerfile 中记录了容器构建过程，可在集群中实现快速分发和快速部署。</li></ul><p class="ql-align-justify">我们可以从下面这张表格很清楚地看到容器相比于传统虚拟机的特性的优势所在：</p><p class="ql-align-center"><br></p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/15404374829284f427c013d" img_width="500" img_height="248" alt="这可能是最为详细的Docker入门吐血总结" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-center"><br></p><p class="ql-align-justify"><strong>Docker 的三个基本概念</strong></p><p class="ql-align-center"><br></p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/15404374829469eea2fc391" img_width="500" img_height="375" alt="这可能是最为详细的Docker入门吐血总结" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-center"><br></p><p class="ql-align-justify">从上图我们可以看到，Docker 中包括三个基本的概念：</p><ul><li><strong>Image(镜像)</strong></li><li><strong>Container(容器)</strong></li><li><strong>Repository(仓库)</strong></li></ul><p class="ql-align-justify">镜像是 Docker 运行容器的前提，仓库是存放镜像的场所，可见镜像更是 Docker 的核心。</p><p class="ql-align-justify"><strong>Image(镜像)</strong></p><p class="ql-align-justify">那么镜像到底是什么呢?Docker 镜像可以看作是一个特殊的文件系统，除了提供容器运行时所需的程序、库、资源、配置等文件外，还包含了一些为运行时准备的一些配置参数(如匿名卷、环境变量、用户等)。</p><p class="ql-align-justify">镜像不包含任何动态数据，其内容在构建之后也不会被改变。镜像(Image)就是一堆只读层(read-only layer)的统一视角，也许这个定义有些难以理解，下面的这张图能够帮助读者理解镜像的定义：</p><p class="ql-align-center"><br></p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/1540437483061d74da9b80d" img_width="624" img_height="187" alt="这可能是最为详细的Docker入门吐血总结" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-center"><br></p><p class="ql-align-justify">从左边我们看到了多个只读层，它们重叠在一起。除了最下面一层，其他层都会有一个指针指向下一层。这些层是 Docker 内部的实现细节，并且能够在主机的文件系统上访问到。</p><p class="ql-align-justify">统一文件系统(Union File System)技术能够将不同的层整合成一个文件系统，为这些层提供了一个统一的视角。</p><p class="ql-align-justify">这样就隐藏了多层的存在，在用户的角度看来，只存在一个文件系统。我们可以在图片的右边看到这个视角的形式。</p><p class="ql-align-justify"><strong>Container(容器)</strong></p><p class="ql-align-justify">容器(Container)的定义和镜像(Image)几乎一模一样，也是一堆层的统一视角，唯一区别在于容器的最上面那一层是可读可写的。</p><p class="ql-align-center"><br></p><div class="pgc-img"><img src="http://p3.pstatp.com/large/pgc-image/1540437483094ad5d26853a" img_width="500" img_height="133" alt="这可能是最为详细的Docker入门吐血总结" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-center"><br></p><p class="ql-align-justify">由于容器的定义并没有提及是否要运行容器，所以实际上，容器 = 镜像 + 读写层。</p><p class="ql-align-justify"><strong>Repository(仓库)</strong></p><p class="ql-align-justify">Docker 仓库是集中存放镜像文件的场所。镜像构建完成后，可以很容易的在当前宿主上运行。</p><p class="ql-align-justify">但是， 如果需要在其他服务器上使用这个镜像，我们就需要一个集中的存储、分发镜像的服务，Docker Registry(仓库注册服务器)就是这样的服务。</p><p class="ql-align-justify">有时候会把仓库(Repository)和仓库注册服务器(Registry)混为一谈，并不严格区分。</p><p class="ql-align-justify">Docker 仓库的概念跟 Git 类似，注册服务器可以理解为 GitHub 这样的托管服务。</p><p class="ql-align-justify">实际上，一个 Docker Registry 中可以包含多个仓库(Repository)，每个仓库可以包含多个标签(Tag)，每个标签对应着一个镜像。</p><p class="ql-align-justify">所以说，镜像仓库是 Docker 用来集中存放镜像文件的地方，类似于我们之前常用的代码仓库。</p><p class="ql-align-justify">通常，一个仓库会包含同一个软件不同版本的镜像，而标签就常用于对应该软件的各个版本 。</p><p class="ql-align-justify">我们可以通过&lt;仓库名&gt;:&lt;标签&gt;的格式来指定具体是这个软件哪个版本的镜像。如果不给出标签，将以 Latest 作为默认标签。</p><p class="ql-align-justify">仓库又可以分为两种形式：</p><ul><li><strong>Public(公有仓库)</strong></li><li><strong>Private(私有仓库)</strong></li></ul><p class="ql-align-justify">Docker Registry 公有仓库是开放给用户使用、允许用户管理镜像的 Registry 服务。</p><p class="ql-align-justify">一般这类公开服务允许用户免费上传、下载公开的镜像，并可能提供收费服务供用户管理私有镜像。</p><p class="ql-align-justify">除了使用公开服务外，用户还可以在本地搭建私有 Docker Registry。Docker 官方提供了 Docker Registry 镜像，可以直接使用做为私有 Registry 服务。</p><p class="ql-align-justify">当用户创建了自己的镜像之后就可以使用 Push 命令将它上传到公有或者私有仓库，这样下次在另外一台机器上使用这个镜像时候，只需要从仓库上 Pull 下来就可以了。</p><p class="ql-align-justify">我们主要把 Docker 的一些常见概念如 Image，Container，Repository 做了详细的阐述，也从传统虚拟化方式的角度阐述了 Docker 的优势。</p><p class="ql-align-justify">我们从下图可以直观地看到 Docker 的架构：</p><p class="ql-align-center"><br></p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/1540437483066b438f353af" img_width="500" img_height="377" alt="这可能是最为详细的Docker入门吐血总结" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-center"><br></p><p class="ql-align-justify">Docker 使用 C/S 结构，即客户端/服务器体系结构。Docker 客户端与 Docker 服务器进行交互，Docker服务端负责构建、运行和分发 Docker 镜像。</p><p class="ql-align-justify">Docker 客户端和服务端可以运行在一台机器上，也可以通过 RESTful 、 Stock 或网络接口与远程 Docker 服务端进行通信。</p><p class="ql-align-center"><br></p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/1540437483930f2eea202cd" img_width="500" img_height="260" alt="这可能是最为详细的Docker入门吐血总结" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-center"><br></p><p class="ql-align-justify">这张图展示了 Docker 客户端、服务端和 Docker 仓库(即 Docker Hub 和 Docker Cloud )，默认情况下 Docker 会在 Docker 中央仓库寻找镜像文件。</p><p class="ql-align-justify">这种利用仓库管理镜像的设计理念类似于 Git ，当然这个仓库是可以通过修改配置来指定的，甚至我们可以创建我们自己的私有仓库。</p><p class="ql-align-justify"><strong>Docker 的安装和使用</strong></p><p class="ql-align-justify">Docker 的安装和使用有一些前提条件，主要体现在体系架构和内核的支持上。</p><p class="ql-align-justify">对于体系架构，除了 Docker 一开始就支持的 X86-64 ，其他体系架构的支持则一直在不断地完善和推进中。</p><p class="ql-align-justify">Docker 分为 CE 和 EE 两大版本。CE 即社区版，免费支持周期 7 个月;EE 即企业版，强调安全，付费使用，支持周期 24 个月。</p><p class="ql-align-justify">我们在安装前可以参看官方文档获取最新的 Docker 支持情况，官方文档在这里：</p><pre>https://docs.docker.com/install/ <br></pre><p class="ql-align-justify">Docker 对于内核支持的功能，即内核的配置选项也有一定的要求(比如必须开启 Cgroup 和 Namespace 相关选项，以及其他的网络和存储驱动等)。</p><p class="ql-align-justify">Docker 源码中提供了一个检测脚本来检测和指导内核的配置，脚本链接在这里：</p><pre>https://raw.githubusercontent.com/docker/docker/master/contrib/check-config.sh <br></pre><p class="ql-align-justify">在满足前提条件后，安装就变得非常的简单了。</p><p class="ql-align-justify">Docker CE 的安装请参考官方文档：</p><ul><li>MacOS：https://docs.docker.com/docker-for-mac/install/</li><li>Windows：https://docs.docker.com/docker-for-windows/install/</li><li>Ubuntu：https://docs.docker.com/install/linux/docker-ce/ubuntu/</li><li>Debian：https://docs.docker.com/install/linux/docker-ce/debian/</li><li>CentOS：https://docs.docker.com/install/linux/docker-ce/centos/</li><li>Fedora：https://docs.docker.com/install/linux/docker-ce/fedora/</li><li>其他 Linux 发行版：https://docs.docker.com/install/linux/docker-ce/binaries/</li></ul><p class="ql-align-justify">这里我们以 CentOS 7 作为演示。</p><p class="ql-align-justify">环境准备：</p><p class="ql-align-justify">阿里云服务器(1 核 2G，1M 带宽)</p><p class="ql-align-justify">CentOS 7.4 64 位</p><p class="ql-align-justify">由于 Docker-CE 支持 64 位版本的 CentOS 7 ，并且要求内核版本不低于 3.10，首先我们需要卸载掉旧版本的 Docker：</p><pre>$ sudo yum remove docker \ <br> docker-client \ <br> docker-client-latest \ <br> docker-common \ <br> docker-latest \ <br> docker-latest-logrotate \ <br> docker-logrotate \ <br> docker-selinux \ <br> docker-engine-selinux \ <br> docker-engine <br></pre><p class="ql-align-center"><br></p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/154043748342493d1d90968" img_width="500" img_height="245" alt="这可能是最为详细的Docker入门吐血总结" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-center"><br></p><p class="ql-align-justify">我们执行以下安装命令去安装依赖包：</p><pre>$ sudo yum install -y yum-utils \ <br> device-mapper-persistent-data \ <br> lvm2 <br></pre><p class="ql-align-justify">这里我事先已经安装过了，所以提示我已经安装了最新版本：</p><p class="ql-align-center"><br></p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/15404374833954cb9ab6494" img_width="500" img_height="251" alt="这可能是最为详细的Docker入门吐血总结" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-center"><br></p><p class="ql-align-justify"><strong>安装 Docker</strong></p><p class="ql-align-justify">Docker 软件包已经包括在默认的 CentOS-Extras 软件源里。因此想要安装 Docker，只需要运行下面的 yum 命令：</p><pre>$ sudo yum install docker <br></pre><p class="ql-align-justify">当然在测试或开发环境中 Docker 官方为了简化安装流程，提供了一套便捷的安装脚本，CentOS 系统上可以使用这套脚本安装：</p><pre>curl -fsSL get.docker.com -o get-docker.shsh get-docker.sh <br></pre><p class="ql-align-justify">具体可以参看 docker-install 的脚本：</p><pre>https://github.com/docker/docker-install <br></pre><p class="ql-align-justify">执行这个命令后，脚本就会自动的将一切准备工作做好，并且把 Docker CE 的 Edge 版本安装在系统中。</p><p class="ql-align-justify">安装完成后，运行下面的命令，验证是否安装成功：</p><pre>docker versionordocker info <br></pre><p class="ql-align-justify">返回 Docker 的版本相关信息，证明 Docker 安装成功：</p><p class="ql-align-center"><br></p><div class="pgc-img"><img src="http://p3.pstatp.com/large/pgc-image/1540437483440cc168b70cc" img_width="500" img_height="310" alt="这可能是最为详细的Docker入门吐血总结" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-center"><br></p><p class="ql-align-justify">启动 Docker-CE：</p><pre>$ sudo systemctl enable docker$ sudo systemctl start docker <br></pre><p class="ql-align-justify"><strong>Docker 的简单运用 Hello World</strong></p><p class="ql-align-justify">由于服务器日常崩溃了， Docker 出了点问题，所以以下案例的演示是基于 Kali Linux 环境下进行的。</p><p class="ql-align-justify">我们通过最简单的 Image 文件 Hello World，感受一下 Docker 的魅力吧!</p><p class="ql-align-justify">我们直接运行下面的命令，将名为 hello-world 的 image 文件从仓库抓取到本地：</p><pre>docker pull library/hello-world <br></pre><p class="ql-align-justify">docker pull images 是抓取 image 文件，library/hello-world 是 image 文件在仓库里面的位置，其中 library 是 image 文件所在的组，hello-world 是 image 文件的名字。</p><p class="ql-align-center"><br></p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/15404374834973408bf20f3" img_width="500" img_height="93" alt="这可能是最为详细的Docker入门吐血总结" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-center"><br></p><p class="ql-align-justify">抓取成功以后，就可以在本机看到这个 image 文件了：</p><pre>docker images <br></pre><p class="ql-align-justify">我们可以看到如下结果：</p><p class="ql-align-center"><br></p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/15404374835181c6b718c94" img_width="500" img_height="68" alt="这可能是最为详细的Docker入门吐血总结" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-center"><br></p><p class="ql-align-justify">现在，我们可以运行 hello-world 这个 image 文件：</p><pre>docker run hello-world <br></pre><p class="ql-align-justify">我们可以看到如下结果：</p><p class="ql-align-center"><br></p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/1540437483633734d823ba4" img_width="500" img_height="263" alt="这可能是最为详细的Docker入门吐血总结" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-center"><br></p><p class="ql-align-justify">输出这段提示以后，hello world 就会停止运行，容器自动终止。有些容器不会自动终止，因为提供的是服务，比如 MySQL 镜像等。</p><p class="ql-align-justify">是不是很 Easy 呢?我们从上面可以看出，Docker 的功能是十分强大的，除此之外，我们还可以拉取一些 Ubuntu，Apache 等镜像，在未来的教程中我们将会一一提到。</p><p class="ql-align-justify">Docker 提供了一套简单实用的命令来创建和更新镜像，我们可以通过网络直接下载一个已经创建好了的应用镜像，并通过 Docker RUN 命令就可以直接使用。</p><p class="ql-align-justify">当镜像通过 RUN 命令运行成功后，这个运行的镜像就是一个 Docker 容器啦。</p><p class="ql-align-justify">容器可以理解为一个轻量级的沙箱，Docker 利用容器来运行和隔离应用，容器是可以被启动、停止、删除的，这并不会影响 Docker 镜像。</p><p class="ql-align-justify">我们可以看看下面这幅图：</p><p class="ql-align-center"><br></p><div class="pgc-img"><img src="http://p3.pstatp.com/large/pgc-image/1540437483581057a285a71" img_width="500" img_height="391" alt="这可能是最为详细的Docker入门吐血总结" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-center"><br></p><p class="ql-align-justify">Docker 客户端是 Docker 用户与 Docker 交互的主要方式。当您使用 Docker 命令行运行命令时，Docker 客户端将这些命令发送给服务器端，服务端将执行这些命令。</p><p class="ql-align-justify">Docker 命令使用 Docker API 。Docker 客户端可以与多个服务端进行通信。</p><p class="ql-align-justify">我们将剖析一下 Docker 容器是如何工作的，学习好 Docker 容器工作的原理，我们就可以自己去管理我们的容器了。</p><p class="ql-align-justify"><strong>Docker 架构</strong></p><p class="ql-align-justify">在上面的学习中，我们简单地讲解了 Docker 的基本架构。了解到了 Docker 使用的是 C/S 结构，即客户端/服务器体系结构。</p><p class="ql-align-justify">明白了 Docker 客户端与 Docker 服务器进行交互时，Docker 服务端负责构建、运行和分发 Docker 镜像。</p><p class="ql-align-justify">知道了 Docker 客户端和服务端可以运行在一台机器上，我们可以通过 RESTful 、Stock 或网络接口与远程 Docker 服务端进行通信。</p><p class="ql-align-justify">我们从下图可以很直观的了解到 Docker 的架构：</p><p class="ql-align-center"><br></p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/154043748363888b604c0ab" img_width="500" img_height="260" alt="这可能是最为详细的Docker入门吐血总结" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-center"><br></p><p class="ql-align-justify">Docker 的核心组件包括：</p><ul><li>Docker Client</li><li>Docker Daemon</li><li>Docker Image</li><li>Docker Registry</li><li>Docker Container</li></ul><p class="ql-align-justify">Docker 采用的是 Client/Server 架构。客户端向服务器发送请求，服务器负责构建、运行和分发容器。</p><p class="ql-align-justify">客户端和服务器可以运行在同一个 Host 上，客户端也可以通过 Socket 或 REST API 与远程的服务器通信。</p><p class="ql-align-justify">可能很多朋友暂时不太理解一些东西，比如 REST API 是什么东西等，不过没关系，在后面的文章中会一一给大家讲解清楚。</p><p class="ql-align-justify"><strong>Docker Client</strong></p><p class="ql-align-justify">Docker Client ，也称 Docker 客户端。它其实就是 Docker 提供命令行界面(CLI)工具，是许多 Docker 用户与 Docker 进行交互的主要方式。</p><p class="ql-align-justify">客户端可以构建，运行和停止应用程序，还可以远程与 Docker_Host 进行交互。</p><p class="ql-align-justify">最常用的 Docker 客户端就是 Docker 命令，我们可以通过 Docker 命令很方便地在 Host 上构建和运行 Docker 容器。</p><p class="ql-align-center"><br></p><div class="pgc-img"><img src="http://p3.pstatp.com/large/pgc-image/1540437483619ea261b99ba" img_width="500" img_height="270" alt="这可能是最为详细的Docker入门吐血总结" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-center"><br></p><p class="ql-align-justify"><strong>Docker Daemon</strong></p><p class="ql-align-justify">Docker Daemon 是服务器组件，以 Linux 后台服务的方式运行，是 Docker 最核心的后台进程，我们也把它称为守护进程。</p><p class="ql-align-justify">它负责响应来自 Docker Client 的请求，然后将这些请求翻译成系统调用完成容器管理操作。</p><p class="ql-align-justify">该进程会在后台启动一个 API Server ，负责接收由 Docker Client 发送的请求，接收到的请求将通过 Docker Daemon 内部的一个路由分发调度，由具体的函数来执行请求。</p><p class="ql-align-center"><br></p><div class="pgc-img"><img src="http://p9.pstatp.com/large/pgc-image/1540437483705b79fa4c429" img_width="500" img_height="271" alt="这可能是最为详细的Docker入门吐血总结" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-center"><br></p><p class="ql-align-justify">我们大致可以将其分为以下三部分：</p><ul><li><strong>Docker Server</strong></li><li><strong>Engine</strong></li><li><strong>Job</strong></li></ul><p class="ql-align-justify">Docker Daemon 的架构如下所示：</p><p class="ql-align-center"><br></p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/154043748372362abbe96b9" img_width="500" img_height="368" alt="这可能是最为详细的Docker入门吐血总结" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-center"><br></p><p class="ql-align-justify">Docker Daemon 可以认为是通过 Docker Server 模块接受 Docker Client 的请求，并在 Engine 中处理请求，然后根据请求类型，创建出指定的 Job 并运行。</p><p class="ql-align-justify">Docker Daemon 运行在 Docker Host 上，负责创建、运行、监控容器，构建、存储镜像。</p><p class="ql-align-justify">运行过程的作用有以下几种可能：</p><ul><li>向 Docker Registry 获取镜像。</li><li>通过 graphdriver 执行容器镜像的本地化操作。</li><li>通过 networkdriver 执行容器网络环境的配置。</li><li>通过 execdriver 执行容器内部运行的执行工作。</li></ul><p class="ql-align-justify">由于 Docker Daemon 和 Docker Client 的启动都是通过可执行文件 Docker 来完成的，因此两者的启动流程非常相似。</p><p class="ql-align-justify">Docker 可执行文件运行时，运行代码通过不同的命令行 Flag 参数，区分两者，并最终运行两者各自相应的部分。</p><p class="ql-align-justify">启动 Docker Daemon 时，一般可以使用以下命令来完成：</p><pre>docker --daemon = truedocker –d <br>docker –d = true <br></pre><p class="ql-align-justify">再由 Docker 的 main() 函数来解析以上命令的相应 Flag 参数，并最终完成 Docker Daemon 的启动。</p><p>下图可以很直观地看到 Docker Daemon 的启动流程：</p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/15404374837235e5f0fe2a4" img_width="500" img_height="602" alt="这可能是最为详细的Docker入门吐血总结" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-justify">默认配置下，Docker Daemon 只能响应来自本地 Host 的客户端请求。如果要允许远程客户端请求，需要在配置文件中打开 TCP 监听。</p><p class="ql-align-justify">我们可以照着如下步骤进行配置：</p><p class="ql-align-justify">①编辑配置文件/etc/systemd/system/multi-user.target.wants/docker.service，在环境变量 ExecStart 后面添加 -H tcp://0.0.0.0，允许来自任意 IP 的客户端连接。</p><p class="ql-align-center"><br></p><div class="pgc-img"><img src="http://p3.pstatp.com/large/pgc-image/15404374837212af51bc3b9" img_width="500" img_height="159" alt="这可能是最为详细的Docker入门吐血总结" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-center"><br></p><p class="ql-align-justify">②重启 Docker Daemon：</p><pre>systemctl daemon-reload <br>systemctl restart docker.service <br></pre><p class="ql-align-justify">③我们通过以下命令即可实现与远程服务器通信：</p><pre>docker -H 服务器IP地址 info <br></pre><p class="ql-align-justify">-H 是用来指定服务器主机，info 子命令用于查看 Docker 服务器的信息。</p><p class="ql-align-justify"><strong>Docker Image</strong></p><p class="ql-align-justify">Docker 镜像可以看作是一个特殊的文件系统，除了提供容器运行时所需的程序、库、资源、配置等文件外，还包含了一些为运行时准备的一些配置参数(如匿名卷、环境变量、用户等)。</p><p class="ql-align-justify">镜像不包含任何动态数据，其内容在构建之后也不会被改变。我们可将 Docker 镜像看成只读模板，通过它可以创建 Docker 容器。</p><p class="ql-align-justify">镜像有多种生成方法：</p><ul><li><strong>从无到有开始创建镜像</strong></li><li><strong>下载并使用别人创建好的现成的镜像</strong></li><li><strong>在现有镜像上创建新的镜像</strong></li></ul><p class="ql-align-justify">我们可以将镜像的内容和创建步骤描述在一个文本文件中，这个文件被称作 Dockerfile ，通过执行 docker build 命令可以构建出 Docker 镜像。</p><p class="ql-align-justify"><strong>Docker Registry</strong></p><p>Docker Registry 是存储 Docker Image 的仓库，它在 Docker 生态环境中的位置如下图所示：</p><p class="ql-align-center"><br></p><div class="pgc-img"><img src="http://p3.pstatp.com/large/pgc-image/1540437483766706e52e4af" img_width="500" img_height="157" alt="这可能是最为详细的Docker入门吐血总结" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-center"><br></p><p class="ql-align-justify">运行 docker push、docker pull、docker search 时，实际上是通过 Docker Daemon 与 Docker Registry 通信。</p><p class="ql-align-justify"><strong>Docker Container</strong></p><p class="ql-align-justify">Docker 容器就是 Docker 镜像的运行实例，是真正运行项目程序、消耗系统资源、提供服务的地方。</p><p class="ql-align-justify">Docker Container 提供了系统硬件环境，我们可以使用 Docker Images 这些制作好的系统盘，再加上我们所编写好的项目代码，Run 一下就可以提供服务啦。</p><p class="ql-align-justify"><strong>Docker 组件是如何协作运行容器</strong></p><p class="ql-align-justify">看到这里，我相信各位读者朋友们应该已经对 Docker 基础架构熟悉的差不多了，我们还记得运行的第一个容器吗?</p><p class="ql-align-justify">现在我们再通过 hello-world 这个例子来体会一下 Docker 各个组件是如何协作的。</p><p class="ql-align-justify">容器启动过程如下：</p><ul><li>Docker 客户端执行 docker run 命令。</li><li>Docker Daemon 发现本地没有 hello-world 镜像。</li><li>Daemon 从 Docker Hub 下载镜像。</li><li>下载完成，镜像 hello-world 被保存到本地。</li><li>Docker Daemon 启动容器。</li></ul><p class="ql-align-justify">具体过程可以看如下这幅演示图：</p><p class="ql-align-center"><br></p><div class="pgc-img"><img src="http://p3.pstatp.com/large/pgc-image/15404374837950bb41b5243" img_width="500" img_height="263" alt="这可能是最为详细的Docker入门吐血总结" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-center"><br></p><p class="ql-align-justify">我们可以通过 Docker Images 可以查看到 hello-world 已经下载到本地：</p><p class="ql-align-center"><br></p><div class="pgc-img"><img src="http://p3.pstatp.com/large/pgc-image/15404374838229a52253032" img_width="500" img_height="29" alt="这可能是最为详细的Docker入门吐血总结" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-center"><br></p><p class="ql-align-justify">我们可以通过 Docker Ps 或者 Docker Container ls 显示正在运行的容器，我们可以看到，hello-world 在输出提示信息以后就会停止运行，容器自动终止，所以我们在查看的时候没有发现有容器在运行。</p><p class="ql-align-center"><br></p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/154043748381858997113fc" img_width="500" img_height="16" alt="这可能是最为详细的Docker入门吐血总结" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-center"><br></p><p class="ql-align-justify">我们把 Docker 容器的工作流程剖析的十分清楚了，我们大体可以知道 Docker 组件协作运行容器可以分为以下几个过程：</p><ul><li>Docker 客户端执行 docker run 命令。</li><li>Docker Daemon 发现本地没有我们需要的镜像。</li><li>Daemon 从 Docker Hub 下载镜像。</li><li>下载完成后，镜像被保存到本地。</li><li>Docker Daemon 启动容器。</li></ul><p class="ql-align-justify">了解了这些过程以后，我们再来理解这些命令就不会觉得很突兀了，下面我来给大家讲讲 Docker 常用的一些命令操作吧。</p><p class="ql-align-justify"><strong>Docker 常用命令</strong></p><p>我们可以通过 docker -h 去查看命令的详细的帮助文档。在这里我只会讲一些日常我们可能会用的比较多的一些命令。</p><p class="ql-align-center"><br></p><div class="pgc-img"><img src="http://p9.pstatp.com/large/pgc-image/15404374838451e3f53be64" img_width="500" img_height="359" alt="这可能是最为详细的Docker入门吐血总结" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-center"><br></p><p class="ql-align-justify">例如，我们需要拉取一个 Docker 镜像，我们可以用如下命令：</p><pre>docker pull image_name <br></pre><p class="ql-align-justify">image_name 为镜像的名称，而如果我们想从 Docker Hub 上去下载某个镜像，我们可以使用以下命令：</p><pre>docker pull centos:latest <br></pre><p class="ql-align-justify">cento：lastest 是镜像的名称，Docker Daemon 发现本地没有我们需要的镜像，会自动去 Docker Hub 上去下载镜像，下载完成后，该镜像被默认保存到 /var/lib/docker 目录下。</p><p class="ql-align-justify">接着我们如果想查看主机下存在多少镜像，我们可以用如下命令：</p><pre>docker images <br></pre><p class="ql-align-justify">我们要想知道当前有哪些容器在运行，我们可以用如下命令：</p><pre>docker ps -a <br></pre><p class="ql-align-justify">-a 是查看当前所有的容器，包括未运行的。我们该如何去对一个容器进行启动，重启和停止呢?</p><p class="ql-align-justify">我们可以用如下命令：</p><pre>docker start container_name/container_id <br>docker restart container_name/container_id <br>docker stop container_name/container_id <br></pre><p class="ql-align-justify">这个时候我们如果想进入到这个容器中，我们可以使用 attach 命令：</p><pre>docker attach container_name/container_id <br></pre><p class="ql-align-justify">那如果我们想运行这个容器中的镜像的话，并且调用镜像里面的 bash ，我们可以使用如下命令：</p><pre>docker run -t -i container_name/container_id /bin/bash <br></pre><p class="ql-align-justify">那如果这个时候，我们想删除指定镜像的话，由于 Image 被某个 Container 引用(拿来运行)，如果不将这个引用的 Container 销毁(删除)，那 Image 肯定是不能被删除。</p><p class="ql-align-justify">我们首先得先去停止这个容器：</p><pre>docker psdocker stop container_name/container_id <br></pre><p class="ql-align-justify">然后我们用如下命令去删除这个容器：</p><pre>docker rm container_name/container_id <br></pre><p class="ql-align-justify">然后这个时候我们再去删除这个镜像：</p><pre>docker rmi image_name <br></pre><p class="ql-align-justify">此时，常用的 Docker 相关的命令就讲到这里为止了，我们在后续的文章中还会反复地提到这些命令。</p><p class="ql-align-justify"><strong>Dockerfile 是什么</strong></p><p class="ql-align-justify">前面我们已经提到了 Docker 的一些基本概念。以 CTF 的角度来看，我们可以去使用 Dockerfile 定义镜像，依赖镜像来运行容器，可以去模拟出一个真实的漏洞场景。</p><p class="ql-align-justify">因此毫无疑问的说， Dockerfile 是镜像和容器的关键，并且 Dockerfile 还可以很轻易的去定义镜像内容，说了这么多，那么 Dockerfile 到底是个什么东西呢?</p><p class="ql-align-justify">Dockerfile 是自动构建 Docker 镜像的配置文件，用户可以使用 Dockerfile 快速创建自定义的镜像。Dockerfile 中的命令非常类似于 Linux 下的 Shell 命令。</p><p class="ql-align-justify">我们可以通过下面这幅图来直观地感受下 Docker 镜像、容器和 Dockerfile 三者之间的关系：</p><p class="ql-align-center"><br></p><div class="pgc-img"><img src="http://p3.pstatp.com/large/pgc-image/1540437483882415022c72b" img_width="500" img_height="280" alt="这可能是最为详细的Docker入门吐血总结" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-center"><br></p><p class="ql-align-justify">我们从上图中可以看到，Dockerfile 可以自定义镜像，通过 Docker 命令去运行镜像，从而达到启动容器的目的。Dockerfile 是由一行行命令语句组成，并且支持已 # 开头的注释行。</p><p class="ql-align-justify">一般来说，我们可以将 Dockerfile 分为四个部分：</p><ul><li>基础镜像(父镜像)信息指令 FROM。</li><li>维护者信息指令 MAINTAINER。</li><li>镜像操作指令 RUN 、EVN 、ADD 和 WORKDIR 等。</li><li>容器启动指令 CMD 、ENTRYPOINT 和 USER 等。</li></ul><p class="ql-align-justify">下面是一段简单的 Dockerfile 的例子：</p><pre>FROM python:2.7MAINTAINER Angel_Kitty &lt;angelkitty6698@gmail.com&gt;COPY . /app <br>WORKDIR /app <br>RUN pip install -r requirements.txt <br>EXPOSE 5000ENTRYPOINT ["python"]CMD ["app.py"] <br></pre><p class="ql-align-justify">我们可以分析一下上面这个过程：</p><ul><li>从 Docker Hub 上 Pull 下 Python 2.7 的基础镜像。</li><li>显示维护者的信息。</li><li>Copy 当前目录到容器中的 /App 目录下 复制本地主机的 ( Dockerfile 所在目录的相对路径)到容器里 。</li><li>指定工作路径为 /App。</li><li>安装依赖包。</li><li>暴露 5000 端口。</li><li>启动 App。</li></ul><p class="ql-align-justify">这个例子是启动一个 Python Flask App 的 Dockerfile ( Flask 是 Python 的一个轻量的 Web 框架)，相信大家从这个例子中能够稍微理解了 Dockfile 的组成以及指令的编写过程。</p><p class="ql-align-justify"><strong>Dockerfile 常用的指令</strong></p><p class="ql-align-justify">根据上面的例子，我们已经差不多知道了 Dockerfile 的组成以及指令的编写过程，我们再来理解一下这些常用命令就会得心应手了。</p><p class="ql-align-justify">由于 Dockerfile 中所有的命令都是以下格式：INSTRUCTION argument ，指令(INSTRUCTION)不分大小写，但是推荐大写和 SQL 语句是不是很相似呢?下面我们正式来讲解一下这些指令集吧。</p><p class="ql-align-justify"><strong>FROM</strong></p><p class="ql-align-justify">FROM 是用于指定基础的 images ，一般格式为 FROM or FORM :。</p><p class="ql-align-justify">所有的 Dockerfile 都应该以 FROM 开头，FROM 命令指明 Dockerfile 所创建的镜像文件以什么镜像为基础，FROM 以后的所有指令都会在 FROM 的基础上进行创建镜像。</p><p class="ql-align-justify">可以在同一个 Dockerfile 中多次使用 FROM 命令用于创建多个镜像。比如我们要指定 Python 2.7 的基础镜像，我们可以像如下写法一样：</p><pre>FROM python:2.7 <br></pre><p class="ql-align-justify"><strong>MAINTAINER</strong></p><p class="ql-align-justify">MAINTAINER 是用于指定镜像创建者和联系方式，一般格式为 MAINTAINER 。</p><p class="ql-align-justify">这里我设置成我的 ID 和邮箱：</p><pre>MAINTAINER Angel_Kitty &lt;angelkitty6698@gmail.com&gt; <br></pre><p class="ql-align-justify"><strong>COPY</strong></p><p class="ql-align-justify">COPY 是用于复制本地主机的 (为 Dockerfile 所在目录的相对路径)到容器中的 。</p><p class="ql-align-justify">当使用本地目录为源目录时，推荐使用 COPY 。一般格式为 COPY 。</p><p class="ql-align-justify">例如我们要拷贝当前目录到容器中的 /app 目录下，我们可以这样操作：</p><pre>COPY . /app <br></pre><p class="ql-align-justify"><strong>WORKDIR</strong></p><p class="ql-align-justify">WORKDIR 用于配合 RUN，CMD，ENTRYPOINT 命令设置当前工作路径。</p><p class="ql-align-justify">可以设置多次，如果是相对路径，则相对前一个 WORKDIR 命令。默认路径为/。一般格式为 WORKDIR /path/to/work/dir。</p><p class="ql-align-justify">例如我们设置 /app 路径，我们可以进行如下操作：</p><pre>WORKDIR /app <br></pre><p class="ql-align-justify"><strong>RUN</strong></p><p class="ql-align-justify">RUN 用于容器内部执行命令。每个 RUN 命令相当于在原有的镜像基础上添加了一个改动层，原有的镜像不会有变化。一般格式为 RUN 。</p><p class="ql-align-justify">例如我们要安装 Python 依赖包，我们做法如下：</p><pre>RUN pip install -r requirements.txt <br></pre><p class="ql-align-justify"><strong>EXPOSE</strong></p><p class="ql-align-justify">EXPOSE 命令用来指定对外开放的端口。一般格式为 EXPOSE [ ...]。</p><p class="ql-align-justify">例如上面那个例子，开放5000端口：</p><pre>EXPOSE 5000 <br></pre><p class="ql-align-justify"><strong>ENTRYPOINT</strong></p><p class="ql-align-justify">ENTRYPOINT 可以让你的容器表现得像一个可执行程序一样。一个 Dockerfile 中只能有一个 ENTRYPOINT，如果有多个，则最后一个生效。</p><p class="ql-align-justify">ENTRYPOINT 命令也有两种格式：</p><ul><li>ENTRYPOINT ["executable", "param1", "param2"] ：推荐使用的 Exec 形式。</li><li>ENTRYPOINT command param1 param2 ：Shell 形式。</li></ul><p class="ql-align-justify">例如下面这个，我们要将 Python 镜像变成可执行的程序，我们可以这样去做：</p><pre>ENTRYPOINT ["python"] <br></pre><p class="ql-align-justify"><strong>CMD</strong></p><p class="ql-align-justify">CMD 命令用于启动容器时默认执行的命令，CMD 命令可以包含可执行文件，也可以不包含可执行文件。</p><p class="ql-align-justify">不包含可执行文件的情况下就要用 ENTRYPOINT 指定一个，然后 CMD 命令的参数就会作为 ENTRYPOINT 的参数。</p><p class="ql-align-justify">CMD 命令有三种格式：</p><ul><li>CMD ["executable","param1","param2"]：推荐使用的 exec 形式。</li><li>CMD ["param1","param2"]：无可执行程序形式。</li><li>CMD command param1 param2：Shell 形式。</li></ul><p class="ql-align-justify">一个 Dockerfile 中只能有一个 CMD，如果有多个，则最后一个生效。而 CMD 的 Shell 形式默认调用 /bin/sh -c 执行命令。</p><p class="ql-align-justify">CMD 命令会被 Docker 命令行传入的参数覆盖：docker run busybox /bin/echo Hello Docker 会把 CMD 里的命令覆盖。</p><p class="ql-align-justify">例如我们要启动 /app ，我们可以用如下命令实现：</p><pre>CMD ["app.py"] <br></pre><p class="ql-align-justify">当然还有一些其他的命令，我们在用到的时候再去一一讲解一下。</p><p class="ql-align-justify"><strong>构建 Dockerfile</strong></p><p class="ql-align-justify">我们大体已经把 Dockerfile 的写法讲述完毕，我们可以自己动手写一个例子：</p><pre>mkdir static_web <br>cd static_web <br>touch Dockerfile <br></pre><p class="ql-align-justify">然后 vi Dockerfile 开始编辑该文件，输入 i 开始编辑。以下是我们构建的 Dockerfile 内容：</p><pre>FROM nginx <br>MAINTAINER Angel_Kitty &lt;angelkitty6698@gmail.com&gt; <br>RUN echo '&lt;h1&gt;Hello, Docker!&lt;/h1&gt;' &gt; /usr/share/nginx/html/index.html <br></pre><p class="ql-align-justify">编辑完后按 esc 退出编辑，然后 ：wq写入，退出。</p><p class="ql-align-justify">我们在 Dockerfile 文件所在目录执行：</p><pre>docker build -t angelkitty/nginx_web:v1 . <br></pre><p class="ql-align-justify">我们解释一下：</p><ul><li>-t 是为新镜像设置仓库和名称</li><li>angelkitty 为仓库名</li><li>nginx_web 为镜像名</li><li>：v1 为标签(不添加为默认 latest )</li></ul><p class="ql-align-justify">我们构建完成之后，使用 Docker Images 命令查看所有镜像，如果存在 REPOSITORY 为 Nginx 和 TAG 是 v1 的信息，就表示构建成功。</p><p class="ql-align-center"><br></p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/1540437483933ff478b60d5" img_width="500" img_height="276" alt="这可能是最为详细的Docker入门吐血总结" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-center"><br></p><p class="ql-align-justify">接下来使用 docker run 命令来启动容器：</p><pre>docker run --name nginx_web -d -p 8080:80 angelkitty/nginx_web:v1 <br></pre><p class="ql-align-justify">这条命令会用 Nginx 镜像启动一个容器，命名为 nginx_web ，并且映射了 8080 端口。</p><p class="ql-align-justify">这样我们可以用浏览器去访问这个 Nginx 服务器：http://localhost:8080/ 或者 http://本机的 IP 地址：8080/，页面返回信息：</p><p class="ql-align-center"><br></p><div class="pgc-img"><img src="http://p9.pstatp.com/large/pgc-image/15404374839230f36285646" img_width="500" img_height="122" alt="这可能是最为详细的Docker入门吐血总结" inline="0"><p class="pgc-img-caption"></p></div><p class="ql-align-center"><br></p></div>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何高逼格的给同事做 Elasticsearch 技术分享]]></title>
        <id>https://i.plbear.com/post/how-to-get-started-with-elasticsearch-tutorial</id>
        <link href="https://i.plbear.com/post/how-to-get-started-with-elasticsearch-tutorial">
        </link>
        <updated>2019-07-22T14:35:19.000Z</updated>
        <content type="html"><![CDATA[<div><p>如果你有机会在公司内部做一次Elasticsearch 技术分享，如何才能讲的逼格高，又接地气，那么建议从以下几个方面展开，大家有好的想法，也欢迎文章留言交流。</p><h1>1、可视化展示ELK效果</h1><div class="pgc-img"><img src="http://p3.pstatp.com/large/pgc-image/e6f0b99ab0204c2f89398a825576ea86" img_width="1080" img_height="592" alt="如何高逼格的给同事做 Elasticsearch 技术分享" inline="0"><p class="pgc-img-caption"></p></div><p>如果条件允许，demo的内容是：通过logstash 同步日志或数据库（oracle、mysql）表的数据到 Elasticsearch，然后通过kibana进行可视化。</p><p>1、通过Canvas对数据进行可视化布局与展现，可以实现非常酷炫的大屏展示效果。2、展示实时数据的数据量。3、展示你定的几个维度的数据信息。</p><p>这么切入的目的：很直观，很明显，很接地气。用到ELK技术栈的内容，有带动性，让参与的同事不犯困且很容易让大家对它产生兴趣。</p><h1>2、 Elk stack大家族简介</h1><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/be95b5a3cb294445bac60559329a2d8f" img_width="1024" img_height="422" alt="如何高逼格的给同事做 Elasticsearch 技术分享" inline="0"><p class="pgc-img-caption"></p></div><p>考虑到不同受众关注点不同。结合业务的数据的特点，从输入、中间处理、存储&amp;检索、分析等全数据流环节展开。</p><p>2.1 输入</p><p>Elastic 支持的输入包含但不限于：</p><p>1、日志类数据：类log4j.log，apache log等，可借助 beats或logstash同步</p><p>2、关系型数据库：mysql oracle pgsql等</p><p>3、非关系型数据库:mongodb redis等</p><p>4、实时数据流：flink spark kafka hdfs等</p><p>5、大数据：hadoop hdfs等</p><p>此处的不同数据的导入，Lostash有丰富的input/output插件，支持N多不同数据源接入，估计同事也会眼前一亮。</p><p>2.2 中间处理ETL</p><p>基础数据很可能是异构的数据，中间的ETL非常重要。logstash filter、elasticsearch ingest 都具备ETL功能。</p><p>2.3 存储&amp;检索</p><p>基于合理的数据建模，在Elastic落地存储，Elastic提供全文检索、数据聚合等。</p><p>2.4 分析</p><p>强调一下，kibana的可视化和监控功能。</p><p>2.5 ELKB认知</p><p>Elastic Stack数据平台由Logstash、Beats、ElasticSearch和Kibana四大核心产品组成，在数据摄取、存储计算分析及数据可视化方面有着无可比拟的优势。</p><p>1、E = Elasticsearch，在存储、计算和分析方面，ElasticSearch允许执行和合并多种类型的搜索，解决不断涌现的各种用例，并具有极高的可用性及容错性，充分保障集群安全。</p><p>2、L = Logstash, Logstash 是开源的服务器端数据处理管道，可同时从多个来源采集、转换数据，并将数据发送到存储库中。</p><p>3、K = Kibana，Kibana作为用户界面的核心，集成了丰富的可视化工具、界面交互开发工具和管理工具，帮助开发人员将数据轻松分享给任何人，甚至还能通过机器学习来监测数据中的隐藏异常并追溯其来源。</p><p>4、B = Beats，Beats作为轻量级的数据搬运工，集合了多种单一用途数据采集器，将数据发送给Logstash或ElasticSearch，其可扩展的框架及丰富的预置采集器将使工作事半功倍。</p><p>以上，主要从大而全的维度，讲解ELK，给大家带来全景认知。</p><p>以这四大核心产品为基础构建的Elastic数据平台实现了数据实时性、相关性及扩展性的完美结合，不仅可以处理各种数据，还能深入挖掘数据的内在关联并迅速呈现，彻底解决企业的大数据实时处理难题。</p><h1>3、 Elasticsearch 是什么？</h1><p>展示的过程中：可以通过kibana的dsl进行展开的讲解。注意例子：可以提前准备好，规划好时间，不用现场敲代码。</p><p>此时可以借助head插件或者kibama-dev讲解。</p><p>3.1 Elasticsearch的组成</p><p>如果是集群部署的更好。讲解内容包括：</p><ul><li class="ql-align-justify">集群、</li><li class="ql-align-justify">索引、</li><li class="ql-align-justify">分片、</li><li class="ql-align-justify">副本、</li><li class="ql-align-justify">分段、</li><li class="ql-align-justify">倒排索引。</li><li class="ql-align-justify">ES的底层是lucene等。</li></ul><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/423dfe02f753443a8ecba9e0f0a774f1" img_width="755" img_height="459" alt="如何高逼格的给同事做 Elasticsearch 技术分享" inline="0"><p class="pgc-img-caption"></p></div><p>3.2 Elasticsearch分布式可扩展的特性</p><p>强调Elasticsearch可以支持PB级别甚至更高级别数据量的存储。</p><p>3.3 强调Elasticsearch特点</p><p>1、简单的restful api，天生的兼容多语言开发。2、分布式的实时文件存储，每个字段都被索引且可用于搜索。3、分布式的实时分析搜索引擎，海量数据下近实时秒级响应。4、易扩展，处理PB级结构化或非结构化数据。</p><h1>4、 Elasticsearch 能做什么？</h1><p>4.1 全文检索等</p><p>其实也可以类比一下mysql，强调一下：关系型数据库一些检索是做不到的。对比的目的：因为大家都熟悉关系型数据库，这样能够加深理解。</p><p>也可以类比下Google，百度等传统的搜索引擎。告诉同事，其实他们可以做的功能我们都可以做。比如：全文检索，高亮，分页，统计聚合，高级检索等。</p><p>检索的分类：</p><p>1、精确匹配。2、模糊检索。3、正则检索。4、强调全文检索。强调他的快。基于倒排索引实现。5、等等。</p><p>检索类型可以画一个脑图。其实可以，举个例子。演示一下最好。</p><p>4.2 聚合分析</p><p>这里也可以举一下例子。比如:对比一下mycle的group by,limit等功能点讲解。聚合的分类很多，可以抽几个进行讲解。</p><p>4.3 应用场景</p><p>1、记录和日志分析</p><p>2、采集和组合公共数据</p><p>3、全文搜索及个性化推荐</p><p>4、事件数据和指标</p><p>5、数据可视化</p><h1>5、Elasticsearch 极易上手且性能牛逼</h1><p>主流的Java、python、ruby等。C++等也有个人开源维护API。</p><p>可以借助他山之石，把其他公司的应用场景、对应的硬件资源、写入、查询、QPS等性能指标展示出来，凸显牛逼功能和性能。</p><div class="pgc-img"><img src="http://p3.pstatp.com/large/pgc-image/d31ef223121a415188541e227f4de895" img_width="666" img_height="281" alt="如何高逼格的给同事做 Elasticsearch 技术分享" inline="0"><p class="pgc-img-caption"></p></div><h1>6、Elastic 前景光明</h1><p>Elasticsearch在DBRanking 数据库排行榜搜索引擎部分近几年一直处于第一名的领先优势。</p><div class="pgc-img"><img src="http://p9.pstatp.com/large/pgc-image/b41ccbaa0bd14d7d8e8b5141c22fe5be" img_width="913" img_height="468" alt="如何高逼格的给同事做 Elasticsearch 技术分享" inline="0"><p class="pgc-img-caption"></p></div><p>基于Elastic的分布式、可扩展性、良好的性能，BAT、滴滴、美团、小米、华为、携程、360、有赞等几乎所有的主流互联网公司甚至婚庆网站的搜索引擎已经都已经转成ES了。</p><p>那么咱们公司还在犹豫什么呢？</p><h1>7、Elastic技术社区非常活跃</h1><p>这里主要强调，出了问题也不用怕，一个人搞不定，还有国外、国内官方论坛、社区，基本很短时间都能解决问题。</p><p>交流的高效性、问题解决的速度、github迭代更新的速度。以及最近的版本更新的速度:比如7.0的发布，7.0的新特性。大家也会对新的特性充满期待。速度提升快。</p><p>估计讲完这些大家都会跃跃欲试了。</p><h1>8、Elasticsearch 相对薄弱的环节</h1><p>有所为，有所不为。</p><p>8.1 多表关联</p><p>不能简单认为，将mysql同步到Elasticsearch就能解决问题了。</p><p>我们除了看到基于倒排索引Elasticsearch的全文检索的强大，也要看到Elasticsearch对于关系型数据库多表关联的支持相对薄弱，nested类型、Join类型的多表关联操作大数据场景下都会有性能问题。</p><p>8.2 深度分页</p><p>从性能角度考虑，Elasticsearch默认支持10000条数据的返回，除非修改maxresultwindow参数。</p><p>也就是会出现越往后翻页越慢的情况。这点，补救方案：scroll+scroll_after实现。</p><p>但是，更长远角度，建议：参考Google、百度的深度分页实现。</p><p>8.3 实时性</p><p>Elasticsearch是近实时的系统，不是准实时。受限于：refresh_inteval设置，有最快1s延时。</p><p>准实时要求高的场景，建议选型注意。</p><h1>9 小结</h1><p>ELK远不止文章中提到的这些内容，可以说，以上列举的只是<strong>冰山一角</strong>的点，N多底层原理（索引分片原理、写入原理、检索原理、倒排索引原理、高可靠性原理、大数据实战场景等）都没有提及或展开。</p></div>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[架构成长之路：分布式秒杀系统之如何防止单个用户重复秒杀下单？]]></title>
        <id>https://i.plbear.com/post/jia-gou-cheng-chang-zhi-lu-fen-bu-shi-miao-sha-xi-tong-zhi-ru-he-fang-zhi-dan-ge-yong-hu-chong-fu-miao-sha-xia-dan</id>
        <link href="https://i.plbear.com/post/jia-gou-cheng-chang-zhi-lu-fen-bu-shi-miao-sha-xi-tong-zhi-ru-he-fang-zhi-dan-ge-yong-hu-chong-fu-miao-sha-xia-dan">
        </link>
        <updated>2019-07-20T17:23:25.000Z</updated>
        <content type="html"><![CDATA[<div class="article-content"><div><p>电子交易的一个很基本的问题，就是避免用户下重复订单。用户明明想买一次，结果一看下了两个单。如果没有及时发现，就会带来额外的物流成本和扯皮。对商家的信誉也不好看。</p><p>从技术上看，这是一个分布式一致性问题；但实际上，技术无法100%解决这类问题，得结合多种手段综合处理。这里就来说道说道。</p><h1>为啥会下重了呢？</h1><p><strong>原因1：客户端bug</strong></p><p>比如下单的按键在点按之后，在没有收到服务器请求之前，按键的状态没有设为<strong>已禁用</strong>状态，还可以被按。又或者，在触摸屏下，用户手指的点按可能被手机操作系统识别为多次点击。</p><p>嗯，谁能保证客户端不偶尔出个什么bug 呢。</p><p><strong>原因2: 超时</strong></p><p>用户的设备与服务器之间可能是不稳定的网路。这样一个下单请求过去，返回不一定回得来。超时最大的问题是: 从用户的角度，他无法确定下单的请求是还没到服务器，还是已经到了服务器但是返回丢失了。——<strong>用户无法区分到底这个单下了还是没下</strong>。</p><p>这样在等待一个超时后，UI可能会提示用户下单超时，请重复再试。</p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/a3c09c7618b447d1b0a265c1620bd23c" img_width="1000" img_height="244" alt="架构成长之路：分布式秒杀系统之如何防止单个用户重复秒杀下单？" inline="0"><p class="pgc-img-caption"></p></div><p><strong>原因3: 用户的App闪退/人工强退，之后重新打开重新下单</strong></p><p>也许可以使用一些技术手段避免用户下重单，但是心急的用户可能会重启流程/重启App/重启手机。在这种强制的手段下，任何技术手段都会失效——用户压根就不让你的技术执行，你怎么玩？</p><p><strong>在这些条件下，如何避免用户多下了一笔订单呢？</strong></p><h1>用幂等防止重复订单</h1><p>在技术方面，这是一个分布式一致性的问题，即客户端和服务器端对某个订单是否成功/失败达成一致。防止重单的关键是<strong>使用一个由客户端生成的，可用于避免重复的key</strong>，俗称<strong>dedup key</strong>（deduplicate key之意）。这个key可以用任意可以保证全局唯一性的方式生成，比如uuid。客户端和服务器需要使用这个dedup key作为串联条件，一起解决去重问题。</p><h1>客户端的流程</h1><p>客户端需要实现这样一个下单界面。用户点击【确认下单】时，应该产生一个独一无二的dedup key，连定订单数据发送给服务器端。在服务器返回之前，该界面应该一直等待，直到服务器响应成功/失败或者超时发生（比如15秒后，收不到服务器响应）。如果超时发生，应该向用户提示是否重试下单或者退出该界面。当用户点击【重试】时，应该用刚刚生成的dedup key来再次发送下单请求——如果用户一直不退出这个流程，每次用户点击重试，都应该用这个dedup key来重试下单，直到服务器正常返回，或者用户放弃返回。</p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/3659880202454777a9d7a649a524456f" img_width="1000" img_height="528" alt="架构成长之路：分布式秒杀系统之如何防止单个用户重复秒杀下单？" inline="0"><p class="pgc-img-caption">下单的客户端流程</p></div><h1>后端数据表设计</h1><p>后端在订单数据表中，需要增加dedup_key这列，并设置<strong>唯一约束</strong>。</p><pre>create table order(<br> # ...<br> dedup_key varchar(60) not null comment 'key to pretend order duplication',<br> # ...<br> unique uniq_dedup_key(dedup_key)<br>);<br></pre><h1>下单的实现</h1><p>在实现下单逻辑时，基于该dedup_key实现一个"create-or-get"语义的下单接口——简单说就是</p><blockquote><p>如果带有指定dedup_key的订单已经存在，则直接返回；否则，用该dedup_key下单。</p></blockquote><p>用伪代码表示大概是：</p><pre>@Transactional<br>Order createOrder(Integer userId, String prodCode, Decimal amount, String dedupKey) {<br> try {<br> String orderId = createOrder(userId, prodCode, amount, deupKey); // insert a new order<br> Order order = getOrderById(orderId); // read order from db<br> order.setDuplicated(false);<br> return order;<br> } catch(UniqueKeyViolationException e) {<br> // if duplicated order has existed<br> Order order = getOrderByDedupKey(dedupKey);<br> order.setDuplicated(true);<br> return order;<br> } catch (Exception e) {<br> // hanlde other errors and rollback transaction ...<br> }<br>}<br></pre><p>这时，这段下单代码总是能返回一个订单（除非发生一些DB挂了之类的错误），要么是新创建的，要么就是一个已经存在的单。注意，<strong>最好在订单里增加一个属性（比如例子中用“duplicated”）来表示这个订单是这次新生成的，还是因为幂等而直接返回的</strong>。这样前端可以有针对性的对这两种情况提示不同的文案。</p><h1>技术搞定幂等就足够了吗？</h1><p>上面的流程没有考虑一种情况，就是用户中途强制退出客户端，或者直接点击【返回】回到产品页，重新走下单流程。这个时候客户端就无法判断用户到底是想重新下单，还是想第二次下单。此时，可以从产品设计上考虑一下。</p><p>比如，在客户端缓存一个表，记录所有没有确认结果的订单。</p><p> 产品代码 产品数量 金额 dedup key 未确认订单1 AAA 1 1000 xxx-yyy-zzz 未确认订单2 BBB 2 500.00 Aaa-bbb-ccc ... 通过这个表，我们可以<strong>猜</strong>一下用户的意图。比如，如果用户重新提交了一笔订单，其产品代码、金额与表中记录的某条完全一致，就可以提示一下用户:</p><div class="pgc-img"><img src="http://p1.pstatp.com/large/pgc-image/f1df5062d20e4def95ab2fc7d456d4d4" img_width="676" img_height="274" alt="架构成长之路：分布式秒杀系统之如何防止单个用户重复秒杀下单？" inline="0"><p class="pgc-img-caption">提示一下用户是不是下重了</p></div><p>如果用户想重试，可以继续用表中对应记录的dedup key重新发起下单。</p><p>这样不是绝对准确的，仅仅是尽量的减少用户误操作的可能性。当然，在产品设计上可以能出于用户交互简化，不一定真的会这样做。这就需要其他机制来配合，比如“通知”。</p><h1>通知</h1><p>一旦服务器下单成功，可以通过某种通知机制（如APNS、Websocket）主动将订单推送至客户端，强行让客户端重新拉取最新的订单信息，并配合“未确认订单”表，以通知Badge/弹框等方式提示用户刚刚一笔状态未知的订单成功/失败了。</p><p>另外一种手段就是，服务器端实时扫描用户的下单数据，一旦发现可能的重单，就立刻通知客服<strong>主动</strong>联系用户，及时处理问题。</p><h1>如果还拦不住……</h1><p>经过层层阻拦，可能还是会有用户误操作，直到收到两份商品才发现下重了。此时就得依靠运营/客服的支持了。提供用户申诉的手段，让用户提出哪些订单是重复的，并且由销售系统店家、商品提供者和买家三方共同根据用户操作的记录来协商如何处理。我们需要让技术帮助让这种人工处理的几率尽量小。因为每次处理都会耗费较大的人工成本，和一些运营费用（比如赔款、小礼品等等）。</p><h1>这么麻烦，有必要吗？</h1><p>这要分业务场景，对于很多电商来讲可能不是必要的。因为从用户下单到订单被审核处理进入到发货阶段需要一定的时间（可能是半小时～1小时），并且一定是支付成功后才会开始进行下一步流程。在这个时间段，用户大概率能从网络错误中恢复过来，自行区分是否下重了。配合客服主动提示，会极大的降低出问题的概率。</p><p>但是对于理财服务来说，这种去重就非常必要了。因为</p><ul><li><strong>“下单+支付”</strong>。用户购买理财往往是“下单+支付”一起执行，不可以单独下单/单独支付</li><li><strong>用户的入金可能很大</strong>。例如数万，数十万</li><li><strong>准确性丢失</strong>。如果一旦下重了，有可能影响用户的投资资金配置的准确性。</li><li><strong>撤销难</strong>。部分理财产品存在下单不可撤销的问题；或者即便撤销，资金也无法立刻回款。等到回款，可能这个购入机会就错过去了。例如对于基金交易，错过1个交易日，价格就会发生变动。</li></ul><p>基于这些特性，在理财产品中，就要竭尽全力的去重。</p><h1>结论</h1><p>以上所讲是处理重复订单问题的一般方法。你可以注意到，无论多么好的技术，也不可能100%的拦截所有的可能性，必须依靠<strong>技术+产品设计+运营支持</strong>的综合手段才能解决这类问题。</p><p>另外，本文还没涉及到关于订单支付（支付也可能重复哦）带来的进一步的复杂性，也没有讨论在高并发情况下的性能优化，仅仅讨论下单本身的问题。所以可以想象一下现实中的交易业务比这里的说的要复杂得多。</p><p>本文介绍的原理也不仅仅适用于防止下重复订单，而是可以应用到任何<strong>需要“创建一个不应该重复资源”</strong>的场景，比如“向用户发一条通知”，“触发一次不能重复的批处理任务！</p></div></div>]]></content>
    </entry>
</feed>